{"version":3,"file":"min.js","sources":["globalmodels/contextModel.js","globalmodels/layoutModel.js","widgets/evidence.js","text.js","../templates/resetPassword.html!text","widgets/login.js","widgets/settings.js","router.js","globalmodels/sidebarModel.js","widgets/pageOption.js","../templates/sidebar.html!text","widgets/sidebar.js","app.js","libs/jquery/jquery.ui.touch-punch.min.js","main.js","pathway/models/treeContext.js","pathway/models/nodeModel.js","pathway/models/pathwayCollection.js","pathway/models/triggerGroupCollection.js","pathway/models/treeModel.js","../templates/pathway/detailSearch.html!text","../templates/pathway/resultRow.html!text","pathway/internalViews/detailSearchBox.js","../templates/pathway/ListBox.html!text","../templates/pathway/groupResultRow.html!text","pathway/internalViews/detailListBox.js","../templates/pathway/multiSelectSearchPanel.html!text","pathway/internalViews/multiSelectSearch.js","pathway/modalViews/detailEditor.js","../templates/pathway/detailSection.html!text","pathway/internalViews/detailGroup.js","Helpers.js","../templates/pathway/disjoinedGroups.html!text","../templates/pathway/RuleWizard.html!text","pathway/modalViews/ruleWizard.js","../templates/pathway/newPathwayFolder.html!text","pathway/modalViews/newPathwayFolder.js","../templates/pathway/sendProtocol.html!text","pathway/modalViews/sendProtocol.js","../templates/pathway/NewNodeModal.html!text","../templates/pathway/NewProtocolModal.html!text","../templates/reminderRow.html!text","singleRow/reminderRow.js","pathway/modalViews/editNode.js","../templates/pathway/sendFollowups.html!text","pathway/modalViews/sendFollowups.js","pathway/Helpers.js","../templates/pathway/triggerEditor.html!text","pathway/modalViews/detailEditor_archaic.js","pathway/modalViews/nodeEditor.js","../templates/pathway/newPathway.html!text","pathway/modalViews/newPathway.js","../templates/pathway/richTextEditor.html!text","pathway/modalViews/sidePanelEditor.js","../templates/pathway/deleteModal.html!text","pathway/modalViews/DeleteDialog.js","pathway/modalViews/protocolEditor.js","../templates/pathway/detailChooserEntry.html!text","pathway/internalViews/detailSelector.js","../templates/pathway/protocolNode.html!text","pathway/internalViews/protocolNode.js","../templates/pathway/treeNode.html!text","pathway/internalViews/treeNode.js","../templates/pathway/triggerNode.html!text","pathway/internalViews/triggerNode.js","../templates/pathway/treeNodeActionSet.html!text","pathway/internalViews/treeNodeActionSet.js","../templates/pathway/pathwayListEntry.html!text","globalmodels/scrollCollection.js","pathway/models/historyCollection.js","../templates/pathway/pathwayHistoryRow.html!text","pathway/singleRows/historyRow.js","../templates/pathway/historyScroll.html!text","widgets/pathway/historyList.js","pathway/singleRows/pathRow.js","globalmodels/summaryModel.js","globalmodels/patientModel.js","globalmodels/spendingModel.js","globalmodels/orderCollection.js","globalmodels/customerCollection.js","globalmodels/auditCollection.js","globalmodels/patientCollection.js","globalmodels/userCollection.js","globalmodels/histogramModel.js","globalmodels/interactionCollection.js","globalmodels/alertCollection.js","widgets/welcome.js","libs/jquery/jquery.ui.autocomplete.html.js","widgets/patientSearch.js","widgets/datepicker-calendar.js","../templates/patientRow.html!text","singleRow/patientRow.js","../templates/patientList.html!text","widgets/patientList.js","widgets/customerCreation.js","widgets/providerProfile.js","../templates/userRow.html!text","../templates/auditRow.html!text","singleRow/auditRow.js","libs/jquery/jquery-mousestop-event.js","libs/jquery/Blob.js","libs/jquery/FileSaver.min.js","widgets/auditList.js","../templates/auditScroll.html!text","singleRow/userRow.js","../templates/userScroll.html!text","widgets/userList.js","widgets/encounterSummary.js","../templates/orderRow.html!text","../templates/alertRow.html!text","singleRow/alertRow.js","singleRow/orderRow.js","widgets/orderList.js","widgets/costtable.js","../templates/customerRow.html!text","../templates/widgetModal.html!text","widgets/widgetModal.js","../templates/adminSettings.html!text","widgets/adminSettings.js","singleRow/customerRow.js","widgets/customerList.js","widgets/costdonut.js","widgets/patientInfo.js","widgets/alertList.js","widgets/spend_histogram.js","widgets/maveninfo.js","widgets/pathway.js","widgets/datepicker-chart.js","widgets/topBanner.js","../templates/pathway/toolbar.html!text","widgets/pathway/toolbar.js","../templates/pathway/treeTemplate.html!text","../templates/pathway/insertDiv.html!text","widgets/pathway/TreeView.js","../templates/pathway/pathwaysList.html!text","../templates/pathway/pathwayFolderEntry.html!text","pathway/singleRows/folderRow.js","../ace/assets/js/jquery.nestable.js","libs/nestedSortable/nestedSortable.js","widgets/pathway/pathwaysList.js","widgets/pathway/triggerEditor.js","../templates/interactionRow.html!text","singleRow/interactionRow.js","widgets/interactionList.js","jquery-stub.js","../templates/settings.html!text","../templates/customerList.html!text","../templates/welcome.html!text","../templates/interactionScroll.html!text","../templates/patientInfo.html!text","../templates/topBanner.html!text","../templates/maveninfo.html!text","../templates/providerProfile.html!text","textstub.js"],"names":[],"mappings":"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","sourcesContent":["/***************************************************************************\n * Copyright (c) 2014 - Maven Medical\n * AUTHOR: 'Asmaa Aljuhani'\n * DESCRIPTION: This Javascript file is for context that will be used within\n *              the application.\n *              This file needed to be called in all other modules.\n * PREREQUISITE: libraries should be predefine in main.js\n * LAST MODIFIED FOR JIRA ISSUE: MAV-98\n **************************************************************************/\n\ndefine('globalmodels/contextModel',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone'    // lib/backbone/backbone\n], function ($, _, Backbone) {\n\n    \n    function setActiveStyleSheet(title) {\n\tvar i, a, main;\n\tfor(i=0; (a = document.getElementsByTagName(\"link\")[i]); i++) {\n\t    if(a.getAttribute(\"rel\").indexOf(\"style\") != -1 && a.getAttribute(\"title\")) {\n\t\ta.disabled = true;\n\t\tif(a.getAttribute(\"title\") == title) a.disabled = false;\n\t    }\n\t}\n    }\n\n    var contextModel;\n\n    function scheduleLogout(offset) {\n\tvar expiration = readCookie('valid-through');\n\tif(expiration) {\n\t    var remaining = expiration - (new Date()) + offset;\n\t    if (remaining > 0) {\n\t\tsetTimeout(function() {scheduleLogout(offset)}, remaining);\n\t    } else {\n\t\teraseCookie('valid-through');\n\t\tlocation.href = '#logout';\n\t    }\n\t}\n    }\n\n    var loginCallback = function (res) {\n        console.log('login call back', contextModel);\n        var offset = (new Date()) - readCookie('now')\n        scheduleLogout(offset);\n\tcontextModel.set({'loginTemplate':null});\n\t//if(res.get('stylesheet')) {\n\n\t    setActiveStyleSheet('demo');\n\t//}\n\t// each row is {element, widget, template}\n\tvar widgetlist = res.get('widgets');\n\tvar viewlist = [];\n\n\tvar templatelist = [];\n\tfor (var ind in widgetlist) {\n\t    var row = widgetlist[ind];\n\t    viewlist.push('widgets/'+row.widget);\n\t\ttemplatelist.push('text!/templates/'+row.template);\n\t    console.log('adding view '+row.widget +' to element #'+row.element +\n\t\t\t' with template '+ row.template); //templatelist[templatelist.length-1]);\n\t}\n\trequire(viewlist.concat(templatelist), function () {\n\t    for(var i=0;i<viewlist.length;i++) {\n\n        var el\n        if (widgetlist[i].element =='contentRow'){\n            $('#dynamic-content').append(\"<div class='row content-row'></div>\")\n\t    el = $('.row', $('#dynamic-content')).last()\n\t} else if (widgetlist[i].element == 'floating-right') {\n            $('#floating-right').append(\"<div class='row content-row'></div>\")\n\t    el = $('.row', $('#floating-right')).last()\n\t} else if (widgetlist[i].element =='floating-left') {\n            $('#floating-left').append(\"<div class='row content-row'></div>\")\n\t    el = $('.row', $('#floating-left')).last()\n        } else if (widgetlist[i].element =='fixed-topB') {\n            $('#fixed-topB').append(\"<div class='col-xs-12'></div>\")\n\t    el = $('.col-xs-12', $('#fixed-topB')).last()\n        } else {\n            el = $(\"#\"+ widgetlist[i].element)\n\t}\n\ttry {\n            new arguments[i]({template: arguments[i+viewlist.length], el: el})\n\t    } catch(err) {\n\t\tconsole.log('failed to start widget ', widgetlist[i], err)\n\t    }\n\t}\n\t    $(\"#content\").show();\n\t    Backbone.history.loadUrl(Backbone.history.fragment);\n\t})\n    }\n    \n    var ContextModel = Backbone.Model.extend({\n\turlRoot: '/login',\n        defaults: {\n            page: null,\n\t    user: null,\n\t    customer: null,\n            userAuth: '',\n            patients: '',\n            patientAuth: '',\n            patientName:'',\n            pathid: 0,\n            canonical: null,\n            provider: null,\n            encounter: null,\n            department: null,\n\t    searchPatient: null,\n\t    searchDiagnosis: null,\n\t    loginTemplate: 'login.html',\n        settingsTemplate: 'settings.html'\n        },\n\ttoParams: function() {\n\t    //console.log(this);\n\t    var ret = _.pick(this.attributes,['startdate','enddate','encounter',\n\t\t \t\t\t      'patients','department', 'pathid']);\n        ret.id = ret.pathid\n\t    //console.log(ret);\n\t    for(var x in ret) {\n\t\tif(ret[x] === null || (x != 'provider' && ret[x] === '')) {delete ret[x];}\n\t    }\n\t    return ret;\n\t},\n        setUser: function (user, pw, oauth, customer, newpw) {\n\t    if (this.user != user || !this.userAuth) {\n\t\tthis.set({'user': user, 'customer': customer, 'login-message': null});\n\t\tvar that=this;\n\t\t\n\t\tvar data;\n\t\tif (pw) {\n\t\t    data = {user:user, password:pw, customer_id:customer};\n\t\t    } else {\n\t\t\tdata = {user:user, oauth:oauth, customer_id:customer};\n\t\t    }\n\t\tif(newpw)\n\t\t    data.newpassword=newpw;\n\t\tthis.fetch({success:  loginCallback,\n\t\t\t    error: function(request, response) { that.set(response.responseJSON);},\n\t\t\t    data: JSON.stringify(data),\n\t\t\t    type: 'POST'});\n\t    }\n\t},\n        autoSetUser: function (user, customer, userAuth, Login) {\n\t    var that=this;\n\t    \n\t    this.set({user:user, customer:customer, userAuth: null});\n\t    if (userAuth) {\n\t\tthis.fetch({success: loginCallback, \n\t\t\terror: function(request, response) { \n\t\t\t    that.set(response.responseJSON);\n\t\t\t    new Login({el: '#login-modal'})\n\t\t\t},\n\t\t\tdata: JSON.stringify({user:user,\n\t\t\t\t\t      customer_id: customer,\n\t\t\t\t\t      userAuth: userAuth}),\n\t\t\ttype: 'POST'});\n\t    } else if(document.cookie && (!user || readCookie('user')==user)) {\n\t\t    this.fetch({\n                url: '/refresh_login',\n                success: loginCallback,\n                error: function(){\n                    new Login({el: '#login-modal'})\n                }\n\t\t    });\n\t    } else {\n\t\tnew Login({el: '#login-modal'})\n\t    }\n\t}\n    });\n\n    contextModel = new ContextModel;\n    contextModel.on('change:page', function() {window.scrollTo(0,0)})\n    \n    return contextModel;\n});\n\n","/***************************************************************************\n * Copyright (c) 2014 - Maven Medical\n * AUTHOR: 'Asmaa Aljuhani'\n * DESCRIPTION: This Javascript file is for context that will be used within\n *              the application.\n *              This file needed to be called in all other modules.\n * PREREQUISITE: libraries should be predefine in main.js\n * LAST MODIFIED FOR JIRA ISSUE: MAV-98\n **************************************************************************/\n\ndefine('globalmodels/layoutModel',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone'    // lib/backbone/backbone\n], function ($, _, Backbone) {\n\n\n\n\n    var layoutModel;\n\n\n\n    var LayoutModel = Backbone.Model.extend({\n\t    defaults: {\n            fluidContent: false,\n            contentHeight: '400px'\n\n        },\n        applicationFunctions: new Backbone.Model({\n          'fluidContent': function(n){\n              if (n){\n                    $('#contentContainer').addClass('container-fluid')\n                    $('#contentContainer').removeClass('container')\n                } else {\n                    $('#contentContainer').removeClass('container-fluid')\n                    $('#contentContainer').addClass('container')\n                }\n          },\n          'contentHeight': function(n){\n            $('#contentContainer').css({'height': n})\n\n          }\n\n        }),\n        initialize: function(){\n            this.on('change', function(){\n                this.apply()\n            }, this )\n        },\n        apply: function(setToApply){\n            if (setToApply){\n                for (var i in setToApply){\n                    var cur = setToApply[i]\n                    this.applicationFunctions.get(cur)(this.get(cur))\n                }\n            } else {\n                for (var i in _.keys(this.attributes)){\n                    var cur = _.keys(this.attributes)[i]\n                    this.applicationFunctions.get(cur)(this.get(cur))\n                }\n\n            }\n\n\n        }\n\n\n\n    });\n\n    layoutModel = new LayoutModel;\n    \n    return layoutModel;\n});\n\n","/**\n * Created by devel on 3/27/14.\n */\n\ndefine('widgets/evidence',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n], function ($, _, Backbone) {\n\n    var Evidence = Backbone.View.extend({\n        el: '#modal-target',\n        initialize: function (options) {\n\t    this.evi = options['evi'];\n            _.bindAll(this, 'render');\n\t    this.render();\n        },\n        render: function () {\n\t    var that = this;\n\t    require(['text!../evidence/'+that.evi+'.html'],\n\t\t    function(evidenceTemplate) {\n\t\t\tvar template=_.template(evidenceTemplate);\n\t\t\tvar evidence_text=template({alert: that.evi});\n\t\t\t//console.log(evidence_text);\n\t\t\tthat.$el.append(evidence_text);\n\t\t\t$('#evidence-'+that.evi).modal();\n\t\t    });\n\t    return that;\n        }\n    });\n    return Evidence;\n});\n\n","/**\n * @license RequireJS text 2.0.10 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/text for details\n */\n/*jslint regexp: true */\n/*global require, XMLHttpRequest, ActiveXObject,\n  define, window, process, Packages,\n  java, location, Components, FileUtils */\n\ndefine('text',['module'], function (module) {\n    'use strict';\n\n    var text, fs, Cc, Ci, xpcIsWindows,\n    progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n    xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n    bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n    hasLocation = typeof location !== 'undefined' && location.href,\n    defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n    defaultHostName = hasLocation && location.hostname,\n    defaultPort = hasLocation && (location.port || undefined),\n    buildMap = {},\n    masterConfig = (module.config && module.config()) || {};\n\n    text = {\n        version: '2.0.10',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {\n                    }\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n            strip = false,\n            index = name.indexOf(\".\"),\n            isRelative = name.indexOf('./') === 0 ||\n                name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1, name.length);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n            match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                ((!uPort && !uHostName) || uPort === port);\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config.isBuild;\n\n            var parsed = text.parseName(name),\n            nonStripName = parsed.moduleName +\n                (parsed.ext ? '.' + parsed.ext : ''),\n            url = req.toUrl(nonStripName),\n            useXhr = (masterConfig.useXhr) ||\n                text.useXhr;\n\n            // Do not load if it is an empty: url\n            if (url.indexOf('empty:') === 0) {\n                onLoad();\n                return;\n            }\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n\t\t\t\t    parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n\t\t\t       \"define(function () { return '\" +\n                               content +\n                               \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n            extPart = parsed.ext ? '.' + parsed.ext : '',\n            nonStripName = parsed.moduleName + extPart,\n            //Use a '.js' file name so that it indicates it is a\n            //script that can be loaded across domains.\n            fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n\t\t\t\t\ttypeof process !== \"undefined\" &&\n\t\t\t\t\tprocess.versions && !!process.versions.node && !process.versions['node-webkit'])) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback, errback) {\n            try {\n                var file = fs.readFileSync(url, 'utf8');\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n                if (file.indexOf('\\uFEFF') === 0) {\n                    file = file.substring(1);\n                }\n                callback(file);\n            } catch (e) {\n                errback(e);\n            }\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n\t\t\t\t\t      text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        errback(err);\n                    } else {\n                        callback(xhr.responseText);\n                    }\n\n                    if (masterConfig.onXhrComplete) {\n                        masterConfig.onXhrComplete(xhr, url);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n\t\t\t\t\t\ttypeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n            encoding = \"utf-8\",\n            file = new java.io.File(url),\n            lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n            input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n            content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                if (line !== null) {\n                    stringBuffer.append(line);\n                }\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\n\t\t\t\t\t\t    typeof Components !== 'undefined' && Components.classes &&\n\t\t\t\t\t\t    Components.interfaces)) {\n        //Avert your gaze!\n        Cc = Components.classes,\n        Ci = Components.interfaces;\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\n\n        text.get = function (url, callback) {\n            var inStream, convertStream, fileObj,\n            readData = {};\n\n            if (xpcIsWindows) {\n                url = url.replace(/\\//g, '\\\\');\n            }\n\n            fileObj = new FileUtils.File(url);\n\n            //XPCOM, you so crazy\n            try {\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\n                    .createInstance(Ci.nsIFileInputStream);\n                inStream.init(fileObj, 1, 0, false);\n\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\n                    .createInstance(Ci.nsIConverterInputStream);\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\n\t\t\t\t   Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n\n                convertStream.readString(inStream.available(), readData);\n                convertStream.close();\n                inStream.close();\n                callback(readData.value);\n            } catch (e) {\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            }\n        };\n    }\n    return text;\n});\n\n","\ndefine('text!templates/resetPassword.html',[],function () { return '<div class = \"widget-column col-sm-12\">\\n<div class=\"modal-dialog modal-lg login\">\\n  <div class=\"modal-content\">\\n    <div class=\"modal-body\">\\n      <h3><span class=\"glyphicon glyphicon-repeat\"></span>EMR password reset</h3>\\n      <p><input id=\"ehr-user\" type=\"text\" name=\"user\" placeholder=\"EMR user name\"> </p>\\n      <p><input id=\"reset-customer\" type=\"text\" name=\"customer\" placeholder=\"Customer ID\"></p>\\n      <div id=\\'recaptcha-div\\'></div>\\n      <div>\\n        <button id=\"send-reset-password\">Send</button> reset password link to EMR account\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n';});\n\n","/**\n * Created by Tom on 6/11/14\n */\n\ndefine('widgets/login',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n], function ($, _, Backbone, contextModel) {\n\n    var Login = Backbone.View.extend({\n        initialize: function (options) {\n\t    contextModel.on('change:loginTemplate change:login-message', this.render, this);\n\t    $(\"#login-modal\").modal({'show':'true', 'backdrop':'static',keyboard:false});\n\t    this.user = '';\n\t    this.customer = '';\n\t    this.render();\n\t    var that = this\n\t    var domains = location.hostname.split('.')\n\t    if (domains.length == 3) {\n\t\t$.ajax({type: 'GET',dataType: 'json',url: \"/customer_id?abbr=\" + domains[0],\n\t\t       success: function(data) {\n\t\t\t   that.fixed_customer = data\n\t\t\t   var cust = $(\"#login-customer\")\n\t\t\t   cust.val(data)\n\t\t\t   cust.hide()\n\t\t       }})\n\t    }\n        },\n\tevents: {\n\t    'click #login-button': 'dologin',\n\t    'click #update-password': 'dologin',\n\t    'keyup #login-user':'doenterlogin',\n\t    'keyup #login-password':'doenterlogin',\n\t    'keyup #login-new-password':'doenterchange',\n\t    'click #reset-password': 'resetpassword',\n\t},\n\tresetpassword: function() {\n\t    var that=this\n\t    var text = 'text!/services/recaptcha'\n\t    require(['text!../templates/resetPassword.html', text, '//www.google.com/recaptcha/api/js/recaptcha_ajax.js'], \n\t\t    function(resetTemplate, recaptcha_key) {\n\t\t\tvar compiled = _.template(resetTemplate)\n\t\t\tthat.$el.html(compiled())\n\t\t\tRecaptcha.create(recaptcha_key, 'recaptcha-div', {callback: Recaptcha.focus_response_field})\n\t\t\t$('#send-reset-password').click(function() {\n\t\t\t    var user = $('#ehr-user').val()\n\t\t\t    var customer = $('#reset-customer').val()\n\t\t\t    var response = $('#recaptcha_response_field').val()\n\t\t\t    var challenge = $('#recaptcha_challenge_field').val()\n\t\t\t    $.ajax({\n\t\t\t\turl: '/send_reset_password',\n\t\t\t\tdata: {\n\t\t\t\t    'user': user,\n\t\t\t\t    'customer_id': customer,\n\t\t\t\t    'recaptcha_challenge_field': challenge,\n\t\t\t\t    'recaptcha_response_field': response\n\t\t\t\t},\n\t\t\t\tsuccess: function() {alert('A reset password message has been sent to this account.')},\n\t\t\t\terror: function() {\n\t\t\t\t    alert('We could not verify your recaptcha response.  Try again, or contact IT about directly resetting your password.')\n\t\t\t\t    Recaptcha.reload()\n\t\t\t\t}\n\t\t\t    })\n\t\t\t})\n\t\t    })\n\t},\n        render: function () {\n\t    if(contextModel.get('loginTemplate')) {\n\t\tvar that=this;\n\t\trequire([\"text!../templates/\"+contextModel.get('loginTemplate')], function(loginTemplate) {\n\t\t    that.template = _.template(loginTemplate);\n\t\t    that.$el.html(that.template(contextModel.attributes));\n\t\t    if (that.fixed_customer) {\n\t\t\tvar cust = $(\"#login-customer\")\n\t\t\tcust.val(that.fixed_customer)\n\t\t\tcust.hide()\n\t\t    }\n\t\t    var message = contextModel.get('login-message');\n\t\t    if (message)\n\t\t\tsetTimeout(function() {$('#login-message').text(message);}, 500);\n\t\t    that.newPasswordChange();\n\t\t});\n\t    } else {\n\t\t$(\"#login-modal\").modal('hide');\n\t    }\n\t    return this;\n        },\n\tdoenterlogin: function(event){\n\t    if(event.keyCode == 13){\n\t\tthis.dologin(event);\n\t    }\n\t},\n\tdoenterchange: function(event){\n\t    if(event.keyCode == 13){\n\t\tthis.dologin(event);\n\t    } else {\n\t\tthis.newPasswordChange();\n\t    }\n\t},\n\tdologin: function(event) {\n\t    var user = $(\"#login-user\").val();\n\t    var customer = $(\"#login-customer\").val();\n\t    this.user = user;\n\t    this.customer = customer;\n\t    var password = $(\"#login-password\").val();\n\t    var oauth = $(\"#login-oauth\").val();\n\t    if( user && (password || oauth)) {\n\t\tvar jqnewpassword = $(\"#login-new-password\");\n\t\t$('#login-message').text('Trying to log in');\n\t\tif(!jqnewpassword.is(\":visible\")) {\n\t\t    contextModel.setUser(user, password, oauth, customer, null);\n\t\t} else {\n\t\t    if(this.newPasswordChange()) {\n\t\t\tcontextModel.setUser(user, password, oauth, customer, jqnewpassword.val());\n\t\t    } else {\n\n\t\t    } \n\t\t} \n\t    }\n\t},\n\tnewPasswordChange: function() {\n\t    var newpw = $(\"#login-new-password\").val();\n\t    if (!newpw) return false;\n\t    var check = \"<big><big><font color='#00b000'>&#x2714</font></big></big>\";\n\t    var X = \"<big><font color='#ff0000'>&#x2718</font></big>\";\n\t    var len = newpw.length<8;\n\t    var low = newpw.search(\".*[a-z]\")<0;\n\t    var up = newpw.search(\".*[A-Z]\")<0;\n\t    var num = newpw.search(\".*[0-9]\")<0;\n\t    var diff = newpw==$(\"#login-password\").val();\n\t    $(\"#pw-len-cb\").html(len?X:check);\n\t    $(\"#pw-low-cb\").html(low?X:check);\n\t    $(\"#pw-up-cb\").html(up?X:check);\n\t    $(\"#pw-num-cb\").html(num?X:check);\n\t    $(\"#pw-diff-cb\").html(diff?X:check);\n\t    if(len || low || up || num || diff) {\n\t\treturn false;\n\t    } else {\n\t\treturn true;\n\t    }\n\t}\n    });\n    return Login;\n});\n\n","/**\n * Created by Carlos on 7/15/14\n */\n\ndefine('widgets/settings',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n], function ($, _, Backbone, contextModel) {\n\n    var Settings = Backbone.View.extend({\n        initialize: function () {\n            this.render();\n        },\n        events: {\n            'click #save-settings': 'dosave',\n            'click #update-password': 'dologin',\n            'click #cancel-settings': 'docancel',\n            'keyup #official-name-input':'doentersave',\n            'keyup #display-name-input':'doentersave',\n            'keyup #login-password':'doenterlogin',\n            'keyup #login-new-password':'doenterchange',\n        },\n        render: function () {\n\n\t    if(contextModel.get('settingsTemplate')) {\n\t\t    var that=this;\n\t\t    require([\"text!../templates/\"+contextModel.get('settingsTemplate')], function(settingsTemplate) {\n\t\t        that.template = _.template(settingsTemplate);\n                that.$el.html(that.template(contextModel.attributes));\n\t\t        that.newPasswordChange();\n\t\t    });\n\t    }\n        else {\n\t\t    $(\"#settings-modal\").modal('hide');\n\t    }\n\t    return this;\n        },\n\tdohide: function(){\n            $(\"#settings-modal\").modal('hide');\n\t},\n\tdocancel: function(){\n            this.dohide();\n\t},\n\tdoentersave: function(event){\n\t    if(event.keyCode == 13){\n\t\tthis.dosave(event);\n\t    }\n\t},\n\tdoenterchange: function(event){\n\t    if(event.keyCode == 13){\n\t\tthis.dologin(event);\n\t    } else {\n\t\tthis.newPasswordChange();\n\t    }\n\t},\n\tdosave: function(event) {\n        var official_name = $(\"#official-name-input\").val();\n        var display_name = $(\"#display-name-input\").val();\n\n        $.ajax({\n            url: \"/save_user_settings\",\n            data:$.param(contextModel.toParams())+\"&official_name=\"+official_name+\"&display_name=\"+display_name,\n            success: function(data) {\n                //response(data);\n                console.log(\"Settings saved\");\n\n            },\n            error: function(xhr, textStatus, errorThrown){\n                console.log(\"Settings failed to save\");\n            }\n        });\n\n        $(\"#settings-modal\").modal('hide'); //placeholder\n\t},\n\tnewPasswordChange: function() {\n\t    var newpw = $(\"#login-new-password\").val();\n\t    var check = \"<big><big><font color='#00b000'>&#x2714</font></big></big>\";\n\t    var X = \"<big><font color='#ff0000'>&#x2718</font></big>\";\n\t    var len = newpw.length<8;\n\t    var low = newpw.search(\".*[a-z]\")<0;\n\t    var up = newpw.search(\".*[A-Z]\")<0;\n\t    var num = newpw.search(\".*[0-9]\")<0;\n\t    var diff = newpw==$(\"#login-password\").val();\n\t    $(\"#pw-len-cb\").html(len?X:check);\n\t    $(\"#pw-low-cb\").html(low?X:check);\n\t    $(\"#pw-up-cb\").html(up?X:check);\n\t    $(\"#pw-num-cb\").html(num?X:check);\n\t    $(\"#pw-diff-cb\").html(diff?X:check);\n\t    if(len || low || up || num || diff) {\n\t\t$(\"#login-button\").attr(\"disabled\", \"disabled\");\n\t\treturn false;\n\t    } else {\n\t\t$(\"#login-button\").removeAttr(\"disabled\");\n\t\treturn true;\n\t    }\n\t}\n    });\n    return Settings;\n});\n\n","/***************************************************************************\n * Copyright (c) 2014 - Maven Medical\n * AUTHOR: 'Asmaa Aljuhani'\n * DESCRIPTION: This Javascript file has the main router functions that calls\n *               all other views.\n * PREREQUISITE: libraries should be predefine in main.js\n * LAST MODIFIED FOR JIRA ISSUE: MAV-98\n **************************************************************************/\n\ndefine('router',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone,\n\n    'globalmodels/contextModel',\n    'globalmodels/layoutModel',\n    'widgets/evidence',\n    'widgets/login',\n    'widgets/settings'\n], function ($, _, Backbone, currentContext, layoutModel, Evidence, Login, Settings) {\n\n    var CheckLogin = function () {\n        if (!currentContext.get('user') || !currentContext.get('userAuth')) {\n            new Login({el: '#login-modal'})\n            return false;\n        }\n        return true;\n    };\n    //This variables holds an array of the content of the container in index.html\n    var layout = [\"#floating-left\",\n                  \"#dynamic-content\",\n                  \"#floating-right\"];\n    //This variable holds each page and its layout\n    // array length should match the number of layouts\n    // the sum of each array should be 12 (Following bootstrap grid)\n    var pageLayout = {\n        \"home\": [0, 12, 0],\n        \"patient\": [0, 9, 3],\n        \"episode\": [0, 9, 3],\n        \"pathway\": [0, 12, 0],\n        \"pathEditor\": [0, 12, 0],\n        \"triggerEditor\": [0,12, 0]\n    };\n    changePageLayout = function (page) {\n\n        if (page in pageLayout) {\n            $.each(layout, function (index, value) {\n                if (pageLayout[page][index] == 0) {\n                    $(value).hide();\n                }\n                else {\n                    $(value).show();\n                    $(value).removeClass();\n                    //$(value)[0].className = $(value)[0].className.replace(/(\\s)*(col-md-.*?)(?=\\s)/g, \"col-md-\"+pageLayout[page][index]);\n                    $(value).addClass(\"content col-md-\"+pageLayout[page][index]);\n                }\n            });\n        }\n        else\n            return;//\"#f2c313\";\n    };\n\n    var showPage = function (user, customer, userAuth) {\n        if ((document.cookie && !currentContext.get('userAuth')) || (user && !currentContext.get('user'))) {\n            currentContext.autoSetUser(user, customer, userAuth, Login);\n        } else {\n            if (CheckLogin()) {\n                console.log('showing page ' + currentContext.get('page'));\n                changePageLayout(currentContext.get('page'));\n                /* do more stuff here */\n\t\treturn true;\n            } else {\n                console.log('trying to log in');\n            }\n        }\n\treturn false;\n    };\n\n    var AppRouter = Backbone.Router.extend({\n        routes: {\n            \"logout\": 'logout',\n            \"settings\": 'settings',\n            \"auditlist(login/:user/:customer/)(:userAuth)\": 'showAudit',\n            \"profile(login/:user/:customer/)(:userAuth)\": 'showProfile',\n            \"customers(login/:user/:customer/)(:userAuth)\": 'showCustomers',\n            \"(login/:user/:customer/)(:userAuth)\": 'showHome',\n            \"patient/:id(/login/:user/:customer/)(:userAuth)\": 'showPatient',\n            \"episode/:id/patient/:id/:date(/login/:user/:customer/)(:userAuth)\": 'showEpisode',\n            \"evidence/:id/patient/:id/evi/:id(/login/:user/:customer/)(:userAuth)\": 'showEvidence',\n            \"pathway/:id/node/:id(/patient/:id/:date)(/login/:user/:customer/)(:userAuth)\": 'showPathway',\n            \"pathwayeditor/:id/node/:id(/login/:user/:customer/)(:userAuth)\": 'EditPathway',\n            \"triggereditor/:id/node/:id(/login/:user/:customer/)(:userAuth)\": 'EditTriggers',\n\t        \"password/:type/:user/:customer/:oauth\": 'password',\n            //default\n            '*action': 'defaultAction',\n        },\n\tpassword: function (type, user, customer, oauth) {\n\t    if (currentContext.get('userAuth')) {\n\t\twindow.location = '#';\n\t    } else {\n\t\tcurrentContext.set({'loginTemplate': type+'.html', 'user':user, 'customer_id':customer, 'oauth':oauth});\n\t\tnew Login({el: '#login-modal'});\n\t    }\n\t},\n        showHome: function (user, customer, userAuth) {\n            /* remove the current patient list, encounter, etc to revert the view to the doctor's user page */\n            currentContext.set({page: 'home', patients: null, encounter: null, patientName: null});\n\n            //TODO This is only for Demo purpose\n            if(currentContext.get('official_name') == 'Heathcliff Huxtable'){\n                currentContext.set({page: 'pathway', patients: null, encounter: null, patientName: null});\n            }\n            showPage(user, customer, userAuth);\n        },\n        showPatient: function (patid, user, customer, userAuth) {\n            currentContext.set({page: 'patient', encounter: null, patients: patid});\n            showPage(user, customer, userAuth);\n        },\n        showEpisode: function (enc, pat, date, user, customer, userAuth) {\n            currentContext.set({page: 'episode', encounter: enc, patients: pat, enc_date: date,\n                startdate: null, enddate: null});\n            showPage(user, customer, userAuth);\n        },\n        showPathway: function (path, code, pat, date, user, customer, userAuth) {\n            layoutModel.set({'fluidContent': false})\n            currentContext.set({page: 'pathway', code: code, pathid: path, patients: pat, enc_date: date,\n                                startdate: null, enddate: null});\n\n            showPage(user, customer, userAuth);\n        },\n        showEvidence: function (enc, pat, evi, user, customer, userAuth) {\n            currentContext.set({page: 'episode', encounter: enc, patients: pat});\n\t    if(showPage(user, customer, userAuth)) {\n                var evidence = new Evidence({'evi': evi});\n                //$('#evidence-' + evi).modal();\n            }\n        },\n        EditPathway: function (path, code, user, customer, userAuth) {\n            layoutModel.set('fluidContent', true)\n            currentContext.set({page: 'pathEditor',  pathid: path, code: code});\n            showPage(user, customer, userAuth);\n        },\n        EditTriggers: function (path, code, user, customer, userAuth) {\n            layoutModel.set('fluidContent', false)\n            currentContext.set({page: 'triggerEditor',  pathid: path, code: code});\n            showPage(user, customer, userAuth);\n        },\n        showPathwayHistory: function (path, code, user, customer, userAuth) {\n            currentContext.set({page: 'pathHistory',  pathid: path, code: code});\n            showPage(user, customer, userAuth);\n        },\n        showCustomers: function(user, customer, userAuth){\n            currentContext.set({page:'customers'});\n            showPage(user, customer, userAuth);\n        },\n        showProfile: function(user, customer, userAuth){\n            currentContext.set({page:'profile'});\n            showPage(user, customer, userAuth);\n        },\n        showAudit: function(user, customer, userAuth){\n            currentContext.set({page:'auditlist'});\n            showPage(user, customer, userAuth);\n        },\n        logout: function () {\n\t    eraseCookie('valid-through')\n\t    eraseCookie('roles')\n\t    eraseCookie('username')\n\t    var max=10;\n\t    while(document.cookie && max>0) {\n\t\tmax = max-1\n\t\teraseCookie(document.cookie.split('=')[0]);\n\t    }\n            currentContext.clear({silent: true});\n\t    $.ajax({type: 'POST',dataType: 'json',url: \"/logout\"})\n            location.href = \"/index.html\";\n        },\n        defaultAction: function (action) {\n            console.log('No route:', action);\n        },\n        initialize: function () {\n            //ajaxPrefilter\n            $.ajaxPrefilter(function (options, originalOptions, jqXHR) {\n                options.url = 'services' + options.url;\n            });\n            Backbone.history.start();\n        }\n    });\n\n    return AppRouter;\n});\n\n","/**\n * Created by devel on 11/19/14.\n */\ndefine('globalmodels/sidebarModel',[\n    'backbone'\n],\n       function(Backbone) {\n           var details = {\n               'Profile':['fa-user', 'profile'],\n               'Customers':['fa-user', 'customers'],\n               'Pathways':['fa-user', 'pathways'],\n               'Pathway Mgmt': ['fa-cloud', 'pathway', [\n                   {'Pathway Viewer': ['icon', 'pathway']},\n                   {'Pathway Editor': ['icon', 'pathwayEditor']}]],\n               'Dashboard': ['fa-tachometer', 'home']\n           }\n           \n\t   var SidebarModel = Backbone.Model.extend({\n               \n\t       addOption: function(name) {\n                   if (!this.get(name)) {\n                       this.set(name, details[name]) \n                   }\n               }\n           })\n           \n\t   return new SidebarModel\n       })      \n;\n","/**\n * Created by devel on 11/20/14.\n */\ndefine('widgets/pageOption',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',   // lib/backbone/backbone\n    'globalmodels/contextModel'\n], function ($, _, Backbone, contextModel) {\n    var elem = function (page, icon, menu_text) {\n        return $('<li>', {}).append(\n            $('<a>', {\n                'href': page,\n                'class': \"dropdown-toggle\"}).append(\n                $('<i>', {\n                    'class': 'menu-icon fa ' + icon}))\n                .append(\n                $('<span>', {\n                    'class': 'menu-text',\n                    'text': menu_text})\n            )\n                .append(\n                $('<b>', {'class': \"arrow\"})\n            )\n        )\n    };\n\n    var appendOption = function (opt, list) {\n        list = typeof list !== 'undefined' ? list : '#sidebar-list';\n        for (o in opt) {\n            var option = elem(opt[o][1], opt[o][0], o);\n            if (opt[o].length == 3) {\n                $(option.children()[0]).append($('<b>', {'class': \"arrow fa fa-angle-down\"}))\n                var suboption = $('<ul>', {'class': \"submenu\"});\n                var submenu = opt[o][2];\n                for (s in submenu) {\n                    appendOption(submenu[s], suboption);\n                }\n                option.append(suboption);\n            }\n            option.appendTo(list);\n        }\n\n    };\n\n    var pageOption = Backbone.View.extend({\n        el: '#sidebar-list',\n        initialize: function (opt, list) {\n            list = typeof list !== 'undefined' ? list : '#sidebar-list';\n            appendOption(opt, list);\n            this.$el.off('click');\n        },\n        events:{\n            'click a':'setPage'\n        },\n       setPage: function(e){\n            e.preventDefault();\n\n           var href = $(e.currentTarget).attr(\"href\");\n           \n            if(href =='pathway'){\n                Backbone.history.navigate(\"pathway/\" + contextModel.get('pathid') + \"/node/\" + contextModel.get('code'), {trigger: true});\n            }\n            else if (href == 'pathwayEditor'){\n                Backbone.history.navigate(\"pathwayeditor/\" + contextModel.get('pathid') +\"/node/\" + contextModel.get('code') , true);\n            }\n            else\n            {\n              Backbone.history.navigate(href, true);\n            }\n\n           console.log('page option', contextModel.get('page'));\n\n        }\n    });\n    return pageOption;\n});\n\n","\ndefine('text!../templates/sidebar.html',[],function () { return '<div class=\"sidebar-toggle sidebar-collapse\" id=\"sidebar-collapse\" data-target=\"#sidebar\">\\n    <i class=\"ace-icon fa fa-angle-double-right\" data-icon1=\"ace-icon fa fa-angle-double-left\"\\n       data-icon2=\"ace-icon fa fa-angle-double-right\"></i>\\n</div>\\n<ul class=\"nav nav-list\" id=\"sidebar-list\">\\n\\n</ul>\\n\\n\\n';});\n\n","/**\n * Created by devel on 11/16/14.\n */\ndefine('widgets/sidebar',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',   // lib/backbone/backbone\n    'ace',\n    'globalmodels/contextModel',\n    'globalmodels/sidebarModel',\n    'widgets/pageOption',\n    'text!../templates/sidebar.html'\n], function ($, _, Backbone, ace, contextModel, sidebarModel, PageOption, sidebarTemplate) {\n    var sidebarMap = {\n        'Dashboard': ['fa-tachometer', 'home'],\n        'Pathway Mgmt': ['fa-cloud', 'pathway', [\n            {'Pathway Viewer': ['icon', 'pathway']},\n            {'Pathway Editor': ['icon', 'pathwayEditor']}]],\n        'Users': ['fa-user', 'users'],\n        'Reports': ['fa-bar-chart-o', 'reports'],\n        'Research': ['fa-institution', 'research'],\n        'EHR Setup': ['fa-database', 'research'],\n        'Customers':['fa-user', 'customers']\n    }\n\n    var Sidebar = Backbone.View.extend({\n        initialize: function (arg) {\n            this.template = _.template(sidebarTemplate);\n            this.render();\n            sidebarModel.on('change', this.change, this)\n            sidebarModel.addOption('Dashboard')\n        },\n        change: function() {\n            _.each(sidebarModel.changed, function(v, k) {\n                var obj = {}\n                obj[k]=v\n                new PageOption(obj)\n            })\n        },\n        el: '#sidebar',\n        render: function () {\n\n            this.$el.html(this.template());\n\n             //$('#sidebar').ace_sidebar();\n            //for (o in sidebarList){\n          // }\n\n        }\n\n    });\n    return Sidebar;\n});\n\n","/**\n * Created by Asmaa Aljuhani on 3/11/14.\n */\n\ndefine('app',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'bootstrap',\n    'router',\n    'widgets/sidebar'\n], function ($, _, Backbone, Bootstrap, AppRouter, Sidebar) {\n    var initialize = function () {\n\n        // Pass in our Router module and        call it's initialize function\n        new AppRouter;\n        new Sidebar;\n    };\n\n    return {\n        initialize: initialize\n    };\n});\n\n","/*!\n * jQuery UI Touch Punch 0.2.3\n *\n * Copyright 2011–2014, Dave Furfero\n * Dual licensed under the MIT or GPL Version 2 licenses.\n *\n * Depends:\n *  jquery.ui.widget.js\n *  jquery.ui.mouse.js\n */\n!function(a){function f(a,b){if(!(a.originalEvent.touches.length>1)){a.preventDefault();var c=a.originalEvent.changedTouches[0],d=document.createEvent(\"MouseEvents\");d.initMouseEvent(b,!0,!0,window,1,c.screenX,c.screenY,c.clientX,c.clientY,!1,!1,!1,!1,0,null),a.target.dispatchEvent(d)}}if(a.support.touch=\"ontouchend\"in document,a.support.touch){var e,b=a.ui.mouse.prototype,c=b._mouseInit,d=b._mouseDestroy;b._touchStart=function(a){var b=this;!e&&b._mouseCapture(a.originalEvent.changedTouches[0])&&(e=!0,b._touchMoved=!1,f(a,\"mouseover\"),f(a,\"mousemove\"),f(a,\"mousedown\"))},b._touchMove=function(a){e&&(this._touchMoved=!0,f(a,\"mousemove\"))},b._touchEnd=function(a){e&&(f(a,\"mouseup\"),f(a,\"mouseout\"),this._touchMoved||f(a,\"click\"),e=!1)},b._mouseInit=function(){var b=this;b.element.bind({touchstart:a.proxy(b,\"_touchStart\"),touchmove:a.proxy(b,\"_touchMove\"),touchend:a.proxy(b,\"_touchEnd\")}),c.call(b)},b._mouseDestroy=function(){var b=this;b.element.unbind({touchstart:a.proxy(b,\"_touchStart\"),touchmove:a.proxy(b,\"_touchMove\"),touchend:a.proxy(b,\"_touchEnd\")}),d.call(b)}}}(jQuery);\n\ndefine(\"touch\", [\"jquery_ui\"], function(){});\n\n","/***************************************************************************\n * Copyright (c) 2014 - Maven Medical\n * AUTHOR: 'Asmaa Aljuhani'\n * DESCRIPTION: This Javascript file holds all libraries that will be used\n *              by the MVC and Initialize the frontend App.\n * LAST MODIFIED FOR JIRA ISSUE: MAV-98\n **************************************************************************/\n\n// Require.js allows us to configure shortcut alias\nrequire.config({\n    paths: {\n        //jquery: ['//code.jquery.com/jquery-1.11.0.min', 'libs/jquery/jquery-min'],\n        jquery: ['jquery-stub'],\n        jquery_ui: ['//code.jquery.com/ui/1.10.1/jquery-ui.min', 'libs/jquery/jquery-ui.min'],\n        jquery_autocomplete: 'libs/jquery/jquery.ui.autocomplete.html',\n\ttouch: 'libs/jquery/jquery.ui.touch-punch.min',\n        underscore: 'libs/underscore/underscore-min',\n        backbone: ['libs/backbone/backbone', '//cdnjs.cloudflare.com/ajax/libs/backbone.js/1.1.2/backbone-min.js'],\n        jsplumb: ['libs/jsplumb2/js/jquery.jsPlumb-1.6.2-min', 'libs/jsplumb2/js/jsplumb'],\n        //bootstrap: ['//maxcdn.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min', '../css/bootstrap/js/bootstrap.min'],\n        bootstrap: '../css/bootstrap/js/bootstrap.min',\n\tbootstrapswitch: 'libs/bootstrap-switch/bootstrap-switch',\n\tnestedSortable: 'libs/nestedSortable/nestedSortable',\n\tnestable: '../ace/assets/js/jquery.nestable',\n        fullcalendar: 'libs/fullCalendar/fullcalendar.min',\n        moment: 'libs/fullCalendar/moment.min',\n        ckeditor2: 'libs/ckeditor/ckeditor',\n        ckeditor: 'ckeditor-customize',\n        templates: '../templates',\n        amchartspie: 'libs/amcharts/pie',\n        amchartslight: 'libs/amcharts/themes/light',\n        amchartsserial: 'libs/amcharts/serial',\n        amcharts: 'libs/amcharts/amcharts',\n        ace: 'libs/ace/ace.min',\n        aceelements: 'libs/ace/ace-elements.min',\n        aceextra: 'libs/ace/ace-extra.min'\n    },\n    shim: {\n\ttouch: {deps: ['jquery_ui']},\n        ace: {deps: ['jquery', 'jquery_ui','bootstrap', 'aceelements']},\n        aceextra: {deps: ['bootstrap', 'jquery', 'jquery_ui']},\n        aceelements: {deps: ['aceextra', 'bootstrap', 'jquery_ui', 'jquery']},\n//        'ace/assets/js/flot/jquery.flot.pie': {deps: ['ace/assets/js/flot/jquery.flot']},\n//        'ace/assets/js/flot/jquery.flot.resize': {deps: ['ace/assets/js/flot/jquery.flot']},\n        bootstrap: {\n            deps: ['jquery', 'jquery_ui']\n        },\n        bootstrapswitch: {\n            deps: ['jquery', 'jquery_ui', 'bootstrap']\n        },\n        nestable: {\n            deps: ['jquery', 'jquery_ui', 'bootstrap']\n        },\n        jsplumb: {\n            deps: ['jquery', 'jquery_ui']\n        },\n        fullCalendar: {\n            deps: ['jquery', 'moment', 'jquery_ui']\n        },\n        jquery_ui: {\n            deps: ['jquery']\n        },\n        amchartspie: { deps: ['amcharts'], exports: 'AmCharts', init: function () {\n            AmCharts.isReady = true;\n        }},\n        amchartsserial: { deps: ['amcharts'], exports: 'AmCharts', init: function () {\n            AmCharts.isReady = true;\n        }},\n        amchartslight: { deps: ['amcharts'], exports: 'AmCharts', init: function () {\n            AmCharts.isReady = true;\n        }},\n    }\n});\n\nrequire([\n    //Load our app module and pass it to our definition function\n    'app',\n    'jquery',\n    'touch',\n    'underscore',\n    'backbone',\n    'bootstrap',\n    'bootstrapswitch',\n    'ace',\n    'text',\n\n], function (App) {\n    // The \"app\" dependency is passed in as \"App\"\n    // Again, the other dependencies passed in are not \"AMD\" therefore don't pass a parameter to this function\n    App.initialize();\n});\n\ndefine(\"main\", function(){});\n\n","define('pathway/models/treeContext',[\n    'backbone'\n],\n       function(Backbone) {\n\t   var treeContext = Backbone.Model.extend({\n\t   })\n\n\t   return new treeContext\n       })\n;\n","define('pathway/models/nodeModel',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'globalmodels/contextModel',\n    'pathway/models/treeContext'\n], function($, _, Backbone, contextModel, treeContext){\n\n    var NodeModel;\n    var NodeList = Backbone.Collection.extend({\n        populate: function(childSet, curTree, options){\n            if (childSet){\n                for (var i in childSet){\n                    var cur = childSet[i]\n                    var toAdd\n                    if (cur.children){\n                        toAdd = new NodeModel(cur, curTree, options)\n                        toAdd.set('hasLeft', i!=0)\n                        toAdd.set('hasRight', i<childSet.length-1)\n                    } else  {\n                        toAdd = new Backbone.Model(cur)\n                        toAdd.set('isProtocol', true) //if this is an old protocol without a isProtocol add it\n                     }\n\n                    this.add(toAdd, {silent: true})\n                }\n            }\n        },\n        toJSON: function(options){\n\n            var jsonList = []\n            _.each(this.models, function(cur){\n                jsonList.push(cur.toJSON(options))\n\n            }, this)\n            return jsonList\n        }\n    })\n\n    NodeModel = Backbone.Model.extend({\n        getNodeType: function(){\n\n          return \"treeNode\"\n        },\n\n        initialize: function(params, curTree, options){\n\n            if (!params.nodeID){\n                this.set('nodeID', curTree.get('pathid') + \":\" + curTree.getNextNodeID(), {silent: true})\n            } else {\n                this.set('nodeID', params.nodeID, {silent: true})\n            }\n            if (!params.children){params.children = []}\n            var newChildren = new NodeList()\n            newChildren.populate(params.children, curTree, options)\n            this.set({\n\t\tchildren: newChildren,\n\t\t'name': params.name,\n\t\t'tooltip': params.tooltip,\n\t\t'sidePanelText': params.sidePanelText\n\t    }, {silent: true})\n\t    this.hideChildren()\n            _.each(this.get('children').models, function(cur){\n\t\tif(cur.showChildren) {cur.showChildren()}\n            })\n            if (params.protocol){\n\t\tif (!params.protocol.nodeID) {\n\t\t    params.protocol.nodeID = curTree.getNextNodeID()\n\t\t}\n                this.get('children').add(new Backbone.Model(params.protocol) )\n            }\n        },\n        toJSON: function(options){\n            var retMap = _.omit(this.attributes, ['children', 'hasLeft', 'hasRight'])\n\t    if (options.toExport) {retMap = _.omit(retMap, ['nodeID'])}\n            retMap.children = this.get('children').toJSON(options)\n            return retMap\n        },\n\tpopulateChildren: function(children, options) {\n            var newChildren = new NodeList()\n\t    if (children) {\n\t\tnewChildren.populate(children, this, options)\n\t    }\n\t    this.set({children: newChildren}, {silent: true})\n\t},\n\tshowChildren: function() {treeContext.unset(this.get('nodeID'))},\n\thideChildren: function() {treeContext.set(this.get('nodeID'), 'hideChildren')},\n\tchildrenHidden: function() {return treeContext.get(this.get('nodeID'))}\n\n\n\n    })\n    return NodeModel\n\n});\n\n","define('pathway/models/pathwayCollection',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'globalmodels/contextModel',\n\n], function($, _, Backbone, contextModel){\n\n    var pathCollection = Backbone.Collection.extend({\n\t    model: Backbone.Model.extend({idAttribute: 'canonical'}),\n        url: function() {\n            return '/list'\n        },\n        initialize: function(){\n            this.fetch()\n        },\n        addNewPath: function(){\n            this.fetch({add: true})\n        },\n        makeSortable: function(){\n            \t\t\tjQuery(function($){\n\n\t\t\t\t$('.dd').nestable();\n\n\t\t\t\t$('.dd-handle a').on('mousedown', function(e){\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t});\n\n\t\t\t\t$('[data-rel=\"tooltip\"]').tooltip();\n\n\t\t\t});\n/*\n          $('.dd').nestable();\n\n\t        $('.dd-handle a').on('mousedown', function(e){\n\t\t\t\t\te.stopPropagation();\n\t\t\t});\n\n\t\t\t$('[data-rel=\"tooltip\"]').tooltip();\n        /*\n             that = this;\n            $('ol.dd-list').nestedSortable({\n                forcePlaceholderSize: true,\n\t\t\t    handle: 'div:not(.bootstrap-switch)',\n                connectWith:'li, ol',\n\t\t\t    helper:\t'clone',\n\t\t\t    items: 'li',\n\t\t\t    opacity: .6,\n\t\t\t    placeholder: 'placeholder',\n\t\t\t    revert: 250,\n\t\t\t    tabSize: 25,\n\t\t\t    tolerance: 'pointer',\n\t\t\t    toleranceElement: '> div:not(.bootstrap-switch)',\n\t\t\t    maxLevels: 0,\n\t\t\t    isTree: true,\n\t\t\t    expandOnHover: 700,\n\t\t\t    startCollapsed: true,\n                doNotClear: false,\n                branchClass: 'mjs-nestedSortable-branch',\n                leafClass: 'mjs-nestedSortable-leaf',\n               // containment: '.dd-list',\n                isAllowed:function(item, parent){\n                    if (parent==null) return true;\n                    if ($(parent).is(\"li\") || $(parent).is(\"ol\")) return true;\n                    return false;\n                },\n                receive: function(event, ui){\n                    //when a pathway or folder is moved, we need to update the path(s) in the database\n                    var parents = that.getParents(ui.item);\n                    var path = \"\";\n                    if (parents.length) {\n                        if (parents.length > 1) path = parents.join(\"/\");\n                        else path = parents[0];\n                    }\n                    var parentFolder = $(ui.item).closest('.sub-folder');\n                    if (!parentFolder.length) parentFolder = $(\"#nestable\");\n                    else {\n                        var parentFolder = $('#avail-paths-list');\n                        var path = \"\";\n                    }\n\n                    if ($(ui.item).hasClass('pathrow-item')){\n                        //pathway was moved\n                        //var canonical_id = $(\".path-row\", $(ui.item)).attr(\"id\");\n                        that.handleMovedFolder(parentFolder, path, that, false)\n                    }\n                    else {\n                        //entire folder was moved; need to update all contained pathways\n                        that.handleMovedFolder(parentFolder, path, that, true)\n                    }\n                },\n                sort: function(event, ui){\n                    if ($(ui.item).hasClass('mjs-nestedSortable-expanded')) {\n                        $(ui.item).switchClass(\"mjs-nestedSortable-expanded\", \"mjs-nestedSortable-collapsed\", 0);\n                        $(ui.helper).switchClass(\"mjs-nestedSortable-expanded\", \"mjs-nestedSortable-collapsed\", 0);\n                        $(ui.placeholder).height($(ui.item).height())\n                    }\n                }\n            });*/\n        },\n        getParents: function(item) {\n            //get the parents of an item (pathway or folder)\n            var parentList = [];\n            if ($(item).hasClass('sub-folder')) {\n                parentList.push($(item).children().first().attr(\"name\")); //initialize with current folder name if folder\n            }\n            var parentFolder = $(item).parent().closest(\".sub-folder\");\n            while (parentFolder.length){\n                var parentName = parentFolder.children(\".pathway-folder-title\").attr('name');\n                if (parentName == '') break;\n                parentList.push(parentName);\n                parentFolder = $(parentFolder).parent().closest(\".sub-folder\");\n            }\n            parentList.reverse();\n            return parentList;\n        },\n        handleMovedPath: function(canonical_id, locationData){\n            //update order\n            var data = {'canonical': canonical_id, 'customer_id': contextModel.get(\"customer_id\"), 'userid': contextModel.get(\"userid\")}\n            $.extend(data, contextModel.toParams(), data);\n            $.ajax({\n                type: 'POST',\n                dataType: 'json',\n                url: \"/update_pathway_location?\" + $.param(data),\n                data: JSON.stringify(locationData),\n                success: function () {\n                    console.log(\"pathway location updated\");\n                }\n            });\n        },\n        handleMovedFolder: function(folder, path, that, recursive){\n            var position = 0;\n            $(folder).children('ol').children().each(function(){\n                if ($(this).hasClass(\"pathrow-item\")){\n                    //update order\n                    position++;\n                    var locationData = { \"location\": path, \"position\": position}\n                    var canonical_id = $(\".path-row\", $(this)).attr(\"id\");\n                    that.handleMovedPath(canonical_id, locationData)\n                }\n                else if (recursive){\n                    new_path = path + \"/\" + $(\".pathway-folder-title\",$(this)).first().attr('name');\n                    that.handleMovedFolder(this, new_path, that);\n                }\n            });\n        }\n\n    })\n    pathCollection = new pathCollection()\n    return pathCollection\n\n});\n\n","define('pathway/models/triggerGroupCollection',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'globalmodels/contextModel'\n], function($, _, Backbone, contextModel){\n\n\n    var TriggerGroupCollection = Backbone.Collection.extend({\n\n        populate: function(JSON, protocolVersion){\n            var self = this\n            if (protocolVersion == \"version1\"){\n                for (var i in JSON){\n                    var curGroup = JSON[i]\n\n                    var t = new TriggerGroup()\n                    t.populate({JSON: curGroup})\n                    t.on('cascade', function(){ self.trigger('cascade')} )\n                    this.add(t, {silent: true})\n                }\n            } else if (protocolVersion == \"preversion\"){\n                var t = new TriggerGroup()\n                t.populate({relationship : \"and\"})\n\n                t.on ('cascade', function(){ self.trigger('cascade')})\n\n                var temp = new TriggerDetailTypes()\n                temp.populate(JSON)\n                t.set('details', temp, {silent: true})\n\n                this.add(t, {silent: true})\n            }\n            this.on('add', function(){self.trigger('cascade')})\n            this.on('remove', function(){self.trigger('cascade')})\n            if (self.models.length == 0){\n                self.addGroup(\"and\")\n            }\n\n        },\n        addGroup: function(relationship){\n            var group = new TriggerGroup();\n            var self = this;\n            group.populate({relationship : relationship})\n            group.on('cascade', function(){\n                self.trigger('cascade')\n            })\n            this.add(group)\n            return group\n        }\n\n    })\n\n    var TriggerGroup = Backbone.Model.extend({\n        populate: function(param){\n            var self = this\n            if (param.JSON){\n                this.set('relationship', param.JSON['relationship'])\n                var t = new TriggerDetailTypes()\n                t.populate(param.JSON['details'])\n                t.on('cascade', function(){ self.trigger('cascade')})\n                this.set('details', t, {silent: true})\n            } else if (param.relationship){\n                this.set('relationship', param.relationship, {silent: true})\n                var t = new TriggerDetailTypes()\n                t.populate();\n                t.on('cascade', function(){ self.trigger('cascade')})\n                this.set('details', t, {silent: true})\n            }\n            this.on('change', function(){this.trigger('cascade')})\n\n        },\n        addDetail: function(model, type){\n            var self = this;\n              var enhancedModel = new TriggerDetail()\n              enhancedModel.populate(model.attributes)\n              enhancedModel.on('cascade', function(){self.trigger('cascade')})\n              var detailGroup = this.get('details')\n\n              if (detailGroup.get(type)){\n                  detailGroup.get(type).add(enhancedModel)\n              } else {\n                  var temp = new TriggerDetailCollection()\n                  temp.on('cascade', function(){self.trigger('cascade')})\n\n                  temp.add(enhancedModel)\n                  detailGroup.set(type, temp)\n              }\n\n        },\n        toJSON: function(){\n            var ret = {}\n            ret['relationship'] = this.get('relationship')\n            ret['details'] = this.get('details').toJSON()\n            return ret;\n        }\n    })\n\n    var TriggerDetailTypes = Backbone.Model.extend({\n        populate: function(JSON){\n            var self = this\n\n            for (var key in JSON){\n                var value = JSON[key]\n                var t = new TriggerDetailCollection()\n                t.populate(value)\n                t.on('cascade', function(){self.trigger('cascade')})\n                this.set(key, t, {silent: true})\n            }\n            this.on('change', function(){self.trigger('cascade')})\n        },\n        toJSON: function(){\n            var ret = {}\n            for (var key in this.attributes){\n                var value = this.attributes[key]\n\n                ret[key] = value.toJSON();\n            }\n            return ret;\n        }\n    })\n    var TriggerDetailCollection = Backbone.Collection.extend({\n        populate: function(JSON){\n            var self = this\n            for (var i in JSON){\n                var curDetail = JSON[i]\n                var t = new TriggerDetail()\n                t.on('cascade', function(){self.trigger('cascade')})\n                t.populate(curDetail)\n                this.add(t, {silent: true})\n            }\n                this.on('add', function(){self.trigger('cascade')})\n                this.on('remove', function(){self.trigger('cascade')})\n        }\n    })\n    var TriggerDetail = Backbone.Model.extend({\n\n        populate: function(JSON){\n            var self = this\n            for (var key in JSON){\n                var value = JSON[key]\n           /*     if (value instanceof Array){\n                    value = new Backbone.Collection(value)\n\n                    value.on('add', function(){self.trigger('cascade')})\n                    value.on('remove', function(){self.trigger('cascade')})\n                    value.on('change', function(){self.trigger('cascade')})\n                } */\n                this.set(key, value, {silent: true})\n\n            }\n        }\n\n    })\n\n    return TriggerGroupCollection\n\n});\n\n","define('pathway/models/treeModel',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'globalmodels/contextModel',\n    'pathway/models/nodeModel',\n    'pathway/models/pathwayCollection',\n    'pathway/models/treeContext',\n    'pathway/models/triggerGroupCollection'\n], function ($, _, Backbone, contextModel, nodeModel, pathwayCollection, treeContext, triggerGroupCollection) {\n    var CURRENT_VERSION = \"version1\";\n    var treeModel;\n\n    var deleteRecur = function (me, toDelete, saveChildren) {\n        if (!me.get('isProtocol')) {\n            for (var i in me.get('children').models) {\n                var cur = me.get('children').models[i]\n                if (cur == toDelete) {\n                    var startLoc = me.get('children').indexOf(cur)\n                    if (saveChildren) {\n                        var savedChildren = cur.get('children').models\n                        for (var i in savedChildren) {\n                            var cur2 = savedChildren[i]\n                            if (me.get('children').length == 1 || !cur2.get('isProtocol')) {\n                                me.get('children').add(cur2, {at: startLoc, silent: true})\n                                startLoc = startLoc + 1\n                            }\n                        }\n                    }\n\n\n                    me.get('children').remove(toDelete, {silent: true})\n                } else {\n                    deleteRecur(cur, toDelete, saveChildren)\n                }\n            }\n        }\n\n    }\n\n    var openPathToTarget = function (cur, target, path) {\n\n        if (cur.get('nodeID') == target) {\n            for (var i in path) {\n                var cur2 = path[i]\n                cur2.showChildren && cur2.showChildren()\n            }\n\n        } else {\n            var list = []\n            if (!cur.get('isProtocol')) {\n                for (var i in cur.get('children').models) {\n                    var cur2 = cur.get('children').models[i]\n                    var temp = path.slice(0)\n                    temp.push(cur2)\n                    var n = openPathToTarget(cur2, target, temp)\n                }\n\n\n            }\n        }\n\n\n    }\n\n    var nodePosition = function (cur, target, change, pointer) {\n\n        var doWork = false\n        var siblingSet = []\n        if (cur.get('isProtocol')) return\n        for (var i in cur.get('children').models) {\n            var cur2 = cur.get('children').models[i]\n            siblingSet[siblingSet.length] = cur2\n            if (doWork == false && cur2 != target) {\n                nodePosition(cur2, target, change, pointer)\n            } else {\n                doWork = true\n            }\n        }\n        var last\n        if (doWork) {\n\n            for (var key in siblingSet) {\n                key = parseInt(key)\n                var val = siblingSet[key]\n                if (val == target) {\n                    if (change == -1) {\n                        siblingSet[key] = last\n                        siblingSet[key - 1] = val\n\n                        siblingSet[key].set('hasRight', key < (siblingSet.length - 1), {silent: true})\n                        siblingSet[key - 1].set('hasLeft', (key - 1) != 0, {silent: true})\n                        siblingSet[key - 1].set('hasRight', true, {silent: true})\n                        siblingSet[key].set('hasLeft', true, {silent: true})\n                        break;\n\n                    } else if (change == 1) {\n                        siblingSet[key] = siblingSet[key + 1]\n                        siblingSet[key + 1] = val\n\n                        siblingSet[key + 1].set('hasRight', (key + 1) < (siblingSet.length - 1), {silent: true})\n                        siblingSet[key].set('hasLeft', key != 0, {silent: true})\n                        siblingSet[key].set('hasRight', true, {silent: true})\n                        siblingSet[key + 1].set('hasLeft', true, {silent: true})\n                        break;\n                    }\n                }\n                last = val\n            }\n            pointer.parent = cur\n            pointer.child = siblingSet\n\n        }\n\n    }\n    var findCurNode = function (me) {\n\n        if (!me.get('isProtocol')) {\n            var toCheck = []\n            for (var x in me.get('children').models) {\n                var cur = me.get('children').models[x]\n                if (cur.childrenHidden && !cur.childrenHidden()) {\n                    toCheck.push(cur)\n\n                }\n            }\n            var ret = []\n            if (toCheck.length == 0) {\n                ret.push(me.get('nodeID'))\n            }\n\n            for (x in toCheck) {\n                var cur = toCheck[x]\n                ret = ret.concat(findCurNode(cur))\n            }\n            return ret\n\n\n        } else {\n            return ([me.get('nodeID')])\n        }\n    }\n\n    var hideSiblingsRecur = function (me, toHide) {\n\n        if (me.get('isProtocol')) return\n\n\n        //var tar = _.indexOf(me.get('children').models, toHide)\n        var tar = _.indexOf(me.get('children').models, toHide)\n        for (var i in me.get('children').models) {\n            if (tar != -1) {\n                if (i != tar) {\n                    recursiveCollapse(me.get('children').models[i])\n                }\n            }\n            else {\n                hideSiblingsRecur(me.get('children').models[i], toHide)\n            }\n        }\n    }\n\n    var recursiveCollapse = function (node) {\n\n\n        if (node.get('isProtocol')) return\n        node.hideChildren()\n        _.each(node.attributes.children.models, function (cur) {\n            recursiveCollapse(cur)\n        })\n\n    }\n    var recursiveExpand = function (node) {\n        if (node.get('isProtocol')) return\n        node.showChildren()\n        _.each(node.attributes.children.models, function (cur) {\n            recursiveCollapse(cur)\n        })\n\n    }\n\n\n    var TreeModel = nodeModel.extend({\n        elPairs: [],\n\t    idAttribute: 'pathid',\n        urlRoot: '/tree',\n        changeNodePosition: function (target, change) {\n            var pointer = {}\n            var r = nodePosition(this, target, change, pointer)\n            var parent = pointer.parent\n            var children = pointer.child\n            parent.set('children', new Backbone.Collection(children), {silent: true})\n            this.trigger('propagate')\n        },\n        expandAll: function () {\n            recursiveExpand(this)\n        },\n        getShareCode: function () {\n            var nodes = findCurNode(this)\n            var nodestr = \"\"\n            for (var i in nodes) {\n                var cur = nodes[i]\n                nodestr += \"-\" + cur\n            }\n            if (contextModel.get('page') == \"pathEditor\") {\n                Backbone.history.navigate(\"pathwayeditor/\" + contextModel.get('pathid') + \"/node/\" + nodestr);\n            } else {\n                Backbone.history.navigate(\"pathway/\" + contextModel.get('pathid') + \"/node/\" + nodestr);\n            }\n            contextModel.set('code', nodestr)\n\n        },\n        getPathToIDS: function (ids) {\n            this.collapse(this)\n            if (!ids && contextModel.get('code')) {\n                ids = contextModel.get('code').split('-')\n            }\n            for (var i in ids) {\n                var cur = ids[i]\n                if (cur)\n                    openPathToTarget(this, (cur), [this])\n            }\n        },\n        initialize: function () {\n            //this.on('all', function(evt) {\n            //console.log(evt)}\n            //)\n            this.set({\n                'triggers': new Backbone.Collection(),\n                'tooltip': 'triggers tooltip',\n                'sidePanelText': \"\",\n                'name': \"Triggers\"\n            })\n            this.populateChildren();\n            var that = this\n            contextModel.on('change:page', function () {\n                treeContext.trigger('propagate')\n            })\n            contextModel.on('change:pathid', function () {\n                var newpathid = contextModel.get('pathid')\n                if (newpathid && newpathid != '0') {\n                    treeContext.clear()\n\n                    that.getPathToIDS()\n\n\n                    var oldpathid = that.get('pathid')\n                    that.set({pathid: newpathid}, {silent: true})\n                    if (newpathid != oldpathid) {\n                        that.fetch()\n                    }\n                }\n                if (contextModel.get('page') == 'pathEditor') {\n                    require(['ckeditor'], function () {\n                    })\n                    Backbone.history.navigate(\"pathwayeditor/\" + newpathid + \"/node/\" + contextModel.get('code'));\n                } else {\n                    var code = contextModel.get('code')\n                    Backbone.history.navigate(\"pathway/\" + newpathid + \"/node/\" + code);\n                }\n            })\n            contextModel.on('change:code', function () {\n                if (contextModel.get('code')) {\n                    that.getPathToIDS()\n                    treeContext.trigger('propagate')\n                }\n            })\n            this.on('propagate', function () {\n                if (this.oldContent != JSON.stringify(this.toJSON())) {\n                    this.save(null, {\n                        error: function () {\n                            alert(\"Auto Save failed\")\n\n                        }\n                    })\n                } else {\n                    treeContext.trigger('propagate')\n                }\n            }, this)\n            this.on('sync', function (obj, data) {\n                this.oldContent = JSON.stringify(this.toJSON())\n                this.set({'pathid': data.pathid}, {silent: true})\n                contextModel.set({'pathid': String(data.pathid)})\n                pathwayCollection.fetch()\n                if (contextModel.get('code')) {\n                    that.getPathToIDS()\n                } else {\n                    if (contextModel.get('page') == \"pathEditor\") {\n                        that.expandAll()\n                    } else {\n                        that.collapse()\n                    }\n                }\n\n                treeContext.trigger('propagate')\n            }, this)\n            if (contextModel.get('pathid')) {\n                that.set({pathid: contextModel.get('pathid')}, {silent: true})\n                this.getPathToIDS()\n                this.fetch()\n                treeContext.trigger('propagate')\n            }\n            if (contextModel.get('page') == 'pathEditor') {\n                require(['ckeditor'], function () {\n                })\n            }\n            this.elPairs = []\n        },\n        getNextNodeID: function () {\n            this.set('nodeCount', this.get('nodeCount') + 1, {silent: true})\n            return this.get('nodeCount')\n        },\n        hideSiblings: function (toHide) {\n            hideSiblingsRecur(this, toHide)\n        },\n        collapse: function (node) {\n            if (!node) {\n                recursiveCollapse(this)\n            } else {\n                recursiveCollapse(node)\n            }\n        },\n        deleteNode: function (toDelete, saveChildren) {\n\n            deleteRecur(this, toDelete, saveChildren)\n            this.save()\n        },\n        getNodeType: function () {\n            return \"treeModel\"\n        },\n        toJSON: function (options) {\n            if (!options) {\n                options = {}\n            }\n            var retMap = _.omit(this.attributes, ['children', 'triggers', 'hasLeft', 'hasRight'])\n            if (options && options.toExport) {\n                retMap = _.omit(retMap, ['nodeID', 'nodeCount', 'id', 'pathid'])\n            }\n            retMap.children = this.get('children').toJSON(options)\n            retMap.triggers = this.get('triggers').toJSON()\n\n            /*     retMap.triggers = retMap.triggers.toJSON()\n             for (var i in retMap.triggers){\n\n             var curGroup = retMap.triggers[i]\n             curGroup['details'] = curGroup['details'].toJSON()\n             var curDetailsModel = curGroup['details']\n\n             for (var i2 in curDetailsModel){\n             curDetailsModel[i2] = curDetailsModel[i2].toJSON()\n\n             }\n             }\n             */\n            //console.log('the json will look like', retMap)\n\n            return retMap\n        },\n\n\n        loadNewPathway: function (params, options) {\n\n            this.set({\n                'triggers': new Backbone.Model(),\n                'sidePanelText': \"\",\n                'tooltip': params.tooltip,\n                'name': params.name,\n                'protocol': null,\n                'nodeCount': 0,\n                'nodeID': 0, \n                'folder': params.folder\n            }, {silent: true})\n            this.populateChildren()\n           var n = new triggerGroupCollection()\n            n.populate()\n            this.set('triggers', n, {silent: true});\n            this.unset('pathid', {silent: true})\n            var that = this\n            this.save({}, {\n                success: function (ogj, data) {\n                    pathwayCollection.fetch()\n                    params.pathid = data.pathid\n                    if (options && options.toImport) {\n                        that.parse(params, options)\n                        that.save({},\n                            {\n                                success: function () {\n                                    contextModel.set({'pathid': that.get('pathid')})\n                                    Backbone.history.navigate(\"pathwayeditor/\" + that.get('pathid') + \"/node/undefined\");\n                                    pathwayCollection.fetch()\n                                }\n                            })\n\n                    } else {\n                        contextModel.set({'pathid': data.pathid})\n                        Backbone.history.navigate(\"pathwayeditor/\" + that.get('pathid') + \"/node/undefined\");\n                        pathwayCollection.fetch()\n                    }\n                }\n            })\n\n        },\n        parse: function (response, options) {\n            if (!response.protocolVersion) {\n                this.set('protocolVersion', \"preversion\", {silent: true})\n            } else {\n                this.set('protocolVersion', response.protocolVersion, {silent: true})\n            }\n            var self = this;\n\n\n            var versions = {\n                \"preversion\": function (response, options) {\n                    if (options && options.toImport) {\n                        response = _.omit(response, ['nodeID', 'nodeCount'])\n                    }\n                    if (!response.nodeCount) {\n                        self.set({nodeCount: 0}, {silent: true})\n                    } else {\n                        self.set('nodeCount', response.nodeCount, {silent: true})\n                    }\n                    if (!response.nodeID) {\n                        self.set('nodeID', self.getNextNodeID(), {silent: true})\n                    } else {\n                        self.set('nodeID', response.nodeID, {silent: true})\n                    }\n                    self.set({\n                        tooltip: response.tooltip,\n                        sidePanelText: response.sidePanelText,\n                        pathid: response.pathid,\n                        protocol: response.protocol,\n                        name: response.name\n                    }, {silent: true})\n                    self.populateChildren(response.children, options)\n                    var n = new triggerGroupCollection()\n                    n.populate(response.triggers, self.get('protocolVersion'));\n                    self.set('triggers', n, {silent: true});\n                },\n                \"version1\": function (response, options) {\n                    if (options && options.toImport) {\n                        response = _.omit(response, ['nodeID', 'nodeCount'])\n                    }\n                    if (!response.nodeCount) {\n                        self.set({nodeCount: 0}, {silent: true})\n                    } else {\n                        self.set('nodeCount', response.nodeCount, {silent: true})\n                    }\n                    if (!response.nodeID) {\n                        self.set('nodeID', self.getNextNodeID(), {silent: true})\n                    } else {\n                        self.set('nodeID', response.nodeID, {silent: true})\n                    }\n                    self.set({\n                        tooltip: response.tooltip,\n                        sidePanelText: response.sidePanelText,\n                        pathid: response.pathid,\n                        protocol: response.protocol,\n                        name: response.name\n                    }, {silent: true})\n                    self.populateChildren(response.children, options)\n                    var n = new triggerGroupCollection()\n                    n.populate(response.triggers, self.get('protocolVersion'));\n                    n.on('cascade', function () {\n                        self.save(null, {\n                            error: function () {\n                                alert(\"Autosave Failed\")\n                            }\n                        })\n\n                    })\n                    self.set('triggers', n, {silent: true});\n                }\n\n            }\n\n            versions[this.get('protocolVersion')](response, options)\n            this.set('protocolVersion', CURRENT_VERSION)\n        }\n    });\n\n    treeModel = new TreeModel()\n    return treeModel\n\n});\n\n","\ndefine('text!templates/pathway/detailSearch.html',[],function () { return '<div class = \"widget-column col-sm-12\">\\n\\n<div style=\"clear: both; text-align: center\">\\n<div>\\n       <div class=\"input-group\">\\n                    <input class = \"form-control\" id = \"Detail-Search-Box\" type=\"text\" style=\"min-width: 200px\">\\n                      <span class=\"input-group-btn\">\\n                        <button class=\"btn btn-default\" id=\"searchButton\">Search</button>\\n                       </span>\\n                       <select id = \"search_results\" name = \\'code\\' style =\"text-align: center; min-width:200px\" class=\"form-control entries hasTerm drop-down detail-input\">\\n\\n                        <option class=\"\\'default\"></option>\\n                       </select>\\n       </div>\\n       <button style= \"float: right\" class = \"btn btn-default\" id = \"zoom-in-button\">Zoom in on Concept</button>\\n       <button style= \"float: right\" class = \"btn btn-default\" id = \"zoom-out-button\">Zoom out on Concept</button>\\n\\n\\n</div>\\n\\n</div></div>\\n';});\n\n","\ndefine('text!templates/pathway/resultRow.html',[],function () { return '<option value=<%=id%> term = \\'<%=term%>\\'><%=term%> (snomed: <%=id%>)</option>\\n';});\n\n","\ndefine('pathway/internalViews/detailSearchBox',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n   'globalmodels/contextModel',\n\n    'text!templates/pathway/detailSearch.html',\n    'text!templates/pathway/resultRow.html'\n], function ($, _, Backbone, contextModel, detailSearch, triggerSelectorRow) {\n    var DetailSearchBox = Backbone.View.extend({\n        doSearch: function(panel){\n\n                var t = contextModel.toParams();\n                $.extend( t, {'search_param': $('#Detail-Search-Box').val()})\n                var ty = panel.type.split(\"_\");\n                if (ty[ty.length-1] == 'dx'){\n                     $.extend( t, {'type': \"snomed_diagnosis\"})\n                } else if (panel.type.split(\"_\")[1] == 'NDC' || panel.type.split(\"_\")[1] == 'med'){\n                   $.extend( t, {'type': \"snomed_drug\"});\n                } else if (panel.type.split(\"_\")[1] == 'proc'){\n                   $.extend( t, {'type': \"CPT\"});\n                }\n                this.collection.fetch({data:$.param(t), success:function(){\n                    if (panel.collection.length>0 &&panel.collection.models[0].get('type')!='none'){\n                        panel.ready = true;\n                    }\n\n                }})\n\n        },\n\n        initialize: function(params){\n            this.template= _.template(detailSearch);\n                 this.$el.html(this.template());\n            this.collection  = params.collection;\n\n\n            if (this.collection.length==0) {\n                this.ready = false;\n            } else {\n                this.ready = true\n            }\n\n            this.collection.on('add', function(){\n                this.ready = true\n            }, this)\n\n            this.el = params.el;\n            this.type = params.type;\n            this.collection.on('sync', this.render, this);\n\n            var panel = this;\n            $('#searchButton', this.$el)[0].onclick = function(){\n                 panel.doSearch(panel)\n\n            }\n            $('#zoom-in-button', this.$el)[0].on = function(){\n                var t = contextModel.toParams();\n                $.extend( t, {'search_param': $('#search_results').val()})\n                $.extend( t, {'type': \"snomed_zoom_in\"})\n\n                panel.collection.fetch({data:$.param(t)})\n\n\n\n            }\n            $('#zoom-out-button', this.$el)[0].onclick = function(){\n                var t = contextModel.toParams();\n                $.extend( t, {'search_param': $('#search_results').val()})\n                $.extend( t, {'type': \"snomed_zoom_out\"})\n\n                panel.collection.fetch({data:$.param(t)})\n\n\n\n            }\n             $('#Detail-Search-Box', this.$el)[0].onkeydown = function(key){\n\n                if (key.keyCode == 13){\n                    panel.doSearch(panel)\n                }\n             }\n        },\n\n\n        render: function(){\n\n               $('.entries', this.$el).html(\"\");\n               var entryview = Backbone.View.extend({\n                    template: _.template(triggerSelectorRow),\n                    render: function(){\n                        if (!this.model.get('route')){\n                            this.model.set('route', \"\")\n                        }\n                        this.model.set('id', this.model.get('code')+this.model.get('route'))\n                        this.$el.html(this.template(this.model.toJSON()));\n                        return this;\n                    }\n                });\n\n            _.each(this.collection.models, function(cur){\n                var curentry = new entryview({model: cur});\n                $('.entries', this.$el).append(curentry.render().el.innerHTML);\n\n            }, this);\n            return this;\n        }\n    });\n\n    return DetailSearchBox;\n\n});\n\n","\ndefine('text!templates/pathway/ListBox.html',[],function () { return '<div class = \"widget-column col-sm-12\">\\n<select  class = \"form-control\" style =\"text-align: center; height:100%\" multiple class=\"selection-list\">\\n    <%=listEntries%>\\n</select></div>\\n';});\n\n","\ndefine('text!templates/pathway/groupResultRow.html',[],function () { return '<option value=<%=id%> term = \\'<%=term%>\\'><%=term%> (groupID: <%=id%>)</option>\\n';});\n\n","\ndefine('pathway/internalViews/detailListBox',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n   'globalmodels/contextModel',\n    'text!templates/pathway/ListBox.html',\n    'text!templates/pathway/resultRow.html',\n    'text!templates/pathway/groupResultRow.html'\n\n], function ($, _, Backbone, contextModel, triggerListBox, snomedLineTemplate, groupLineTemplate) {\n\n    var detailListBox = Backbone.View.extend({\n\n        template: _.template(triggerListBox),\n        initialize: function(params){\n            var panel = this\n            this.collection  = params.items;\n\n            this.type = params.type;\n            this.$el = params.el\n            if (this.type == \"snomed_diagnosis\"){\n                panel.lineTemplate = _.template(snomedLineTemplate)\n            } else if (this.type = \"groups\"){\n                panel.lineTemplate = _.template(groupLineTemplate)\n            }\n            panel.collection.on('add', panel.render, panel);\n            panel.collection.on('remove', panel.render, panel)\n\n            panel.render()\n\n\n\n        },\n\n        render: function(){\n\n            var text = \"\";\n            var panel = this\n            _.each(this.collection.models, function(cur){\n\n                var entryview = Backbone.View.extend({\n                        render: function(){\n                            this.$el.html(panel.lineTemplate(this.model.toJSON()));\n                            return this;\n                    }\n                });\n                var curentry = new entryview({model: cur});\n                text+= (curentry.render().el.innerHTML);\n            }, this);\n            this.$el.html(this.template({listEntries:text}));\n            return this;\n        }\n\n    });\n    return detailListBox;\n\n});\n\n","\ndefine('text!templates/pathway/multiSelectSearchPanel.html',[],function () { return '<div class = \"widget-column col-sm-12\">\\n<div id = \"parentbox\" style =\"clear: both\">\\n    <div id=\"availselectorbox\" style=\" float:left; height: 100%; width: 40%\">\\n            <h3 style=\"clear:both; text-align:center\">Select from This List</h3>\\n                    <div class=\"col-lg-6\" style = \"width:100%\">\\n                    <div class=\"input-group\">\\n                        <input  class = \"form-control search-input\" >\\n                      <span class=\"input-group-btn\">\\n                        <button class=\"btn btn-default search-button\">Search</button>\\n                      </span>\\n                    </div>\\n                    </div>\\n            <div style = \"clear:both; width:100%\" class=\"available-items search-list loinc-list-box\">The Available Items go Here</div>\\n\\n         </div>\\n                <div style=\"float:left; width:3%\"></div>\\n\\n        <div id =\"buttonsbox\" style = \"text-align:center; float:left; width:15%\">\\n            <div style=\"height:100px; clear:both\"></div>\\n            <button class=\"btn btn-default add-item-button\" style = \"vertical-align: middle; width:70px\">Add</button>\\n            <button  class=\"btn btn-default remove-item-button\" style = \"vertical-align: middle;\">Remove</button>\\n\\n        </div>\\n                    <div style=\"float:left; width:3%\"></div>\\n\\n        <div id = \"selecteditemsbox\" style = \"float:left; width:40%; height:100%\">\\n             <h3 style=\"clear:both; text-align:center\">Selected Items</h3>\\n            <br>\\n             <div style =\"float: left; width:100%\"class=\"selected-items search-list loinc-list-box\">Currently Loaded Items go here</div>\\n        </div>\\n\\n</div></div>\\n';});\n\n","\ndefine('pathway/internalViews/multiSelectSearch',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n   'globalmodels/contextModel',\n    'pathway/internalViews/detailListBox',\n    'text!templates/pathway/multiSelectSearchPanel.html'\n], function ($, _, Backbone, contextModel, detailListBox, searchPanelTemplate) {\n\n    var searchEditor = Backbone.View.extend({\n        template: _.template(searchPanelTemplate),\n        removeSelected: function(){\n            var selected = $('.selected-items option:selected');\n               _.each(selected, function(cur){\n                 var id = cur.value;\n                  var toMove\n                  _.each(this.selectedBox.collection.models, function(curModel){\n                     if(cur.value == curModel.get('id')){\n                         this.selected_items.remove(curModel)\n                     }\n                 }, this)\n              }, this)\n        },\n        addSelected: function(){\n            var selected = $('.available-items option:selected');\n            _.each(selected, function(cur){\n                var id = cur.value;\n                var toMove\n                _.each(this.availableBox.collection.models, function(curModel){\n                    if(cur.value == curModel.get('id')){\n                        this.selected_items.add(curModel)\n                    }\n                }, this)\n            }, this)\n         },\n         initialize: function(params){\n            this.$el.html(this.template());\n            var panel = this\n            this.type = params.type;\n            this.avail = params.avail;\n            this.selected_items = params.selected\n            this.el = params.el;\n\n            this.avail.on('sync', this.render, this);\n            if (this.type == \"snomed_diagnosis\"){\n                 $('.search-button', this.$el)[0].onclick = function(){\n                    var t = contextModel.toParams();\n                    $.extend( t, {'search_param': $('.search-input', panel.$el).val()})\n                    $.extend( t, {'type': panel.type});\n                    panel.avail.fetch({data:$.param(t)})\n                }\n                $('.search-input', this.$el)[0].onkeypress = function(key){\n                    if (key.keyCode == 13){\n                        var t = contextModel.toParams();\n                        $.extend( t, {'search_param': $('.search-input', panel.$el).val()})\n                        $.extend( t, {'type': panel.type});\n                        panel.avail.fetch({data:$.param(t)})\n                    }\n                }\n            } else {\n                $('.search-input').hide()\n                 $('.search-button').hide()\n            }\n            this.render()\n        },\n        render: function(){\n            var panel = this;\n            this.availableBox = new detailListBox({items: this.avail, type: this.type, el: $('.available-items', this.$el)});\n            this.selectedBox = new detailListBox({items: this.selected_items, type: this.type, el: $('.selected-items', this.$el)});\n            return this;\n        },\n        events: {\n\t    \"click .add-item-button\": 'addSelected',\n        \"click .remove-item-button\": 'removeSelected'\n\n\t    }\n    });\n\n    return searchEditor;\n\n});\n\n","define('pathway/modalViews/detailEditor',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'pathway/models/treeModel',\n    'pathway/internalViews/detailSearchBox',\n    'pathway/internalViews/multiSelectSearch'\n\n\n\n], function ($, _, Backbone,  curTree, detailSearchBox, multiSelectSearch) {\n\n    var DetailEditor = Backbone.View.extend({\n\n\n\n        initialize: function(param){\n\n            //load the params\n            this.group = param.group\n            this.model = param.model;\n            this.newDetail = param.newDetail\n            this.$el = param.el;\n            this.template = param.template\n            this.type = param.type;\n\n            this.$el.html(this.template());\n            //an array representing all of the search boxes, so that on exit we can check if they have all been filled\n            //out and prevent people from submitting incomplete rules\n            //unused in current implementation which uses the multiselect search\n            this.searchBoxes =[];\n            var that = this\n\n            //for each div with class search in the template render a single select detail search box, no templates\n            //currently use this\n            var searchEl = $('.search', this.$el)\n\n            if (searchEl.length!=0){\n                //create a new collection to represent the available options which will be returned by search\n                var anon =  Backbone.Collection.extend( {url: '/search'})\n                var col = new anon()\n                if (!that.newDetail){\n                    col.add(that.model)\n                }\n                // this is the only place where type is used, this should be changed to load dynamically from the\n                // database\n                var searchBox = new detailSearchBox({collection: col, type: this.type, el: searchEl})\n                searchBox.render();\n                this.searchBoxes.push(searchBox)\n            }\n\n            //for each div with class multi-select search create a multiSelectSearchPanel and render it in the div\n            var multiSearchEl = $('.multi-select-search', this.$el)\n            $.each(multiSearchEl, function(a, cur){\n                var populateType = cur.getAttribute('type')\n                //create a new Backbone Collection representing the available concepts in the 'availale' panel\n                //giving it a url makes it searcahble\n\n                var anon\n                if (populateType == \"snomed_diagnosis\")\n                    anon =  Backbone.Collection.extend( {url: '/search'})\n                else if (populateType == \"groups\")\n                    anon =  Backbone.Collection.extend( {url: '/groups'})\n\n                var avail = new anon\n                if (populateType == \"groups\")\n                    avail.fetch()\n                //create a new backbone collection representing the currently selected items in the 'selected' panel\n                //it starts out empty\n                var sel = new Backbone.Collection()\n                //if this is not a new detail, load its values of the type requested by this multiSelectEl\n                //into the 'sel' collection\n                if (!that.newDetail){\n                    for (a in that.model.get(cur.getAttribute('name'))){\n                        var c = that.model.get(cur.getAttribute('name'))[a]\n                        var t = that.model.get(cur.getAttribute('name')+'term')[a]\n                        sel.add(new Backbone.Model({id: c, code: c, term: t, type: cur.getAttribute(\"type\") }))\n                    }\n                }\n\n                //create the multi select search box\n                var searchBox = new multiSelectSearch({avail: avail, type: cur.getAttribute(\"type\"), el: cur, selected: sel})\n            })\n\n            //create routeList views for each div in the template with class route-list\n            var routeListEl = $('.route-list', this.$el)\n            $.each(routeListEl, function(a, cur){\n                var listBox = new routeListBox({el: cur})\n            })\n            //if this is an edited detail fill all of the normal input boxes with the correct values\n            if (!this.newDetail){\n                this.fillTemplate();\n            }\n            //show the el\n            this.$el.show();\n\n\n            var panel = this;\n\n            //when the confirm detail button is pressed\n            $('.confirm-detail-button', this.$el)[0].onclick = function(){\n                //if any search box isnt complete, dont exit, give a warning, prevent creating a glitched detail\n                if (panel.searchBoxes.length>0){\n                    for (var cur in panel.searchBoxes){\n                        if (!panel.searchBoxes[cur].ready){\n                            alert(\"Constraint is not complete, make sure you have a value selected in all search boxes\")\n                            return;\n                        }\n                    }\n                }\n                //for each element in the template with class '.detail-input' update the value of the attribute with\n                //the name of that element to to value of that element\n                var inputs = $('.detail-input', panel.$el);\n                for (var i=0;i<inputs.length;i++){\n                    var cur = inputs[i];\n\n                    //if the detail-input has the class has term, we know that it has a term as well as a value\n                    //so, its also a search box, so loop through the box to find the selected one find its term\n                    //and set it in the model\n\n\n                    if ($(cur).hasClass('hasTerm')){\n\n                        _.each(cur, function(current){\n                            if (current.selected){\n                                _.each(current.attributes, function(curAttrib){\n                                    panel.model.set(curAttrib.name, curAttrib.value);\n                                })\n                            }\n                        })\n                    }\n                    panel.model.set(cur.getAttribute('name'), cur.value);\n\n\n                }\n\n                //for each multi select search create the list of selected ids and their corresponding terms, and set\n                //the value of the attribute in the model which has that name, to the id list, and the\n                //value of the attribute in the model which is created by the name + \"term\" to the term list\n                var multi = $('.multi-select-search', this.$el)\n                _.each(multi, function(cur){\n                    var selectedItems = $('.selected-items option', cur)\n                    //instantiate the list\n                    var idList = [];\n                    var termList = []\n                    _.each(selectedItems, function(cur){\n                        //loop through the selected items and push their value to the id list,\n\n                        idList.push(cur.value)\n                        //push their term attribute to the term list\n                        termList.push(cur.getAttribute(\"term\"));\n                    })\n                    //set the model's attribute with the name of this multi-select-search to the id list\n                    panel.model.set(cur.getAttribute('name'), idList);\n                    //set the models attribute with the name of this multi-select-search concatenated with the string\n                    // \"term\" to be the term list\n\n                    panel.model.set(cur.getAttribute('name')+'term', termList);\n                }, this)\n\n                if (panel.newDetail){\n\n                    that.group.addDetail(panel.model, panel.type);\n\n\n                } else {\n                    curTree.trigger('propagate')\n                }\n               //hide the detail modal\n                   $('#detail-modal').modal('hide');\n            }\n\n            //when the cancel button is pressed just hide the editor\n            $('.cancel-edit-button', this.$el)[0].onclick = function(){\n                   $('#detail-modal').modal('hide');\n            }\n              $(\"#detail-modal\").modal({'show':'true'});\n\n        },\n        //called if the rule is not a new rule, fill all of the normal input fields to have the value currently stored\n        //in the model\n        fillTemplate: function(){\n            var inputs = $('.detail-input');\n             for (var i=0;i<inputs.length;i++){\n                    var cur = inputs[i];\n                    cur.value = this.model.get(cur.name);\n\n                }\n        }\n\n\n\n    });\n\n    return DetailEditor;\n\n});\n\n","\ndefine('text!templates/pathway/detailSection.html',[],function () { return '<div class=\"items\">\\n</div>';});\n\n","/*\n\n\n Backbone View displaying the set of details of a particular type contained in curRule\n Displayed Under: Details\n Param:\n lineTemplate : the template to be used for single detail of the type used\n el           : the DOM element wherin to render the entire group\n list         : the set of details to render\n\n */\n\n\ndefine('pathway/internalViews/detailGroup',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    'pathway/models/treeModel',\n\n    'pathway/modalViews/detailEditor',\n    'text!templates/pathway/detailSection.html'\n], function ($, _, Backbone, curTree, DetailEditor, detailSectionTemplate) {\n\n    var DetailGroup = Backbone.View.extend({\n\n        template: _.template(detailSectionTemplate),\n\n        initialize: function (params) {\n            var self = this;\n            // load the params into the object\n            this.lineTemplate = params.lineTemplate;\n            this.list = params.list;\n            this.type = params.type;\n            this.group = params.group;\n            this.el = params.el;\n\n\n\n        },\n        render: function () {\n            this.$el.html(\"\");\n            var type = this.type;\n            var panel = this\n\n            //Backbone view representing a line to be displayed in the detail group\n            //params:\n            //      el: the div wherein to render the new line, used instead of append for no reason I can remember, should be refactored\n            //      text: the text to be displayed in the line\n            //      detail: the object model of the detail represented by the line\n            var detailLine = Backbone.View.extend({\n\n                initialize: function (params) {\n                    this.el = params.el\n                    this.$el.html(params.text)\n                    this.group = params.group\n\n                    this.detail = params.detail\n\n\n                    var that = this\n                    // if the user clicks the  el '.detail-item' link in this line, load the editor template for this detail and display the modal for editing\n                    $('.detail-item', this.$el).off('click')\n                    $('.detail-item', this.$el).on('click' , function () {\n\n                        require(['text!/templates/pathway/details/' + type + '_editor.html'],\n                            function (curTemplate) {\n\n                                var curView = new DetailEditor({group: that.group, model: that.detail, el: $('#detailed-trigger-modal'), template: _.template(curTemplate), type: type});\n                                curView.render()\n\n                            }\n                        );\n                    })\n                    //if the user clicks the '.remove-detail' X in the line remove the detail\n                     $('.remove-detail', this.$el).off('click');\n                    $('.remove-detail', this.$el).on('click',function(){\n                        that.group.get('details').get(type).remove(that.detail);\n\n                    })\n\n                }\n            })\n            //for each detail in the list create a spot for a detailLine view and create a detailLine view to be rendered in that spot\n            this.list.each(function (cur) {\n                cur.off('change')\n                //rerender the group if one of the details within it changes\n                cur.on('change', this.render, this)\n                //create a div in which to render the new detail line\n                this.$el.append(\"<div class = 'item-holder'></div>\")\n                //create the detail line to be rendered in the div, set the text to use the line template\n                var params = {}\n                for (var i in cur.attributes){\n                    var c = cur.attributes[i]\n                    if (c.models ){\n                        params[i] = c.models\n                    } else {\n                        params[i] = c\n                    }\n                }\n\n                new detailLine({group: this.group, el: $('.item-holder', this.$el).last(), text: this.lineTemplate(params), detail: cur})\n\n\n            }, this);\n\n            return this;\n\n        }\n\n    });\n\n    return DetailGroup;\n\n});\n\n","define('Helpers',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n], function ($, _, Backbone, curRule) {\n\n    var Helpers = {\n\n        detailHeadings: {\n            'enc_pl_dx': \"Encounter or Problem List Diagnosis\",\n            'pl_dx': \"Problem List Diagnosis\",\n            'hist_dx': \"Historical Diagnosis\",\n            'lab': \"Lab Results\",\n            'enc_dx': \"Encounter Diagnosis\",\n            'hist_proc': \"Historic Procedure\",\n            'enc_proc':\"(unusued) Encounter Procedure\",\n            'ml_med' : \"Medication List\",\n            'vitals': \"Vital Signs\",\n            'vitals_bp': \"Disjunctive Blood Pressure Detail\"\n        },\n        detailDescriptions: {\n\n            'enc_pl_dx' : \"Specify a constraint based on a diagnosis that can be found either in the current encounter or on the patient’s problem list. This would represent a fairly comprehensive set of acute and chronic diagnoses that are likely to be currently active for the patient.\",\n            'pl_dx'     : \"Specify a constraint based on a diagnosis in the patient’s problem list. The patient problem list is a patient-level section of the medical record that catalogs the most important diagnoses for the patient\",\n            'hist_dx'   : \"Specify a constraint based on a diagnosis in the patient’s diagnostic history\",\n            'lab'       : \"Specify a constraint based on the patient's lab results\",\n            'enc_dx'    : \"Specify a constraint based on any diagnosis currently associated with the encounter such as chief complaints, differential diagnoses, or symptoms that have been discretely documented and transmitted to Maven. \",\n            'hist_proc' : \"Specify a constraint based on procedures that the patient has undergone in the past\",\n            'enc_proc'  : \"(unusued) Encounter Procedure\",\n            'ml_med'    : \"Specify a constraint based on medications that the patient is currently taking according to the medical record\",\n            'vitals'    : \"Specify a constraint based on the patient's vitals\",\n            'vitals_bp' : \"Specify a constraint based on the patient's blood pressure which allows for EITHER the systolic OR diastolic to be within a given range\"\n        },\n        notDetail: ['id', 'evidence','genders', 'minAge', 'maxAge', 'name', 'triggers', 'triggerType', 'sources', 'detID', 'conflicts', 'treeInfo']\n    };\n\n    return Helpers;\n\n\n});\n\n","\ndefine('text!templates/pathway/disjoinedGroups.html',[],function () { return '<div id=\"group-<%=groupID%>\" style=\"padding: 8px;  >\\n<div  style = \" font-size: 130%; margin-bottom: 8px; \">Show Alert if\\n<input class=\"toggles\" type=\"checkbox\">\\nof these are true\\n<div class=\"group-delete\" id=\"delete-<%=groupID%>\" style=\"float:right\"><a>&#10006</a></div>\\n</div>\\n\\n\\n<div style=\"font-size: 70%\" class=\\'detail-sections\\'></div>\\n\\n</div>\\n';});\n\n","\ndefine('text!templates/pathway/RuleWizard.html',[],function () { return '<div id=\"detail-modal\" class=\"modal fade\" role=\"dialog\" aria-hidden=\"true\" style=\"z-index: 1030\">\\n    <div class=\"modal-dialog modal-lg\">\\n        <div class=\"modal-content\">\\n            <div class=\"modal-header\">\\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span\\n                        aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\\n                <h4 class=\"modal-title\">Pathway Triggers</h4>\\n            </div>\\n\\n            <div class=\"modal-body\">\\n\\n                <div style = \"clear:both\" class=\"detail-sections\"><div style=\"text-align: center;\">All of the Following Groups of Requirements Must be Fulfilled in Order to Show the\\n    Pathway\\n                </div></div>\\n\\n                <br>\\n<div style=\"margin-left: 15%; margin-right:15%; max-width: 60%\" id=\"disjoinedGroups\">\\n\\n\\n</div>\\n\\n\\n<br>\\n<div style=\"float:left\">\\n    <div class=\\'detailButton btn-default btn\\'\\n         id=\\'enc_dx\\'\\n         title=\"Specify a constraint based on any diagnosis currently associated with the encounter such as chief complaints, differential diagnoses, or symptoms that have been discretely documented and transmitted to Maven.\"\\n            >\\n        Encounter Diagnosis\\n    </div>\\n</div>\\n\\n<div style=\"float:left\">\\n    <div class=\\'detailButton btn-default btn\\'\\n         id=\"hist_dx\"\\n         title=\"Specify a constraint based on a diagnosis in the patient’s diagnostic history\"\\n            >\\n        Historic Diagnosis\\n    </div>\\n</div>\\n\\n\\n<div style=\"float:left\">\\n    <div class=\\'detailButton btn-default btn\\'\\n         id=\"pl_dx\"\\n         title=\"Specify a constraint based on a diagnosis in the patient’s problem list\"\\n            >\\n        Problem List Diagnosis\\n    </div>\\n</div>\\n<div style=\"float:left\">\\n    <div class=\\'detailButton btn-default btn\\'\\n         id=\"all_dx\"\\n         title=\"Specify a constraint based on a diagnosis in the patient’s problem list\"\\n            >\\n        All Diagnoses\\n    </div>\\n</div>\\n<div style=\"float:left\">\\n    <div class=\\'detailButton btn-default btn\\'\\n         id=\"membership\"\\n         title=\"Specify a constraint based on the receiving clinicians group memberships\"\\n            >\\n        Clinician Groups\\n    </div>\\n</div>\\n<button id=\"add-group-button\" class=\"btn btn-default\" >Add Group</button>\\n\\n\\n\\n            </div>\\n            <div class=\"modal-footer\">\\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\\n                    <button id=\"back-to-editor\" class=\"btn btn-primary\">Confirm</button>\\n                </div>\\n        </div>\\n    </div>\\n</div>';});\n\n","define('pathway/modalViews/ruleWizard',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'globalmodels/layoutModel',\n    'pathway/modalViews/detailEditor',\n    'pathway/internalViews/detailGroup',\n    'pathway/models/treeModel',\n    'Helpers',\n    'text!templates/pathway/detailSection.html',\n    'text!templates/pathway/disjoinedGroups.html',\n    'text!templates/pathway/RuleWizard.html',\n    'bootstrapswitch',\n\n], function ($, _, Backbone, contextModel, layoutModel, detailEditor, DetailGroup, curTree, helpers, detailSection, disjoinedGroupTemplate ,wizardTemplate) {\n    var printGroup = function(key, curGroup, location){\n        require (['text!/templates/pathway/details/' + key + 'Detail.html'], function(key) {return  function(curTemplate){\n                                //load the list of details of this type\n                                var toList = curGroup.get('details').get(key);\n                                var toTemplate = _.template(curTemplate);\n                                var sectionTemplate = _.template(detailSection);\n\n                                            location.append(sectionTemplate());\n\n                                            //create a new detail group for this detail type, and send it the collection of details of this type\n                                            var cur  = new DetailGroup({group: curGroup, el: $('.items').last(), lineTemplate:toTemplate, list: toList, type: key})\n\n                                        cur.render();\n\n\n\n                            };}(key));\n\n  };\n    var ruleWizard = Backbone.View.extend({\n         el: '#modal-target',\n\n        initialize: function(params){\n            this.template = _.template(wizardTemplate)\n            this.$el.html(this.template())\n            $('.detailButton').draggable({ revert: true })\n          this.render();\n        },\n        render: function(){\n             var that = this\n            curTree.once('sync', function () {\n                that.render()\n            })\n\n\n            $('#add-group-button').on('click', function () {\n                curTree.get('triggers').addGroup(\"and\")\n            })\n\n             var groupView = Backbone.View.extend({\n                template: _.template(disjoinedGroupTemplate),\n                initialize: function (param) {\n                    this.group = param.group\n                     this.$el.droppable({\n                        drop: function (event, ui) {\n                            console.log(this.group)\n                            var detailType = ui.draggable[0].id\n                            require(['text!templates/pathway/details/' + detailType + \"_editor.html\"], function (template) {\n                                var curEditor = new detailEditor({group: self.group, template: _.template(template), model: new Backbone.Model(), newDetail: true, el: $('#detailed-trigger-modal'), triggerNode: that.triggerNode, type: detailType})\n                                curEditor.render()\n                            })\n\n\n                        },\n                        activeClass: \"activeDrop\",\n                        hoverClass: \"hoverDrop\"\n                    })\n\n                },\n\n                render: function () {\n                    var self = this;\n                    this.$el.css({'border-style': 'solid', 'border-width': '4px'})\n\n\n\n                    var params = {relationship: this.group.get('relationship'), groupID: this.group.cid}\n                    this.$el.html(this.template(params))\n\n                    $('.group-delete', this.$el).on('click', function () {\n                        curTree.get('triggers').remove(self.group)\n                    })\n\n                    $(\".toggles\", this.$el).bootstrapSwitch()\n                    $(\".toggles\", this.$el).bootstrapSwitch('onText', \"Any\")\n                    $(\".toggles\", this.$el).bootstrapSwitch('offText', \"All\")\n\n                    if (self.group.get('relationship') == \"and\") {\n                        $(\".toggles\", this.$el).bootstrapSwitch(\"state\", false, false)\n                    } else {\n                        $(\".toggles\", this.$el).bootstrapSwitch(\"state\", true, false)\n                    }\n                    $(\".toggles\", this.$el).on('switchChange.bootstrapSwitch', function (a, b) {\n                        if ($(\".toggles\", self.$el).bootstrapSwitch('state') == false) {\n                            self.group.set('relationship', \"and\")\n                        }\n                        else {\n                            self.group.set('relationship', \"or\")\n                        }\n\n\n                    })\n\n                    for (var key in this.group.get('details').attributes) {\n                        var location = $('.detail-sections', this.$el)\n                        printGroup(key, this.group, location)\n                    }\n                    return this\n\n\n                }\n            })\n\n             for (var i in curTree.get(\"triggers\").models) {\n                var curGroup = new groupView({group: curTree.get('triggers').models[i]})\n                $('#disjoinedGroups').append(curGroup.$el)\n                $('#disjoinedGroups').append(\"<div style='height:25px'></div>\")\n                curGroup.render()\n\n            }\n\n\n            $(\"#detail-modal\").modal({'show':'true'});\n        }\n\n\n    });\n    return ruleWizard\n});\n","\ndefine('text!templates/pathway/newPathwayFolder.html',[],function () { return '<div class=\"widget-column col-sm-6\">\\n    <div id=\"detail-modal\" class=\"modal fade\" role=\"dialog\" aria-hidden=\"true\" data-backdrop=\"static\">\\n        <div class=\"modal-dialog\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-body\">\\n                    <form>\\n                        <div class=\"input-group input-group-sm\" style=\"max-width:360px;\">\\n                            Folder Name:<input type=\"text\" class=\"form-control pathwayFolderName\" name=\"folderName\" value=\"\">\\n                        </div>\\n                    </form>\\n                </div>\\n                <div class=\"modal-footer\">\\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancel</button>\\n                    <button type=\"button\" class=\"btn btn-primary createPathwayFolder\">Create</button>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n';});\n\n","define('pathway/modalViews/newPathwayFolder',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbones\n    'pathway/models/pathwayCollection',\n\n    'text!templates/pathway/newPathwayFolder.html',\n\n], function ($, _, Backbone, curCollection, newPathwayFolderTemplate) {\n\n   var FolderRow;\n\n    var NewPathwayFolder = Backbone.View.extend({\n        template: _.template(newPathwayFolderTemplate),\n        parentList: [],\n        parentFolder: null,\n        events: {\n            'click .createPathwayFolder': 'handleCreateFolder',\n        },\n        initialize: function (arg) {\n            FolderRow = require('pathway/singleRows/folderRow');\n            if (typeof arg.parentFolder !== \"undefined\") {\n                this.parentFolder = arg.parentFolder;\n            }\n            if (typeof arg.parentList !== \"undefined\") {\n                this.parentList = arg.parentList;\n            }\n\n            //var that = this;\n            //this.parent = parent;\n            this.$el.html(this.template(this.attributes));\n            $(\"#detail-modal\").modal({'show': 'true'});\n            //$(\".createPathwayFolder\", this.$el).on(\"click\", this.handleCreateFolder);\n        },\n        handleCreateFolder: function(){\n            $('#detail-modal').modal('hide');\n\n            var folder_name = $(\".pathwayFolderName\", this.$el).val();\n            var thisModel = new Backbone.Model({name: folder_name});\n            var thisRow = new FolderRow({model: thisModel, parentList: this.parentList})\n\n            if (this.parentFolder !== null) {\n                //add folder\n                this.parentFolder.append(thisRow.render().$el);\n\n                //open parent folder\n                //$(\".folder-state\", this.parentFolder).switchClass(\"glyphicon-folder-close\", \"glyphicon-folder-open\");\n                 //$(\".ui-state-default\", this.$el).css(\"display\",\"inline-block\");\n                    //thisRow.$el.siblings().css(\"display\",\"inline-block\");\n            }\n            else {\n                $(\"#avail-paths-list\").append(thisRow.render().$el);\n            }\n            $(document).ready(function() {\n               // curCollection.makeSortable();\n                $(thisRow.el).removeClass(\"dd-collapsed\");\n            });\n\n            this.undelegateEvents(); // Unbind all local event bindings\n\n            delete this.$el; // Delete the jQuery wrapped object variable\n            delete this.el; // Delete the variable reference to this node\n\n        }\n    });\n    return NewPathwayFolder;\n});\n\n","\ndefine('text!templates/pathway/sendProtocol.html',[],function () { return '<div class=\"widget-column col-sm-12\">\\n    <div id=\"detail-modal\" class=\"modal fade\" role=\"dialog\" aria-hidden=\"true\" data-backdrop=\"static\">\\n        <div class=\"modal-dialog\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-body\" style=\\'margin-bottom: 20;\\'>\\n                    <div class=\"row\">\\n                    <div class=\"col-sm-6\">\\n                        <div class=\"row\">\\n                            <div class=\"search-box\" style=\\'width:10%;\\'></div>\\n                            <form class=\"search-box\">\\n                                <div class=\"input-group input-group-sm\" style=\"max-width:360px;\">\\n                                      Send To:<input type=\"text\" class=\"form-control\" placeholder=\"Search Provider\"\\n                                         name=\"protocolRecipient\" id=\"protocolRecipient\" value=\"<%= typeof(defaultRecipient) !== \\'undefined\\' ? defaultRecipient : \\'\\' %>\">\\n                                    <input id=\"recipientUserName\" type=\"hidden\" value=\"<%= typeof(defaultRecipientName) !== \\'undefined\\' ? defaultRecipientName : \\'\\' %>\">\\n                                </div>\\n                            </form>\\n                        </div>\\n                    </div>\\n                    <div class=\"col-sm-6\">\\n                        <div class=\"row\">\\n                            Quick Note:<textarea size=10 id=\"sendProtocolNote\" type=\"text\" class=\"form-control\"\\n                                                 placeholder=\"\"><%= typeof(defaultQuickNote) != \\'undefined\\' ? defaultQuickNote : \\'\\' %></textarea>\\n                        </div>\\n                    </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\"modal-footer\">\\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancel</button>\\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"sendProtocolButton\">Send</button>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n';});\n\n","define('pathway/modalViews/sendProtocol',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbones\n    'pathway/models/nodeModel',\n    'globalmodels/contextModel',\n    'text!templates/pathway/sendProtocol.html',\n\n], function ($, _, Backbone, NodeModel, contextModel, sendProtocolTemplate) {\n\n    var sendProtocol = Backbone.View.extend({\n        template: _.template(sendProtocolTemplate),\n        el: $(\"#modal-target\"),\n        initialize: function(parent){\n            var that = this;\n            this.parent = parent;\n            this.$el.html(this.template(that.attributes));\n            $(\"#detail-modal\").modal({'show':'true'});\n\n            $(\"#sendProtocolButton\", this.$el).on(\"click\", function(){\n                //var title = CKEDITOR.instances.newProtocolTitle.getData()\n                //that.parent.set('protocol', new Backbone.Model({title: title}))\n                $('#detail-modal').modal('hide')\n\t\t        var recipientUserName = $(\"#recipientUserName\").val();\n                var message = $(\"#sendProtocolNote\").val() + \"\\r\\n \" + contextModel.get(\"official_name\") +\n                                \" would like you to review this patient. \\r\\n\" +\n                                window.location.protocol + \"//\" + window.location.host +\n                                \"#/pathway/\" + contextModel.get(\"pathid\") + \"/node/\" + that.parent.get(\"nodeID\") +\n                                \"/patient/\" + contextModel.get(\"patients\") + \"/\" + new Date().toISOString().substr(0,10) +\n\t\t                \"/login/\" + recipientUserName + \"/\" + contextModel.get('customer') + \"/\" +\n \t\t                \"\\r\\n\";\n\n                $.ajax({\n                    type: 'POST',\n                    dataType: 'json',\n                    url: \"/send_message?\" + $.param(contextModel.toParams()) + \"&target_user=\"+recipientUserName,\n                    data: JSON.stringify({\n                        \"subject\": \"Please review this patient - \" + contextModel.get(\"official_name\"),\n                        \"message\": message,\n                    }),\n                    error: function (){\n                        alert(\"There was a problem sending the message.\");\n                    }\n                });\n            })\n\n            $('#protocolRecipient').autocomplete({\n                source: function (request, response) {\n                    $.ajax({\n                        url: \"/users\",\n                        term: request.term,\n                        dataType: \"json\",\n                        data: $.param(contextModel.toParams()) + \"&target_user=\" + request.term + \"&target_role=provider\",\n                        success: function (data) {\n                            response(data);\n                        }\n                    });\n                },\n                minLength: 3,\n                select: function (event, ui) {\n                    event.preventDefault();\n                    if(ui.item){\n                        $(event.target).val(ui.item.label);\n                        $(\"#recipientUserName\").val(ui.item.value);\n                    }\n                }\n            });\n        }\n    });\n    return sendProtocol\n});\n\n","\ndefine('text!templates/pathway/NewNodeModal.html',[],function () { return '<div class=\"widget-column col-sm-12\">\\n    <div id=\"detail-modal\" class=\"modal fade\" role=\"dialog\" aria-hidden=\"true\" data-backdrop=\"static\">\\n        <div class=\"modal-dialog modal-lg\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\">\\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span\\n                            aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\\n                    <h4 class=\"modal-title\">\\n                        <% if (name) { %>\\n                        Editing : <%= name %>\\n                        <% } else { %>\\n                        New Node\\n                        <% } %>\\n                    </h4>\\n                </div>\\n\\n                <div class=\"modal-body\">\\n                    <div class=\"form-group\">\\n                        <span class=\"headings\">Node Name:</span>\\n                        <input id=\"newNodeText\" type=\"text\" class=\"form-control\" placeholder=\"\"\\n                        <% if (name) { %>\\n                        value=\"<%= name %>\"\\n                        <% } %>\\n                        >\\n\\n                    </div>\\n\\n                    <div class=\"form-group\">\\n                        <span class=\"headings\">Node Tooltip (helping text):</span>\\n                        <input id=\"newNodeTooltip\" class=\"form-control\" placeholder=\"\"\\n                        <% if (name) { %>\\n                        value=\"<%= tooltip %>\"\\n                        <% } %>\\n                        >\\n                    </div>\\n\\n                    <div class=\"form-group\">\\n                        <span class=\"headings\">Node Side Panel Text:</span>\\n                        <textarea id=\"newNodeSideText\" class=\"form-control\" placeholder=\"\">\\n                            <% if (name) { %>\\n                            <%= sidePanelText %>\\n                            <% } %>\\n                        </textarea>\\n                    </div>\\n\\n                </div>\\n\\n                <div class=\"modal-footer\">\\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancel</button>\\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"addNodeButton\">\\n                        <% if (name) { %>\\n                            Save Changes\\n                        <% } else { %>\\n                        Confirm\\n                        <% } %>\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n';});\n\n","\ndefine('text!templates/pathway/NewProtocolModal.html',[],function () { return '<div class=\"widget-column col-sm-12\">\\n    <div id=\"detail-modal\" class=\"modal fade\" role=\"dialog\" aria-hidden=\"true\" data-backdrop=\"static\">\\n        <div class=\"modal-dialog modal-lg\">\\n            <div class=\"modal-content\">\\n\\n                <div class=\"modal-header\">\\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span\\n                            aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\\n                    <h4 class=\"modal-title\">New Protocol</h4>\\n                </div>\\n\\n                <div class=\"modal-body\">\\n                    <div class=\"form-group\">\\n                        <span class=\"headings\">Protocol:</span>\\n                        <textarea id=\"ProtocolText\" type=\"text\" class=\"form-control\" placeholder=\"\"></textarea>\\n                    </div>\\n\\n                    <div class=\"form-group\">\\n                        <span class=\"headings\">Note to copy:</span>\\n                        <textarea id=\"NoteToCopyText\" class=\"form-control\" placeholder=\"\"></textarea>\\n                    </div>\\n\\n                    <div class=\"form-group\">\\n                        <span class=\"headings\">Send Defaults:</span><br/>\\n                        <div class=\"row\">\\n                            <div class=\"col-sm-6\">\\n                                <div class=\"row\">\\n                                    <div class=\"search-box\" style=\\'width:10%;\\'></div>\\n                                    <form class=\"search-box\">\\n                                        <div class=\"input-group input-group-sm control-group\" style=\"max-width:360px;\">\\n                                              Recipient:<input type=\"text\" class=\"form-control\" placeholder=\"Search Provider\"\\n                                                 name=\"protocolRecipient\" id=\"defaultRecipient\" >\\n                                            <input id=\"defaultRecipientName\" name=\"defaultRecipientName\" type=\"hidden\" value=\"\">\\n                                        </div>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <div class=\"row\">\\n                                    Quick Note:<textarea size=10 id=\"defaultQuickNote\" type=\"text\" class=\"form-control\" placeholder=\"\"></textarea>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\"form-group\" >\\n                        <span class=\"glyphicon glyphicon-chevron-right show-advanced-settings\"></span>\\n                        <span class=\"headings\">Advanced</span><br/>\\n                    </div>\\n\\n                    <div class=\"form-group advanced-settings\">\\n                        <div class=\"row followup-header\">\\n                            <div class=\"col-sm-6\">\\n                                    <span class=\"headings\">Timed Followup Plan</span>\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <div class=\"input-group input-group-sm\" style=\"max-width:360px;\">\\n                                    Default Recipient:<input type=\"text\" class=\"form-control\" placeholder=\"Search Provider\"\\n                                                     name=\"defaultFollowupRecipient\" id=\"defaultFollowupRecipient\">\\n                                                <input id=\"defaultFollowupRecipientName\" name=\"defaultFollowupRecipientName\" type=\"hidden\" value=\"\">\\n                                    </div>\\n                            </div>\\n                        </div>\\n                        <div class=\"row followup-header-columns\" style=\"display:none;\">\\n                            <div class=\"col-sm-6\">\\n                                    <span class=\"headings\">What</span>\\n                            </div>\\n                            <div class=\"col-sm-2\">\\n                                    <span class=\"headings\">When</span>\\n                            </div>\\n                            <div class=\"col-sm-1\">\\n                                    <span class=\"headings\">Who</span>\\n                            </div>\\n                            <div class=\"col-sm-1\">\\n                                &nbsp;\\n                                <!-- <span class=\"headings\">Repeat</span> -->\\n                            </div>\\n                        </div>\\n                        <div id=\"followups\">\\n\\n                        </div>\\n                        <div class=\"row followup-footer\">\\n                            <div class=\"col-sm-12\">\\n                                <button type=\"button\" id=\\'add-new-followup\\'  class=\"btn btn-default btn-xs\">\\n                                    <span class=\"glyphicon glyphicon-plus\"></span>\\n                                </button> New Followup\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n                <div class=\"modal-footer\">\\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancel</button>\\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"addNodeButton\">Confirm</button>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>';});\n\n","\ndefine('text!templates/reminderRow.html',[],function () { return '    <div class=\"row\">\\n        <div class=\"col-sm-1\">\\n            <span class=\"headings\">Subject</span>\\n        </div>\\n        <div class=\"col-sm-5\">\\n            <input type=\"text\" class=\"form-control reminderSubject\" name=\"reminderSubject\" value=\"<%= (typeof msg_subject !== \\'undefined\\') ? msg_subject : \\'\\' %>\">\\n        </div>\\n        <div class=\"col-sm-2\">\\n            <div class=\"input-group input-group-sm\" style=\"width:100%;\">\\n                <input type=\"text\" class=\"form-control reminderTime datePickerTextBox\" name=\"reminderTime\" readonly=\"readonly\"\\n                       value=\"<%= (typeof due !== \\'undefined\\') ? due : \\'\\' %>\">\\n            </div>\\n        </div>\\n        <div class=\"col-sm-2\">\\n            <div class=\"input-group input-group-sm control-group\" style=\"width:100%;\">\\n                <input type=\"text\" class=\"form-control followupRecipient\" placeholder=\"Search Provider\"\\n                       name=\"followupRecipient\" value=\"<%= (typeof followupRecipient !== \\'undefined\\') ? followupRecipient : \\'\\' %>\">\\n                <input class=\"followupRecipientName\" name=\"followupRecipientName\" type=\"hidden\"\\n                       value=\"<%= (typeof followupRecipientName !== \\'undefined\\') ? followupRecipientName : \\'\\' %>\">\\n            </div>\\n        </div>\\n        <div class=\"col-sm-1\">\\n            <% if (typeof edit !== \\'undefined\\') { %>\\n            <button type=\"button\" class=\"btn btn-default btn-block deleteFollowup\">\\n                <span class=\"glyphicon glyphicon-remove\"></span>\\n            </button>\\n            <% } %>\\n        </div>\\n    </div>\\n\\n    <div class=\"row \">\\n        <div class=\"col-sm-1\">\\n            <span class=\"headings\">Message</span>\\n        </div>\\n        <div class=\"col-sm-5\">\\n            <input type=\"text\" class=\"form-control reminderText\" name=\"reminderText\" value=\"<%= (typeof msg_body !== \\'undefined\\') ? msg_body : \\'\\' %>\">\\n        </div>\\n        <div class=\"col-sm-2\">\\n            &nbsp;\\n            <!--<div class=\"input-group input-group-sm\" style=\"max-width:360px;\">\\n                <select class=\"form-control reminderFrequency\" name=\"reminderFrequency\">\\n                    <option value=\"Never\">Never</option>\\n                </select>\\n            </div> -->\\n        </div>\\n        <div class=\"col-sm-3\">\\n            &nbsp;\\n        </div><!--\\n        <div class=\"col-sm-1\">\\n            <% if (typeof sendMode !== \\'undefined\\') { %>\\n            <button type=\"button\" class=\"btn btn-primary sendCurrentFollowup\">Send</button>\\n            <% } %>\\n        </div> -->\\n    </div>';});\n\n","/***************************************************************************\n * Copyright (c) 2014 - Maven Medical\n * AUTHOR: 'Carlos Brenneisen'\n * DESCRIPTION: This Javascript file handles an individual followup\n *              so we can handle events easier.\n * LAST MODIFIED FOR JIRA ISSUE:\n **************************************************************************/\ndefine('singleRow/reminderRow',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    //Template\n    'text!templates/reminderRow.html',\n\n    'globalmodels/contextModel',\n\n], function ($, _, Backbone, reminderRowTemplate, contextModel) {\n    var ReminderRow = Backbone.View.extend({\n        template: _.template(reminderRowTemplate),\n        initialize: function() {\n            this.render();\n        },\n        render: function () {\n            $(\".followup-header-columns\").show();\n            $(this.el).html(this.template($.extend({viewid: this.cid}, this.model.toJSON())));\n\n            that = this;\n            $(document).ready(function() {\n                $(\".reminderTime\", that.$el).datepicker();\n                $('#ui-datepicker-div').css('z-index', '10000 !important');\n\n                $('.followupRecipient', that.$el).autocomplete({\n                    source: function (request, response) {\n                        $.ajax({\n                            url: \"/users\",\n                            term: request.term,\n                            dataType: \"json\",\n                            data: $.param(contextModel.toParams()) + \"&target_user=\" + request.term + \"&target_role=provider\",\n                            success: function (data) {\n                                response(data);\n                            }\n                        });\n                    },\n                    minLength: 3,\n                    select: function (event, ui) {\n                        event.preventDefault();\n                        $(event.target).parent().removeClass(\"has-error\");\n                        $(\".sendCurrentFollowup\", this.$el).removeAttr('disabled');\n                        if(ui.item){\n                            //fill in the autocomplete box with the display name and corresponding hidden input with the actual username\n                            $(event.target).val(ui.item.label);\n                            $(\".followupRecipientName\", that.$el).val(ui.item.value);\n                        }\n                        $(this).trigger('change');\n                    },\n                    change: function(event, ui) {\n                        $(event.target).parent().removeClass(\"has-error\");\n                        $(\".sendCurrentFollowup\", this.$el).removeAttr('disabled');\n                        if (!ui.item) {\n                            //if the user does not select a recipient from the autocomplete\n                            $(\".followupRecipientName\", that.$el).val(\"\");\n\n                            if ($(event.target).val() !== \"\") {\n                                //cleared recipient\n                                $(event.target).parent().addClass(\"has-error\");\n                                $(\".sendCurrentFollowup\", this.$el).prop(\"disabled\",true)\n                            }\n                        }\n                    },\n                    autoFocus: true, //force the first value to be selected if user tabs away without selecting a recipient\n                    focus: function(event, ui){\n                        //prevent the auto focus from changing the value of the text box\n                        event.preventDefault();\n                    },\n                });\n            });\n\n            return this;\n        },\n        events: {\n\t        'click .deleteFollowup': 'removeFollowup',\n            'click .sendCurrentFollowup': 'sendFollowup'\n        },\n        removeFollowup: function(that) {\n            $(this.el).remove();\n            console.log(\"removing followup\");\n        },\n        getCurrentParams: function() {\n            var subject = $(\".reminderSubject\", this.el).val();\n            var message = $(\".reminderText\", this.el).val();\n            var date = $(\".reminderTime\", this.el).val();\n            var followupRecipient = $(\".followupRecipient\", this.$el).val();\n            var followupRecipientName = $(\".followupRecipientName\", this.$el).val();\n\n            if (subject == \"\" && message == \"\" && date == \"\" && followupRecipient == \"\" && followupRecipientName == \"\")\n            {\n                return {};\n            }\n\n            return {msg_subject: subject, msg_body: message, due: date,\n                    followupRecipient: followupRecipient, followupRecipientName: followupRecipientName};\n        },\n        sendFollowup: function() {\n            var subject = $(\".reminderSubject\", this.$el).val();\n            var message = $(\".reminderText\", this.$el).val();\n            var date = $(\".reminderTime\", this.$el).val();\n            if (date != \"\") {\n                date += \"T00:00:00.000Z\";\n            }\n\n            var followupRecipientName = $(\".followupRecipientName\", this.$el).val();\n\n            if (subject == \"\"){\n                //default subject\n                subject = \"Followup from \" + new Date().toISOString().substr(0,10);\n            }\n\n            if (followupRecipientName == ''){\n                //if no recipient was designated, use the default\n                followupRecipientName = $(\"#defaultFollowupRecipientName\").val();\n            }\n\n            var extraArg = \"&userid=\"+contextModel.get(\"userid\");\n            if (followupRecipientName!= \"\")\n            {\n                //specify recipient (otherwise send to self)\n                extraArg += \"&target_user=\" + followupRecipientName;\n            }\n            $.ajax({\n                type: 'POST',\n                dataType: 'json',\n                url: \"/add_task?\" + $.param(contextModel.toParams()) + extraArg,\n                data: JSON.stringify({\n                    \"msg_subject\": subject,\n                     \"msg_body\": message,\n                     \"delivery\": \"ehrinbox\",\n                     \"due\": date,\n                }),\n                error: function (){\n                    alert(\"There was a problem sending this followup: \" + subject);\n                },\n                success: function (){\n                    /*$(\"#send-followups-message\").show();\n                    $(\"#send-followups-message\").html('Followup Sent!')\n                    $(\"#send-followups-message\").fadeOut(1500);*/\n                }\n            });\n        }\n    });\n\n    return ReminderRow;\n});\n","/**\n * Created by Asmaa Aljuhani on 9/17/14.\n */\ndefine('pathway/modalViews/editNode',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'pathway/models/treeContext',\n    'pathway/models/treeModel',\n    'text!templates/pathway/NewNodeModal.html',\n    'text!templates/pathway/NewProtocolModal.html',\n    'singleRow/reminderRow',\n\n], function ($, _, Backbone, contextModel, treeContext, curTree, nodeTemplate, protocolTemplate, ReminderRow) {\n    var followups;\n\n    var editNode = Backbone.View.extend({\n\n        el: $(\"#modal-target\"),\n        initialize: function () {\n            that = this;\n            if (treeContext.get('selectedNode').attributes.isProtocol) {\n                this.template = _.template(protocolTemplate),\n                    this.$el.html(this.template(treeContext.get('selectedNode').attributes));\n                followups = new Array();\n\n            if (typeof treeContext.get('selectedNode').attributes.followups != 'undefined') {\n                $(treeContext.get('selectedNode').attributes.followups).each(function () {\n                    //show all default followups\n                    $('#followups', that.$el).append(\"<div class='followup'></div>\");\n                    el = $('.followup', $('#followups', that.$el)).last();\n                    var followup = new ReminderRow({model: new Backbone.Model(this), el: el});\n\n                    followups.push(followup);\n                    followup.$el.bind('remove', {followup: followup}, that.removeFollowup);\n                })\n            }\n                if ($('#addNodeButton').length) {\n                $('#addNodeButton')[0].onclick = function () {\n                    var protocolText = CKEDITOR.instances.ProtocolText.getData();\n                    treeContext.get('selectedNode').set('protocol', protocolText);\n                    treeContext.get('selectedNode').set('noteToCopy', $('#NoteToCopyText', this.$el).val());\n\n                    var defaultRecipient = $(\"#defaultRecipient\").val();\n                    var defaultRecipientName = $(\"#defaultRecipientName\").val();\n                    var defaultQuickNote = $(\"#defaultQuickNote\").val();\n                    var followupRecipient = $(\"#defaultFollowupRecipient\").val();\n                    var followupRecipientName = $(\"#defaultFollowupRecipientName\").val();\n                    var followupInfo = [];\n\n                    $(followups).each(function() {\n                        //store all followups\n                        var curFollowup = this.getCurrentParams();\n                        if (!_.isEmpty(curFollowup)){\n                            followupInfo.push(curFollowup);\n                        }\n                    });\n\n                    treeContext.get('selectedNode').set('defaultRecipient', defaultRecipient);\n                    treeContext.get('selectedNode').set('defaultRecipientName', defaultRecipientName);\n                    treeContext.get('selectedNode').set('defaultQuickNote', defaultQuickNote);\n                    treeContext.get('selectedNode').set('followups', followupInfo);\n                    treeContext.get('selectedNode').set('defaultFollowupRecipient', followupRecipient);\n                    treeContext.get('selectedNode').set('defaultFollowupRecipientName', followupRecipientName);\n\n                    $('#detail-modal').modal('hide')\n                    curTree.trigger('propagate')\n                }}\n\n                $(\"#detail-modal\").modal({'show': 'true'});\n                require(['ckeditor'], function() {\n                    CKEDITOR.replace('ProtocolText');\n                    CKEDITOR.instances.ProtocolText.setData(treeContext.get('selectedNode').get('protocol'));\n                })\n                $('#NoteToCopyText', this.$el).val(treeContext.get('selectedNode').get('noteToCopy'))\n\n                $(\".show-advanced-settings\", this.$el).off('click');\n            $(\".show-advanced-settings\", this.$el).on(\"click\", function(event){\n                if($(\".advanced-settings\", that.$el).is(\":visible\")){\n                    $(event.target).switchClass(\"glyphicon-chevron-down\",\"glyphicon-chevron-right\", 0);\n                    $(\".advanced-settings\", that.$el).slideUp(200);\n                }\n                else {\n                    $(event.target).switchClass(\"glyphicon-chevron-right\", \"glyphicon-chevron-down\", 0);\n                    $(\".advanced-settings\").slideDown(200);\n                }\n            });\n\n            $(\"#add-new-followup\", this.$el).on(\"click\", function() {\n                $('#followups').append(\"<div class='followup'></div>\"); //append(followup.render().el);\n                el = $('.followup', $('#followups')).last();\n                var followup = new ReminderRow({model:new Backbone.Model({edit:true}), el:el});\n                //followup.render();\n                //followup.events();\n                followups.push(followup);\n                followup.$el.bind('remove', {followup:followup}, that.removeFollowup);\n            });\n\n            $('#defaultRecipient, #defaultFollowupRecipient', this.$el).autocomplete({\n                source: function (request, response) {\n                    $.ajax({\n                        url: \"/users\",\n                        term: request.term,\n                        dataType: \"json\",\n                        data: $.param(contextModel.toParams()) + \"&target_user=\" + request.term + \"&target_role=provider\",\n                        success: function (data) {\n                            response(data);\n                        }\n                    });\n                },\n                minLength: 3,\n                select: function (event, ui) {\n                    event.preventDefault();\n                    $(event.target).parent().removeClass(\"has-error\");\n                    $(\"#addNodeButton\", this.$el).removeAttr('disabled');\n                    if(ui.item){\n                        //fill in the autocomplete box with the display name and corresponding hidden input with the actual username\n                        $(event.target).val(ui.item.label);\n                        var nameInput = \"#\" + event.target.id + \"Name\";\n                        $(nameInput).val(ui.item.value);\n                    }\n                    $(this).trigger('change');\n                },\n                change: function(event, ui) {\n                    $(event.target).parent().removeClass(\"has-error\");\n                    $(\"#addNodeButton\", this.$el).removeAttr('disabled');\n                    if (!ui.item) {\n                        //if the user does not select a recipient from the autocomplete\n                        var nameInput = \"#\" + event.target.id + \"Name\";\n                        $(nameInput).val(\"\");\n\n                        if ($(event.target).val() !== \"\") {\n                            //cleared recipient\n                            $(event.target).parent().addClass(\"has-error\");\n                            $(\"#addNodeButton\", this.$el).prop(\"disabled\",true)\n                        }\n                    }\n                },\n                autoFocus: true, //force the first value to be selected if user tabs away without selecting a recipient\n                focus: function(event, ui){\n                    //prevent the auto focus from changing the value of the text box\n                    event.preventDefault();\n                },\n            });\n            }else{\n                this.template = _.template(nodeTemplate),\n                    this.$el.html(this.template(treeContext.get('selectedNode').attributes));\n                $('#addNodeButton')[0].onclick = function () {\n                    treeContext.get('selectedNode').set('name', $('#newNodeText', this.$el).val());\n                    treeContext.get('selectedNode').set('tooltip', $('#newNodeTooltip', this.$el).val())\n                    var data = CKEDITOR.instances.newNodeSideText.getData()\n                    treeContext.get('selectedNode').set('sidePanelText', data)\n\n                    $('#detail-modal').modal('hide')\n                      curTree.trigger('propagate')\n                }\n                $(\"#detail-modal\").modal({'show': 'true'});\n                require(['ckeditor'], function() {\n                    CKEDITOR.replace('newNodeSideText');\n                })\n            }\n        },\n        removeFollowup: function(event) {\n            //remove reference to followup\n            followups = _.without(followups, event.data.followup);\n        }\n\n    });\n    return editNode\n});\n\n","\ndefine('text!templates/pathway/sendFollowups.html',[],function () { return '<div class=\"widget-column col-sm-12\">\\n    <div id=\"detail-modal\" class=\"modal fade\" role=\"dialog\" aria-hidden=\"true\" data-backdrop=\"static\">\\n        <div class=\"modal-dialog modal-dialog-lg\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-body\" style=\\'margin-bottom: 20;\\'>\\n                        <div class=\"row followup-header\">\\n                            <div class=\"col-sm-6\">\\n                                    <span class=\"headings\">Send Followups</span>\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <div class=\"input-group input-group-sm\" style=\"max-width:360px;\">\\n                                    Default Recipient:<input type=\"text\" class=\"form-control\" placeholder=\"Search Provider\" disabled\\n                                                     name=\"defaultFollowupRecipient\" id=\"defaultFollowupRecipient\"\\n                                                     value=\"<%= (typeof defaultFollowupRecipient !== \\'undefined\\') ? defaultFollowupRecipient : \\'\\' %>\">\\n                                                <input id=\"defaultFollowupRecipientName\" name=\"defaultFollowupRecipientName\" type=\"hidden\"\\n                                                       value=\"<%= (typeof defaultFollowupRecipientName !== \\'undefined\\') ? defaultFollowupRecipientName : \\'\\' %>\">\\n                                    </div>\\n                            </div>\\n                        </div>\\n                        <div class=\"row followup-header-columns\">\\n                            <div class=\"col-sm-6\">\\n                                    <span class=\"headings\">What</span>\\n                            </div>\\n                            <div class=\"col-sm-2\">\\n                                    <span class=\"headings\">When</span>\\n                            </div>\\n                            <div class=\"col-sm-1\">\\n                                    <span class=\"headings\">Who</span>\\n                            </div>\\n                            <div class=\"col-sm-1\">\\n                                &nbsp;\\n                                <!-- <span class=\"headings\">Repeat</span> -->\\n                            </div>\\n                        </div>\\n                        <div id=\"followups\">\\n\\n                        </div>\\n                        <div class=\"row followup-footer\">\\n                            <div class=\"col-sm-12\">\\n                                <span id=\\'add-new-followup\\' class=\"glyphicon glyphicon-plus\"></span>New Reminder\\n                            </div>\\n                        </div>\\n                </div>\\n\\n                <div class=\"modal-footer\">\\n                    <div id=\"send-followups-message\"></div>\\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancel</button>\\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"sendFollowupsButton\">Send All</button>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n';});\n\n","define('pathway/modalViews/sendFollowups',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbones\n    'pathway/models/nodeModel',\n    'globalmodels/contextModel',\n    'text!templates/pathway/sendFollowups.html',\n    'singleRow/reminderRow',\n\n], function ($, _, Backbone, NodeModel, contextModel, sendFollowupsTemplate, ReminderRow) {\n\n    var followups;\n\n    var sendFollowups = Backbone.View.extend({\n        template: _.template(sendFollowupsTemplate),\n        el: $(\"#modal-target\"),\n        initialize: function(parent){\n            var that = this;\n            this.parent = parent;\n            this.$el.html(this.template(this.attributes));\n            $(\"#detail-modal\").modal({'show':'true'});\n\n            followups = new Array();\n            var initBlankFollowup = true;\n            if (typeof this.attributes.followups != 'undefined') {\n                $(this.attributes.followups).each(function () {\n                    initBlankFollowup = false;\n                    //show all default followups\n                    this.sendMode = true;\n                    $('#followups', that.$el).append(\"<div class='followup'></div>\");\n                    el = $('.followup', $('#followups', that.$el)).last();\n                    var followup = new ReminderRow({model: new Backbone.Model(this), el: el});\n\n                    followups.push(followup);\n                    followup.$el.bind('remove', {followup: followup}, that.removeFollowup);\n                })\n            }\n            if (initBlankFollowup) {\n                //if no stored followups, initialize with one blank one\n                $('#followups').append(\"<div class='followup'></div>\");\n                el = $('.followup', $('#followups')).last();\n                var followup = new ReminderRow({model:new Backbone.Model({edit:true}), el:el});\n                followups.push(followup);\n                followup.$el.bind('remove', {followup:followup}, that.removeFollowup);\n            }\n\n            $(\"#add-new-followup\", this.$el).on(\"click\", function() {\n                //create new followup object\n                $('#followups').append(\"<div class='followup'></div>\");\n                el = $('.followup', $('#followups')).last();\n                var followup = new ReminderRow({model:new Backbone.Model({edit:true, sendMode: true}), el:el});\n                followups.push(followup);\n                followup.$el.bind('remove', {followup:followup}, that.removeFollowup);\n            });\n\n            $(\"#sendFollowupsButton\", this.$el).on(\"click\", function(){\n                //send all followups\n                $(followups).each(function(){\n                    this.sendFollowup();\n                });\n                alert(\"Followups Sent\");\n               $('#detail-modal').modal('hide')\n            })\n        },\n        removeFollowup: function(event) {\n            //remove reference to followup\n            followups = _.without(followups, event.data.followup);\n            console.log(\"Removing from send followups\");\n        }\n    });\n    return sendFollowups\n});\n\n","define('pathway/Helpers',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n], function ($, _, Backbone) {\n\n    var Helpers = {\n\n        detailHeadings: {\n            'enc_pl_dx': \"Encounter or Problem List Diagnosis\",\n            'pl_dx': \"Problem List Diagnosis\",\n            'hist_dx': \"Historical Diagnosis\",\n            'all_dx': \"Historical Diagnosis\",\n            'lab': \"Lab Results\",\n            'enc_dx': \"Encounter Diagnosis\",\n            'hist_proc': \"Historic Procedure\",\n            'enc_proc':\"(unusued) Encounter Procedure\",\n            'ml_med' : \"Medication List\",\n            'vitals': \"Vital Signs\",\n            'vitals_bp': \"Disjunctive Blood Pressure Detail\"\n        },\n        detailDescriptions: {\n\n            'enc_pl_dx' : \"Specify a constraint based on a diagnosis that can be found either in the current encounter or on the patient’s problem list. This would represent a fairly comprehensive set of acute and chronic diagnoses that are likely to be currently active for the patient.\",\n            'pl_dx'     : \"Specify a constraint based on a diagnosis in the patient’s problem list. The patient problem list is a patient-level section of the medical record that catalogs the most important diagnoses for the patient\",\n            'hist_dx'   : \"Specify a constraint based on a diagnosis in the patient’s diagnostic history\",\n            'lab'       : \"Specify a constraint based on the patient's lab results\",\n            'enc_dx'    : \"Specify a constraint based on any diagnosis currently associated with the encounter such as chief complaints, differential diagnoses, or symptoms that have been discretely documented and transmitted to Maven. \",\n            'hist_proc' : \"Specify a constraint based on procedures that the patient has undergone in the past\",\n            'enc_proc'  : \"(unusued) Encounter Procedure\",\n            'ml_med'    : \"Specify a constraint based on medications that the patient is currently taking according to the medical record\",\n            'vitals'    : \"Specify a constraint based on the patient's vitals\",\n            'vitals_bp' : \"Specify a constraint based on the patient's blood pressure which allows for EITHER the systolic OR diastolic to be within a given range\"\n        },\n        notDetail: ['id', 'treeInfo', 'evidence','genders', 'minAge', 'maxAge', 'name', 'triggers', 'triggerType', 'sources', 'detID', 'conflicts']\n    };\n\n    return Helpers;\n\n\n});\n\n","\ndefine('text!templates/pathway/triggerEditor.html',[],function () { return '<div id=\"detail-modal\" class=\"modal fade\"  role=\"dialog\" aria-hidden=\"true\" data-backdrop=\"static\">\\n    <div class=\"modal-dialog\" style=\"width: 1000px\">\\n        <div class=\"modal-content\">\\n\\n            <div class=\"modal-header\">\\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span\\n                        aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\\n                <h4 class=\"modal-title\">Protocol Triggering Diagnoses</h4>\\n            </div>\\n\\n            <div class=\"modal-body\">\\n\\n                <div class=\\'detail-editor-heading\\'>Create/Edit Assessment &amp; Plan Diagnosis Constraint</div>\\n\\n\\n                <select id=\"existsField\" class=\"detail-input form-control attn-text\"\\n                        name=\"exists\">\\n                    <option value=\"true\" selected>Alert the clinician only if</option>\\n                    <option value=\"false\"> Do not alert the clinician if</option>\\n                </select>\\n\\n                <p class=\"attn-text\"> The patient\\'s Assessment &amp; Plan contains any of the following diagnoses </p>\\n\\n                <div class=\"multi-select-search\" type=\"snomed_diagnosis\" name=\"code\"></div>\\n            </div>\\n\\n\\n            <div class=\"modal-footer\">\\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancel</button>\\n                <button type=\"button\" class=\"btn btn-primary\" id=\"confirmDetailButton\">Confirm</button>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n';});\n\n","\ndefine('pathway/modalViews/detailEditor_archaic',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'pathway/Helpers',\n    'pathway/internalViews/detailSearchBox',\n    'pathway/internalViews/multiSelectSearch',\n\n    'text!templates/pathway/triggerEditor.html'\n], function ($, _, Backbone, Helpers, detailSearchBox, multiSelectSearch, editorTemplate) {\n\n    var DetailEditor = Backbone.View.extend({\n        //replace this load with one which will take a parameter template\n        template: _.template(editorTemplate),\n         el: '#detailed-trigger-modal',\n        initialize: function(param){\n            this.triggerNode = param.triggerNode\n            //replace this load with one which will take a parameter template\n            this.$el.html(this.template())\n            var multiSearchEl = $('.multi-select-search', this.$el)\n            var panel = this\n            $.each(multiSearchEl, function(a, cur){\n                var anon =  Backbone.Collection.extend( {url: '/search'})\n                var sel = new Backbone.Collection\n\n                panel.searchBox = new multiSelectSearch({avail: new anon(), type: cur.getAttribute(\"type\"), el: multiSearchEl, selected: sel})\n            })\n            $('.cancel-edit-button', this.$el).on('click', function(){\n                $('#detail-modal').modal('hide')\n            })\n            $('#confirmDetailButton', this.$el).on('click', function(){\n\n                _.each(panel.searchBox.selected_items.models, function(cur){\n\n                    if (!panel.triggerNode.get('triggers')){\n                        panel.triggerNode.set({triggers: new Backbone.Collection()}, {silent: true})\n\n                    }\n                    cur.set('exists', $('#existsField').val());\n\n                    //replace this, hardcoded for enc_dx, to create a new collection named after the currently loaded\n                    //template, in the case that such a collection doesnt already exist in triggers\n                    if (!panel.triggerNode.get('triggers').get('enc_dx')){\n                        panel.triggerNode.get('triggers').set('enc_dx', new Backbone.Collection())\n                    }\n                    //replace this, hard coded for enc_dx to add the new detail to the correct collection, based on\n                    //which template we loaded\n                    panel.triggerNode.get('triggers').get('enc_dx').add()\n\n\n                })\n                $('#detail-modal').modal('hide')\n\n\n            })\n        },\n        render: function(){\n\n             $(\"#detail-modal\").modal({'show':'true'});\n         }\n    })\n\n    return DetailEditor;\n\n});\n\n","define('pathway/modalViews/nodeEditor',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'pathway/models/nodeModel',\n    'pathway/models/treeModel',\n    'pathway/models/treeContext',\n    'globalmodels/contextModel',\n    'text!templates/pathway/NewNodeModal.html',\n\n], function ($, _, Backbone, NodeModel, curTree, treeContext, contextModel, nodeTemplate) {\n\n    var nodeModal = Backbone.View.extend({\n        template: _.template(nodeTemplate),\n        el: $(\"#modal-target\"),\n\n        initialize: function (parent, child) {\n            var that = this\n\n            this.$el.html(this.template())\n            $('#addNodeButton')[0].onclick = function () {\n                parent.unset('protocol', {silent: true})\n                var data = CKEDITOR.instances.newNodeSideText.getData()\n                var n = new NodeModel({tooltip: $('#newNodeTooltip', that.$el).val(), name: $('#newNodeText', this.$el).val(), sidePanelText: data}, curTree)\n                var location = parent.get('children').length\n                if (child){\n                    location = parent.get('children').indexOf(child)\n                    parent.get('children').remove(child, {silent: true})\n                    n.get('children').add(child, {silent: true})\n\n\t\t    n.showChildren()\n                    curTree.trigger('propagate')\n                }\n                if (that.parent.get('children').models[0]){\n                    if (!that.parent.get('children').models[0].get('children')){\n                       that.parent.get('children').reset()\n\n                    }\n                }\n\n                that.parent.get('children').add(n, {at: location})\n\n                treeContext.set('selectedNode', n, {silent: true})\n                curTree.trigger('propagate')\n                $('#detail-modal').modal('hide')\n            }\n            var that = this\n            this.parent = parent\n            $(\"#detail-modal\").modal({'show': 'true'});\n            require(['ckeditor'], function() {\n                CKEDITOR.replace('newNodeSideText');\n            })\n\n        }\n\n    });\n    return nodeModal\n});\n\n","\ndefine('text!templates/pathway/newPathway.html',[],function () { return '<div id=\"newpathwaymodal\" class=\"modal\">\\n    <div class=\"modal-dialog\">\\n        <div class=\"modal-content\">\\n            <div id=\"modal-wizard-container\">\\n                <div class=\"modal-header\">\\n                    <h4 class=\"modal-title\">Enter Pathway Name:</h4>\\n                </div>\\n\\n                <div class=\"modal-body\">\\n                    <form class=\"bootbox-form\"><input id=\"newPathName\"\\n                                                      class=\"bootbox-input bootbox-input-text form-control\" type=\"text\">\\n                    </form>\\n\\n                </div>\\n            </div>\\n\\n            <div class=\"modal-footer wizard-actions\">\\n                <button class=\"btn btn-primary btn-sm\" id=\"create-button\">Create New Pathway</button>\\n\\n                <button class=\"btn btn-grey btn-sm pull-left\" data-dismiss=\"modal\">\\n                    <i class=\"ace-icon fa fa-times\"></i>\\n                    Cancel\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n</div><!-- PAGE CONTENT ENDS -->\\n\\n';});\n\n","/**\n * Created by Asmaa Aljuhani on 8/7/14.\n */\n\n\ndefine('pathway/modalViews/newPathway',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    'pathway/models/treeModel',\n\n    'text!templates/pathway/newPathway.html'\n], function ($, _, Backbone, curTree, newPathwayTemplate) {\n    var NewPathway = Backbone.View.extend({\n        template: _.template(newPathwayTemplate),\n        parentList: \"\",\n        parentFolder: null,\n        events: {\n            'click #create-button': 'handle_createPathway'\n        },\n        initialize: function (params) {\n\n            if (typeof params.parentList !== 'undefined'){\n                this.parentList = params.parentList.join(\"/\");\n            }\n            if (typeof params.parentFolder !== \"undefined\") {\n                this.parentFolder = params.parentFolder;\n            }\n\n            this.$el.html(this.template());\n            //$('#create-button', this.$el).on('click',this.handle_createPathway)\n            $(\"#newpathwaymodal\").modal({'show':'true'});\n        },\n        handle_createPathway: function(){\n            //hide modal\n            $(\"#newpathwaymodal\").modal('hide');\n            curTree.loadNewPathway({name: $('#newPathName').val(), folder: this.parentList, parentFolder: this.parentFolder});\n\n            this.undelegateEvents(); // Unbind all local event bindings\n\n            delete this.$el; // Delete the jQuery wrapped object variable\n            delete this.el; // Delete the variable reference to this node\n        }\n    });\n    return NewPathway;\n\n});\n","\ndefine('text!templates/pathway/richTextEditor.html',[],function () { return '    <div id=\"detail-modal\" class=\"modal fade\" role=\"dialog\" aria-hidden=\"true\">\\n        <div class=\"modal-dialog modal-lg\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\">\\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span\\n                            aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\\n                    <h4 class=\"modal-title\">New Node</h4>\\n                </div>\\n\\n                <div class=\"modal-body\">\\n\\n                    <div class=\"form-group\">\\n                        <textarea id=\"richText\" class=\"form-control\" placeholder=\"\"></textarea>\\n                    </div>\\n\\n\\n                <div class=\"modal-footer\">\\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancel</button>\\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"confirmButton\">Confirm</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n';});\n\n","define('pathway/modalViews/sidePanelEditor',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'pathway/models/nodeModel',\n    'pathway/models/treeContext',\n    'globalmodels/contextModel',\n     'text!templates/pathway/richTextEditor.html',\n\n\n], function ($, _, Backbone, NodeModel, treeContext, contextModel, nodeTemplate) {\n\n    var sidePanelModal = Backbone.View.extend({\n        template: _.template(nodeTemplate),\n        el: $(\"#modal-target\"),\n\n        initialize: function(){\n\n\n            this.$el.html(this.template())\n            $('#confirmButton')[0].onclick = function(){\n                                   var data =  CKEDITOR.instances.richText.getData()\n                                   treeContext.get('selectedNode').set('sidePanelText', data)\n                                   $('#detail-modal').modal('hide')\n                          }\n            $(\"#detail-modal\").modal({'show':'true'});\n            require(['ckeditor'], function() {\n                CKEDITOR.replace('richText');\n            })\n\n        }\n\n    });\n    return sidePanelModal\n});\n\n","\ndefine('text!templates/pathway/deleteModal.html',[],function () { return '<div class=\"widget-column col-sm-12\">\\n    <div id=\"detail-modal\" class=\"modal fade\" role=\"dialog\" aria-hidden=\"true\" data-backdrop=\"static\">\\n        <div class=\"modal-dialog modal-lg\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\">\\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span\\n                            aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\\n                    <h4 class=\"modal-title\">\\n                        Delete Dialog\\n                    </h4>\\n                </div>\\n\\n                <div class=\"modal-body\">\\n                    Would you like to delete only this node, or this node and all of its children\\n                    <br>\\n                    <button class =\\'btn btn-default\\' id = \"thisNode\">The Selected Node</button>\\n                    <button class = \\'btn btn-default\\' id = \"allChildren\">The Selected Node and All Children</button>\\n                    <button class =\\'btn btn-default\\' id = \"cancel\">Cancel</button>\\n\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n';});\n\n","define('pathway/modalViews/DeleteDialog',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'pathway/models/treeModel',\n    'pathway/models/treeContext',\n    'text!templates/pathway/deleteModal.html'\n\n\n], function ($, _, Backbone,   curTree, treeContext, template) {\n\n    var deleteDialog = Backbone.View.extend({\n         template: _.template(template),\n         el: '#modal-target',\n         initialize: function(){\n            this.$el.html(this.template())\n            $('#detail-modal').modal('show')\n            $('#thisNode').on('click', function(){\n               curTree.deleteNode(treeContext.get('selectedNode'), true)\n               $('#detail-modal').modal('hide')\n\n            })\n            $('#allChildren').on('click', function(){\n\n                curTree.deleteNode(treeContext.get('selectedNode'), false)\n                $('#detail-modal').modal('hide')\n\n            })\n             $('#cancel').on('click', function(){\n\n                $('#detail-modal').modal('hide')\n\n            })\n         }\n\n\n\n    });\n    return deleteDialog\n});\n\n","\ndefine('pathway/modalViews/protocolEditor',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'pathway/models/nodeModel',\n    'pathway/models/treeModel',\n    'globalmodels/contextModel',\n    'text!templates/pathway/NewProtocolModal.html',\n    'singleRow/reminderRow',\n\n], function ($, _, Backbone, NodeModel, curTree, contextModel, nodeTemplate, ReminderRow) {\n    var followups;\n    var protocolModal = Backbone.View.extend({\n        template: _.template(nodeTemplate),\n        el: $(\"#modal-target\"),\n        initialize: function(parent){\n            this.$el.html(this.template())\n            require(['ckeditor'], function() {\n                CKEDITOR.replace('ProtocolText');\n            })\n            followups = new Array();\n\n            var that = this\n            this.parent = parent\n                $(\"#detail-modal\").modal({'show':'true'});\n                $(\"#addNodeButton\", this.$el).on(\"click\", function(){\n                    var protocolText = CKEDITOR.instances.ProtocolText.getData();\n\n                    var noteToCopyText = $('#NoteToCopyText').val();\n                    var defaultRecipient = $(\"#defaultRecipient\").val();\n                    var defaultRecipientName = $(\"#defaultRecipientName\").val();\n                    var defaultQuickNote = $(\"#defaultQuickNote\").val();\n                    var followupRecipient = $(\"#defaultFollowupRecipient\").val();\n                    var followupRecipientName = $(\"#defaultFollowupRecipientName\").val();\n                    var followupInfo = [];\n\n                    $(followups).each(function() {\n                        //store all followups\n                        curFollowup = this.getCurrentParams();\n                        if (!_.isEmpty(curFollowup)){\n                            followupInfo.push(curFollowup);\n                        }\n                    });\n                   \n                    var myId = curTree.getNextNodeID()\n                    that.parent.set('children', new Backbone.Collection([\n                                                                new Backbone.Model({isProtocol: true, protocol: protocolText, noteToCopy:noteToCopyText,\n                                                                    defaultRecipient: defaultRecipient,\n                                                                    defaultRecipientName: defaultRecipientName,\n                                                                    defaultQuickNote: defaultQuickNote,\n                                                                    followups: followupInfo,\n                                                                    defaultFollowupRecipient: followupRecipient,\n                                                                    defaultFollowupRecipientName: followupRecipientName,\n                                                                    nodeID : curTree.get('pathid')+':'+ myId})]))\n                    $('#detail-modal').modal('hide')\n                    curTree.trigger('propagate')\n\n            })\n\n            $(\".show-advanced-settings\", this.$el).off('click');\n            $(\".show-advanced-settings\", this.$el).on(\"click\", function(event){\n                if($(\".advanced-settings\", that.$el).is(\":visible\")){\n                    $(event.target).switchClass(\"glyphicon-chevron-down\",\"glyphicon-chevron-right\", 0);\n                    $(\".advanced-settings\", that.$el).slideUp(200);\n                }\n                else {\n                    $(event.target).switchClass(\"glyphicon-chevron-right\", \"glyphicon-chevron-down\", 0);\n                    $(\".advanced-settings\", that.$el).slideDown(200);\n                }\n            });\n\n            $(\"#add-new-followup\", this.$el).on(\"click\", function() {\n                $('#followups').append(\"<div class='followup'></div>\"); //append(followup.render().el);\n                el = $('.followup', $('#followups')).last();\n                var followup = new ReminderRow({model:new Backbone.Model({edit:true}), el:el});\n                //followup.render();\n                //followup.events();\n                followups.push(followup);\n                followup.$el.bind('remove', {followup:followup}, that.removeFollowup);\n            });\n\n            $('#defaultRecipient, #defaultFollowupRecipient', this.$el).autocomplete({\n                source: function (request, response) {\n                    $.ajax({\n                        url: \"/users\",\n                        term: request.term,\n                        dataType: \"json\",\n                        data: $.param(contextModel.toParams()) + \"&target_user=\" + request.term + \"&target_role=provider\",\n                        success: function (data) {\n                            response(data);\n                        }\n                    });\n                },\n                minLength: 3,\n                select: function (event, ui) {\n                    event.preventDefault();\n                    $(event.target).parent().removeClass(\"has-error\");\n                    $(\"#addNodeButton\", this.$el).removeAttr('disabled');\n                    if(ui.item){\n                        //fill in the autocomplete box with the display name and corresponding hidden input with the actual username\n                        $(event.target).val(ui.item.label);\n                        var nameInput = \"#\" + event.target.id + \"Name\";\n                        $(nameInput).val(ui.item.value);\n                    }\n                    $(this).trigger('change');\n                },\n                change: function(event, ui) {\n                    $(event.target).parent().removeClass(\"has-error\");\n                    $(\"#addNodeButton\", this.$el).removeAttr('disabled');\n                    if (!ui.item) {\n                        //if the user does not select a recipient from the autocomplete\n                        var nameInput = \"#\" + event.target.id + \"Name\";\n                        $(nameInput).val(\"\");\n\n                        if ($(event.target).val() !== \"\") {\n                            //cleared recipient\n                            $(event.target).parent().addClass(\"has-error\");\n                            $(\"#addNodeButton\", this.$el).prop(\"disabled\",true)\n                        }\n                    }\n                },\n                autoFocus: true, //force the first value to be selected if user tabs away without selecting a recipient\n                focus: function(event, ui){\n                    //prevent the auto focus from changing the value of the text box\n                    event.preventDefault();\n                },\n            });\n        },\n        removeFollowup: function(event) {\n            //remove reference to followup\n            followups = _.without(followups, event.data.followup);\n        }\n\n    });\n    return protocolModal\n});\n\n","\ndefine('text!templates/pathway/detailChooserEntry.html',[],function () { return '<div class = \"widget-column col-sm-12\">\\n<option title=\"<%=desc%>\" value=\"<%=type%>\"><%=type%></option>\\n</div>\\n';});\n\n","\ndefine('pathway/internalViews/detailSelector',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n   'globalmodels/contextModel',\n    'pathway/Helpers',\n    'text!templates/pathway/detailChooserEntry.html'\n], function ($, _, Backbone, contextModel, Helpers, detailEntry) {\n\n    var DetailSelector = Backbone.View.extend({\n        initialize: function(param){\n            this.el = param.el;\n            var anon =  Backbone.Collection.extend( {url: '/details?'});\n            this.searchedDetails = new anon();\n            contextModel.on('change:auth', this.other, this);\n\n        },\n        other:function(){\n            this.search(\"\")\n        },\n        search: function(search_param){\n            var panel = this;\n            var t = contextModel.toParams();\n            t = $.extend(t , {'search_param': search_param});\n            this.searchedDetails.fetch({data:$.param(t), success:function(){\n                 panel.render();\n            }})\n\n        },\n        render: function(){\n            this.$el.html(\"\");\n            var entryTemplate = _.template(detailEntry);\n            for (var i in this.searchedDetails.models){\n                var cur = this.searchedDetails.models[i]\n                this.$el.append(entryTemplate({id:cur.get('id'), desc:Helpers.detailDescriptions[cur.get('type')], type:Helpers.detailHeadings[cur.get('type')]}));\n\n            }\n\n\n\n        }\n    })\n\n\n    return DetailSelector;\n\n});\n\n","\ndefine('text!templates/pathway/protocolNode.html',[],function () { return '\\n\\n\\n<div class = \"protocolNode click-tracked\" clickID = \"TN-<%=pathID%>-<%=protocolNode.nodeID%>\">\\n    <span>\\n        <strong>\\n            PROTOCOL\\n        </strong>\\n        <span style=\"max-width: 350px;\">\\n            <%= protocolText %>\\n        </span>\\n\\n    </span>\\n\\n\\n    <br>\\n     <% if (page == \\'pathEditor\\') { %>\\n    <div class=\"btn-group btn-group-xs\">\\n        <button id=\\'sendSetup-button\\' type=\"button\" class=\"btn btn-default btn-sm\" style=\"float: right\">\\n        <span class=\"glyphicon glyphicon-envelope\"></span>\\n        </button>\\n       <button id=\"removeProtocolButton\" type=\"button\" class=\"btn btn-default btn-sm removeProtocolButton\" style=\"float: right\">\\n           Remove\\n       </button>\\n    </div>\\n\\n    <%} else if (page !== \\'pathHistory\\') {%>\\n     <div class=\"btn-group btn-group-xs\">\\n         <button id=\\'send-button\\' type=\"button\" class=\"btn btn-default btn-sm click-tracked\" style=\"float: right\" clickid=\"TN-<%=pathID%>-<%=protocolNode.nodeID%>\" clickaction=\"send\">\\n        <span class=\"glyphicon glyphicon-envelope\"></span>\\n        </button>\\n         <button id=\\'followup-button\\' type=\"button\" class=\"btn btn-default btn-sm click-tracked\" style=\"float: right\" clickid=\"TN-<%=pathID%>-<%=protocolNode.nodeID%>\" clickaction=\"followup\">\\n        <span class=\"glyphicon glyphicon-time\"></span>\\n        </button>\\n\\t<% if (typeof(protocolNode.noteToCopy) != \\'undefined\\' && protocolNode.noteToCopy) { %>\\n\\t<button id=\\'copybutton\\' type=\"button\" class=\"btn btn-default btn-sm click-tracked\" style=\"float: right\" clickid=\"TN-<%=pathID%>-<%=protocolNode.nodeID%>\" clickaction=\"copy\">\\n        <img src=\"../images/copy-icon.png\" style=\"width: 20px; height: 20px;\" title=\"Copy\">\\n\\t<% } %>\\n\\t</button>\\n     </div>\\n    <% } %>\\n</div>\\n';});\n\n","define('pathway/internalViews/protocolNode',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'pathway/models/treeModel',\n    'pathway/models/treeContext',\n    'pathway/modalViews/sendProtocol',\n    'pathway/modalViews/sendFollowups',\n    'text!templates/pathway/protocolNode.html'\n\n], function ($, _, Backbone, currentContext, curTree, treeContext , SendProtocol, SendFollowups, nodeTemplate) {\n\n    var activityTrack = function (evt) {\n        //Don't track clicks in edit mode (where page would be \"pathwayEditor\")\n        if (currentContext.get('page') != 'pathway' || treeContext.suppressClick || !currentContext.get('patients')) {\n            return;\n        }\n        var target = $(evt.target).closest('.click-tracked')\n        if (target.length) {\n            var node_state = (target.attr('clickid'));\n            var action_type = (target.attr('clickaction'));\n            var details = target.attr('clickextra');\n            if (!action_type) {\n                if (target.is(':checkbox')) {\n                    if (target.is(':checked')) {\n                        action_type = 'checked'\n                    } else {\n                        action_type = 'unchecked'\n                    }\n                } else {\n                    action_type = 'click'\n                }\n            }\n            \n            var data = {\n                \"patient_id\": currentContext.get(\"patients\"),\n                \"protocol_id\": currentContext.get(\"pathid\"),\n                \"node_state\": node_state,\n                \"datetime\": (new Date().toISOString()).replace(\"T\", \" \"),\n                \"action\": action_type,\n                \"details\": details\n            }\n            $.ajax({\n                type: 'POST',\n                dataType: 'json',\n                url: \"/activity?\" + $.param(currentContext.toParams()),\n                data: JSON.stringify(data),\n                success: function () {\n                    console.log(\"click tracked\");\n                }\n            });\n        }\n    }\n    var protocolNode = Backbone.View.extend({\n\n\n        nodeType: \"protocol\",\n        template: _.template(nodeTemplate),\n        events: {\n            'click button#copybutton': 'copyProtocol',\n            'click button#sendSetup-button': 'sendSetup',\n            'click button#send-button': 'send',\n            'click button#followup-button': 'followup',\n            'click div.protocolNode': 'setSelectedNode'\n        },\n        initialize: function (params) {\n\n            this.model = params.model\n            this.hidden = params.hidden\n\n        },\n        makeExit: function(jsPlumb2){\n                var exit = jsPlumb2.addEndpoint(this.getMyElement(), {anchor: 'Bottom'})\n                return exit\n            },\n            makeEntrance: function(jsPlumb2){\n                var entrance = jsPlumb2.addEndpoint(this.getMyElement(), {anchor: 'Top'})\n                return entrance\n            },\n\n\n\n            setSelectedNode: function(evt){\n                if (treeContext.suppressClick) {\n                    return\n                }\n                activityTrack(evt);\n                this.getMyElement().off('click');\n                treeContext.set('selectedNode', this.model, {silent: true});\n                treeContext.trigger('propagate')\n            },\n\n\n        render: function () {\n            var that=this\n            if (currentContext.get('patients') && !this.hidden) {\n                $.ajax({\n                    type: 'GET',\n                    dataType: 'json',\n                    url: \"/node_activity\",\n                    data: decodeURIComponent($.param({\n                        'protocol': curTree.get('pathid'),\n                        'patient': currentContext.get(\"patients\"),\n                        'node_id': this.model.get('nodeID')\n                    })),\n                    success: function (data) {\n                        var elem = $('input[type=\"checkbox\"]', that.$el)\n                        _.map(data, function(value, key) {\n                            key = key.replace(/\\s/g, '').toLowerCase()\n                            var elem = $('input[clickextra=\"'+key+'\"]', that.$el)\n                            if (elem) {\n                                elem.prop('checked', value=='checked')\n                            }\n                        })\n                    }\n                });\n            }\n\n            var protocolText = this.model.get('protocol')\n            var re = /\\[\\[([\\s\\S]*?)\\|([\\s\\S]*?)\\]\\]/g\n                   \n            var counts = {}\n            protocolText = protocolText.replace(re, function(m, p1, p2) {\n                key=p1.replace(/\\s/g, '').toLowerCase()\n\t\tp2 = p2.split('<p>').join('').split('</p>').join('')\n                if (counts[key] !== undefined) {\n                    counts[key] += 1\n                } else {\n                    counts[key]=0\n                }\n                return '<input type=\"checkbox\" value=\"'+p2+'\" class=\"copy-text-button click-tracked\" clickextra=\"' + key + '|' + counts[key] + '\" clickid=\"TN-' + curTree.get('pathid') + '-' + that.model.get('nodeID')  + '\"/> '+p1;\n            })\n            \n            this.$el.html(this.template({pathID: curTree.get('pathid'), protocolNode: this.model.attributes, page: currentContext.get('page'),\n                                         protocolText: protocolText}));\n            $('.click-tracked input:checkbox', this.$el).click(function(evt) {activityTrack(evt)})\n            $('.copy-text-button', this.$el).click(function(evt) {evt.stopPropagation()})\n            if (this.model == treeContext.get('selectedNode')){\n                $('.protocolNode', this.$el).addClass(\"selected\")\n            }\n            return this\n        },\n        copyProtocol: function (evt) {\n            evt.stopPropagation()\n            activityTrack(evt)\n\n            $('#copiedText').remove();\n\n             //this.trackActivity(\"copytext\");\n            var copytext = this.model.get('noteToCopy')\n            $('input:checked', this.$el).each(function(index, elem) {\n                copytext = copytext + \"  \\n\\n\" + elem.value\n            })\n\n\n            $('<div>'+copytext+'</div>').attr('id', 'copiedText').appendTo('body');\n\n\n           //toast code\n            $('#toast').empty()\n            $('<span class=\"glyphicon glyphicon-ok\"></span><span>Note-ready text added to clipboard</span>').appendTo('#toast')\n            //$('#toast').innerHTML = 'Note-ready text added to clipboard'\n\n\n\n            $('#toast').css('top', $('#copybutton').offset().top + 30)\n            $('#toast').css('left', $('#copybutton').offset().left )\n\n            $('#toast').css('visibility', 'visible');\n\n\n            setTimeout(function () {\n\n               // $(\"#toast\").fadeOut(\"slow\", function () {\n                    $('#toast').css('visibility', 'hidden');\n               // });\n\n            }, 1500);\n\n        },\n        send: function (evt) {\n            evt.stopPropagation()\n            activityTrack(evt)\n            var newSendProtocol = new SendProtocol(this.model);\n        },\n        followup: function (evt) {\n            evt.stopPropagation()\n            activityTrack(evt)\n            var sendFollowups = new SendFollowups(this.model);\n        },\n        sendSetup: function (evt) {\n            evt.stopPropagation()\n\n        },\n        getMyElement: function(){\n                return $('.protocolNode', this.$el).first()\n\n        },\n\tchildrenHidden: function() {return false;},\n\thideChildren: function() {},\n\tshowChildren: function() {}\n\n    })\n    protocolNode.activityTrack = activityTrack\n    return protocolNode\n\n})\n\n;\n","\ndefine('text!templates/pathway/treeNode.html',[],function () { return '<div class=\"widget-column col-sm-12\" style=\"background: transparent;\">\\n    <!--<div style=\"width:40px; float:left;\"></div> <!-- spacing horizontal -->\\n    <li style=\"float:left; width: auto\">\\n        <div  title=\"<%=node.tooltip%>\" clickID = \"TN-<%=pathid%>-<%=node.nodeID%>\" <% if (childrenHidden){ %> style = \"background-color: lightyellow\" <%}%> class=\"treeNode click-tracked\">\\n            <span data-toggle=\"tooltip\" > <%=node.name%></span>\\n\\n            <br>\\n            <% if (page == \\'pathEditor\\'){ %>\\n\\n            <div style =\"clear:both\" class=\"btn-group btn-corner\" role=\"toolbar\">\\n                    <% if (node.hasLeft ) { %>\\n                        <button class = \"btn btn-app btn-light btn-sm\" id = \"moveLeftButton\">&lt;</button>\\n                    <%}%>\\n                    <button type=\"button\" class=\"btn btn-app btn-light btn-sm\" id=\"addChildButton\"><img src=\"../images/temp/newChild.jpg\" style=\"width: 25px; height: 25px\"></button>\\n                    <% if (node.children.length == 0){ %>\\n                    <button type=\"button\" class=\"btn btn-app btn-light btn-sm addProtocolButton\" id=\"addProtocolButton\"><img src=\"../images/temp/newProtocole.jpg\" style=\"width: 25px; height: 25px\"></button>\\n                    <%}%>\\n                <% if (\"nodeType == standard\" && (node.children.length > 0||node.protocol ))  { %>\\n                    <button type=\"button\" class=\"btn btn-app btn-light btn-sm collapseButton\">\\n                            <% if (childrenHidden){ %>\\n                            <img src=\"../images/temp/expand.jpg\" style=\"width: 25px; height: 25px\">\\n                            <%}else{ %>\\n                            <img src=\"../images/temp/collapse.jpg\" style=\"width: 25px; height: 25px\">\\n                        <%}%>\\n                    </button>\\n                <% } %>\\n\\n                <%if (node.hasRight) { %>\\n                <button class = \"btn btn-app btn-light btn-sm\" id = \"moveRightButton\">&gt;</button>\\n                 <%}%>\\n\\n\\n            </div>\\n             <%}%>\\n             <div style = \"clear: both\"></div>\\n        </div>\\n        <!--<div style=\"clear: both; height:100px; width:10px;\"></div> <!-- spacing, Vertical-->\\n        <ul class=\\'children2\\'>\\n                    <div style=\\'padding-top: 25px; \\' class=\\'protocol\\'></div>\\n\\n\\n        </ul>\\n\\n    </li>\\n</div>\\n';});\n\n","define('pathway/internalViews/treeNode',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n\n    'pathway/internalViews/protocolNode',\n    'pathway/modalViews/nodeEditor',\n    'pathway/modalViews/protocolEditor',\n    'pathway/models/nodeModel',\n    'pathway/models/treeModel',\n    'pathway/models/treeContext',\n    'text!templates/pathway/treeNode.html'\n\n], function ($, _, Backbone, currentContext, ProtocolNode, NodeEditor, ProtocolEditor, nodeModel, curTree, treeContext, nodeTemplate) {\n\n    var treeNode = Backbone.View.extend({\n        nodeType: \"standard\",\n\n        template: _.template(nodeTemplate),\n        initialize: function (params) {\n            this.childEntrances = []\n            this.model = params.model\n            if (params.el)\n                this.el = params.el\n            this.$el.css({'float': 'left'})\n            var that = this;\n\n            this.render()\n\n        },\n        makeExit: function (jsPlumb2) {\n            var exit = jsPlumb2.addEndpoint(this.getMyElement(), {anchor: 'Bottom'})\n            return exit\n        },\n        makeEntrance: function (jsPlumb2) {\n            var entrance = jsPlumb2.addEndpoint(this.getMyElement(), {anchor: 'Top'})\n            return entrance\n        },\n\n\n        setSelectedNode: function () {\n            if (treeContext.suppressClick) {\n                return\n            }\n            this.getMyElement().off('click');\n            treeContext.set('selectedNode', this.model, {silent: true});\n            treeContext.trigger('propagate')\n        },\n\n        getMyElement: function () {\n            return $('.treeNode', this.$el).first()\n\n        },\n        render: function () {\n            this.$el.html(this.template({\n                node: this.model.attributes,\n                childrenHidden: this.model.childrenHidden(),\n                page: currentContext.get('page'),\n                pathid: curTree.get('pathid')\n            }));\n            var that = this;\n\n            //Set on clicks\n            $('.collapseButton', this.$el).first().on('click', function () {\n                if (treeContext.suppressClick) {\n                    return\n                }\n                if (currentContext.get('page') == 'pathEditor') {\n                    if (!that.model.childrenHidden()) {\n                        curTree.collapse(that.model)\n                    } else {\n                        that.model.showChildren()\n                    }\n                    curTree.getShareCode()\n                }\n            })\n            $(\"#addChildButton\", this.$el).first().on('click', function () {\n                var newEditor = new NodeEditor(that.model)\n            })\n            $(\"#moveLeftButton\", this.$el).on('click', function () {\n                curTree.changeNodePosition(that.model, -1)\n            })\n            $(\"#moveRightButton\", this.$el).first().on('click', function () {\n                treeContext.unset('selectedNodeOffset');\n                curTree.changeNodePosition(that.model, 1)\n            })\n            $(\".addProtocolButton\", this.$el).first().on('click', function () {\n                var newEditor = new ProtocolEditor(that.model)\n            })\n            this.getMyElement().on('click', function (evt) {\n                if (treeContext.suppressClick) {\n                    return\n                }\n                ProtocolNode.activityTrack(evt);\n                var selected = $(evt.currentTarget)\n                var offset = selected.offset();\n                offset.clickid = selected.attr('clickid');\n                treeContext.set({\n                    'selectedNodeWidth': selected.outerWidth(), 'selectedNodeOffset': offset,\n                    'selectedNode': that.model\n                }, {silent: true})\n                if (currentContext.get('page') != 'pathEditor') {\n                    if (!that.model.childrenHidden()) {\n                        curTree.collapse(that.model)\n                    } else {\n                        curTree.hideSiblings(that.model)\n                        that.model.showChildren()\n                    }\n                    curTree.getShareCode()\n                } else {\n                    treeContext.trigger('propagate')\n                }\n\n            })\n\n            _.each(this.model.get('children').models, function (cur) {\n                if (!cur.get('isProtocol')) {\n                    $('.children2', this.$el).first().append(\"<div class='childSpot'></div>\")\n                    var targ = $('.childSpot', $('.children2', this.$el).first()).last()\n                    cur.set('hasLeft', (this.model.get('children').indexOf(cur) != 0))\n                    cur.set('hasRight', (this.model.get('children').indexOf(cur) < this.model.get('children').length - 1))\n\n                    var thisChild = new treeNode({model: cur, el: targ})\n\n                    var n = (!cur.childrenHidden() || cur == treeContext.get('selectedNode')  )\n                    curTree.elPairs.push({source: this, target: thisChild, bold: n})\n                } else {\n                    that.addProtocol(cur)\n                }\n\n            }, this)\n\n\n            if (this.model.childrenHidden() && this.nodeType == \"standard\") {\n                $('.children2', this.$el).first().css({'display': 'none'});\n            } else {\n                $('.children2', this.$el).first().css({'display': 'block'});\n\n            }\n\n            if (this.model == treeContext.get('selectedNode')) {\n                that.getMyElement().addClass('selected')\n            }\n\n\n            return this\n\n        },\n        addProtocol: function (protoModel) {\n            var that = this\n            var protoNode = new ProtocolNode({model: protoModel, hidden: this.model.childrenHidden()})\n            $('.protocol', that.$el).first().append(protoNode.render().$el)\n            curTree.elPairs.push({source: that, target: protoNode, bold: true})\n            $('.removeProtocolButton', that.$el).on(\"click\", function () {\n                curTree.deleteNode(protoModel, false)\n            })\n\n        }\n    })\n    return treeNode;\n})\n\n;\n","\ndefine('text!templates/pathway/triggerNode.html',[],function () { return '<ul>\\n    <li>\\n        <div title=\"<%=node.tooltip%>\" clickID = \"TN-<%=node.id%>-<%=node.nodeID%>\" style=\"text-align: center; border-style:solid;  width:auto;\" class=\"treeNode expanded-path click-tracked\">\\n            <span data-toggle=\"tooltip\" ><%=node.name%></span>\\n            <br>\\n            <% if (page == \\'pathEditor\\'){ %>\\n            <div style =\"clear:both\" class=\"btn-group btn-corner\" role=\"toolbar\">\\n                <button type=\"button\" class=\"btn btn-app btn-light btn-sm\" id=\"addChildButton\"><img src=\"../images/temp/newChild.jpg\" style=\"width: 25px; height: 25px\"></button>\\n                </div>\\n            <%}%>\\n\\n        </div>\\n\\n        <!--<div style=\"clear: both; height:100px; width:10px;\"></div>-->\\n        <ul style=\"clear: both; width: 100%; text-align: center\" class=\\'children2\\'></ul>\\n\\n        <div style=\\'padding-top: 25px; \\' class=\\'protocol\\'></div>\\n        </div>\\n    </li>\\n</ul>\\n';});\n\n","define('pathway/internalViews/triggerNode',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    'pathway/internalViews/treeNode',\n    'text!templates/pathway/triggerNode.html'\n\n\n\n    ], function($, _, Backbone, TreeNode, myTemplate){\n\n        var TriggerNode = TreeNode.extend({\n             nodeType: \"topLevel\",\n             template:  _.template(myTemplate)\n\n        })\n\n\n        return TriggerNode;\n\n    })\n\n;\n","\ndefine('text!templates/pathway/treeNodeActionSet.html',[],function () { return '<li class=\"hover\" id=\"editNode-button\">\\n    <a href=\"javascript:void(0)\">\\n        <i class=\"menu-icon\">\\n            <img src=\"../images/temp/newPath.jpg\"\\n                 style=\"width: 30px; height: 25px\"></i>\\n\\t\\t\\t <span class=\"menu-text\">\\n\\t\\t\\t  Edit Selected Node\\n\\t\\t\\t </span>\\n\\n    </a>\\n    <b class=\"arrow\"></b>\\n</li>\\n\\n<li class=\"hover\" id=\"deleteNodeButton\">\\n    <a href=\"javascript:void(0)\">\\n        <i class=\"menu-icon\">\\n            <img src=\"../images/temp/newPath.jpg\"\\n                 style=\"width: 30px; height: 25px\"></i>\\n\\t\\t\\t <span class=\"menu-text\">\\n\\t\\t\\t  Delete Selected Node\\n\\t\\t\\t </span>\\n\\n    </a>\\n    <b class=\"arrow\"></b>\\n</li>\\n\\n\\n<% if (page == \\'pathEditor\\') { %>\\n\\n<li class=\"hover\" id=\"addChildButton\">\\n    <a href=\"javascript:void(0)\">\\n        <i class=\"menu-icon\">\\n            <img src=\"../images/temp/newChild.jpg\"\\n                 style=\"width: 30px; height: 25px\"></i>\\n\\t\\t\\t <span class=\"menu-text\">\\n\\t\\t\\t  Add Child\\n\\t\\t\\t </span>\\n\\n    </a>\\n    <b class=\"arrow\"></b>\\n</li>\\n\\n\\n<% if (treeNode.children && treeNode.children.length == 0){%>\\n<li class=\"hover\" id=\"addProtocolButton\">\\n    <a href=\"javascript:void(0)\">\\n        <i class=\"menu-icon\">\\n            <img src=\"../images/temp/newProtocole.jpg\"\\n                 style=\"width: 30px; height: 25px\"></i>\\n\\t\\t\\t <span class=\"menu-text\">\\n\\t\\t\\t  Add Protocol\\n\\t\\t\\t </span>\\n\\n    </a>\\n    <b class=\"arrow\"></b>\\n</li>\\n<%}%>\\n<%}%>\\n\\n<% if (page == \\'pathEditor\\' && ((treeNode.children && treeNode.children.length > 0)||treeNode.protocol) ) {%>\\n\\n<li class=\"hover\" id=\"collapseButton\">\\n    <a href=\"javascript:void(0)\">\\n        <% if (childrenHidden){%>\\n        <i class=\"menu-icon\">\\n            <img src=\"../images/temp/expand.jpg\"\\n                 style=\"width: 30px; height: 25px\"></i>\\n\\t\\t\\t <span class=\"menu-text\">\\n\\t\\t\\t  Expand Node\\n\\t\\t\\t </span>\\n        <%}else{%>\\n        <i class=\"menu-icon\">\\n            <img src=\"../images/temp/collapse.jpg\"\\n                 style=\"width: 30px; height: 25px\"></i>\\n\\t\\t\\t <span class=\"menu-text\">\\n\\t\\t\\t  Collapse Node\\n\\t\\t\\t </span>\\n        <%}%>\\n    </a>\\n    <b class=\"arrow\"></b>\\n</li>\\n\\n\\n<% } %>\\n\\n<%= (typeof sidePanelText !== \\'undefined\\') ? sidePanelText : \\'\\' %>\\n\\n\\n\\n';});\n\n","\ndefine('pathway/internalViews/treeNodeActionSet',[\n    //This file is not used with acetheme\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'pathway/models/treeModel',\n    'pathway/models/treeContext',\n    'pathway/modalViews/editNode',\n    'pathway/modalViews/newPathway',\n    'pathway/modalViews/nodeEditor',\n    'pathway/modalViews/protocolEditor',\n    'pathway/modalViews/DeleteDialog',\n\n    'text!templates/pathway/treeNodeActionSet.html'\n\n], function ($, _, Backbone, contextModel, curTree, treeContext, editNode, NewPathway, NodeEditor, ProtocolEditor,  deleteDialog, treeNodeActionSetTemplate) {\n\n\n    var treeNodeActionSet = Backbone.View.extend({\n        template: _.template(treeNodeActionSetTemplate),\n        render: function(){\n\n            var nodeType;\n            if(treeContext.get('selectedNode').attributes != null){\n\t\tvar selected = treeContext.get('selectedNode')\n                this.$el.html(this.template({treeNode: selected.attributes, childrenHidden: selected.childrenHidden && selected.childrenHidden(), page: contextModel.get('page')}))\n            }\n            $('#deleteNodeButton', this.$el)[0].onclick = this.deleteNode\n            $('#setNodeTitleButton', this.$el)[0].onclick = this.editNode\n\n\n            var addChildButton = $('#addChildButton', this.$el)\n\t    if (addChildButton.length) {addChildButton[0].onclick = this.addChild}\n            var protocolButton = $('#addProtocolButton', this.$el)[0]\n            if(protocolButton){\n                protocolButton.onclick = this.addProtocol\n            }\n            var collapseButton = $('#collapseButton', this.$el)[0]\n            if (collapseButton){\n                collapseButton.onclick = this.expandCollapse\n            }\n            return this;\n        },\n        addChild : function(){\n\n            var newEditor = new NodeEditor(treeContext.get('selectedNode'))\n        },\n        addProtocol: function(){\n            var newEditor = new ProtocolEditor(treeContext.get('selectedNode'))\n        },\n        expandCollapse: function(){\n                           if (!treeContext.get('selectedNode').childrenHidden()){\n                               curTree.collapse(treeContext.get('selectedNode'))\n                           } else{\n                               treeContext.get('selectedNode').showChildren()\n                           }\n            curTree.getShareCode()\n            treeContext.trigger('propagate')\n        },\n\n        editNode: function(){\n            new editNode();\n\n        },\n\n        deleteNode: function(){\n            var x = true\n            new deleteDialog()\n\n\n        }\n\n    })\n\n    return treeNodeActionSet\n\n});\n\n","\ndefine('text!templates/pathway/pathwayListEntry.html',[],function () { return '<div id=\"<%=canonical%>\" class=\"path-row dd-handle dd2-handle\">\\n        \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!--<i class=\"normal-icon ace-icon fa fa-signal orange bigger-130\"></i>-->\\n\\n        <img class=\\'normal-icon\\' src=\"../images/temp/newPath.jpg\" style=\"width: 20px; height: 20px\"/>\\n\\n        <i class=\"drag-icon ace-icon fa fa-arrows bigger-125\"></i>\\n    </div>\\n    <div class=\"dd2-content\">\\n        <a class=\\'select-button\\'><%=name%></a>\\n        <div class=\"pull-right action-buttons\">\\n            <a>\\n                <input class=\"ace ace-switch ace-switch-3 pathway-enable\" type=\"checkbox\"\\n                <%= (enabled == 1) ? \"checked\" : \"\" %>/>\\n                <span class=\"lbl\"></span>\\n            </a>\\n            <a class=\"red delete-button\" style=\"vertical-align: top;\">\\n                <i class=\"ace-icon fa fa-trash-o bigger-140\"></i>\\n            </a>\\n\\n        </div>\\n    </div>\\n        <ol class=\"pathway-history-section dd-list\">\\n\\n            </ol>';});\n\n","/**\n * Created by devel on 7/1/14.\n */\n\ndefine('globalmodels/scrollCollection',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'globalmodels/contextModel'\n], function ScrollCollection($, _, Backbone, contextModel) {\n    ScrollModel = Backbone.Model;\n\n    var ScrollCollection = Backbone.Collection.extend({\n    url: null,\n    limit: 10,\n    offset: 0,\n    full: 1,\n    model: ScrollModel,\n    extraData: {},\n    lastRefresh: new Date(),\n    getLastRefresh: function() {\n        //returns the formatted version of the last time this collection was refreshed/initialized\n        return this.lastRefresh.toISOString().replace(\"T\", \" \").substr(0,19);\n    },\n    context: function(){\n        //context change listener - this will need to be defined by the subclass\n    },\n    initialize: function(){\n        this.offset = 0;\n        if(contextModel.get('userAuth') && this.url) {\n            //allow for additional data to be passed in, aside from the context model\n            var data = {};\n            $.extend(data,contextModel.toParams(),this.extraData);\n            this.active=1\n            var that = this\n            this.fetch({\n                data: $.param(data), remove:true,\n                success: function(fulcol, res) {that.full = res.length < that.limit; that.active=0},\n                error: function() {that.full = 1; that.active=0}\n            });\n            \n\t    }\n\n        //setup context change listener\n        this.context();\n    },\n    more: function() {\n\tif(!this.full && !this.active) {\n            //allow for additional data to be passed in, aside from the context model\n            var data = {};\n            $.extend(data,contextModel.toParams(),this.extraData);\n            var that=this\n            this.offset = this.models.length;\n            this.active=1\n            this.fetch({\n                data: $.param(data),\n                remove:false,\n                success: function(fullcol, res) {that.active=0;that.full = res.length < that.limit},\n                error: function() {that.full = 1;that.active=0}\n            });\n        }\n\t},\n    refresh: function() {this.fetch_refresh()},\n    fetch_refresh: function() {\n        if (contextModel.get('userAuth')) {\n            \n            var data = {};\n            $.extend(data, contextModel.toParams(), this.extraData);\n            \n            this.offset = 0;\n            this.full = 0;\n            this.active = 1;\n            var that=this\n            this.fetch({\n                data: $.param(data),\n                remove: true,\n                success: function(fullcol, res) {that.full = res.length < that.limit; that.active=0},\n                error: function() {that.full = 1; that.active=0}\n            });\n        }\n    },\n    });\n\n    return ScrollCollection;\n});\n\n","define('pathway/models/historyCollection',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'globalmodels/contextModel',\n    'globalmodels/scrollCollection',\n], function($, _, Backbone, contextModel, ScrollCollection) {\n    HistoryModel = Backbone.Model;\n\n    var HistoryCollection = ScrollCollection.extend({\n        url: function () {\n            return '/history' + this.offset + '-' + (this.offset + this.limit);\n        },\n        model: HistoryModel,\n        refresh: function () {\n            if (contextModel.get('userAuth')) {\n                //allow for additional data to be passed in, aside from the context model\n                var data = {};\n                $.extend(data, contextModel.toParams(), this.extraData);\n                that = this;\n                this.tried = 0;\n                this.offset = 0;\n                this.fetch({\n                    data: $.param(data),\n                    remove: true,\n                    success: function(){\n                        that.trigger('reset');\n                    }\n                });\n            }\n        }\n    });\n    return HistoryCollection;\n});\n\n","\ndefine('text!templates/pathway/pathwayHistoryRow.html',[],function () { return '<div class=\"dd-handle dd2-handle\" name=\"<%=name%>\">\\n    <i class=\"normal-icon ace-icon fa fa-book orange bigger-130\"></i>\\n</div>\\n<div class=\"dd2-content\" title=\"Author: <%=official_name%>\\nDate: <%=creation_date%>\">\\n<span><a class=\\'history-select-button\\'><%=creation_date%></a></span>\\n    <div class=\"pull-right action-buttons\">\\n        <a><span style=\"padding-right: 1px;\"\\n             class=\"glyphicon <%= (active == 1) ? \\'glyphicon-check\\' : \\'glyphicon-unchecked\\' %> history-checkbox\"></span></a>\\n        <a class=\"red delete-hist\" href=\"#\">\\n\\t\\t    <i class=\"ace-icon fa fa-trash-o bigger-130\"></i>\\n\\t    </a>\\n    </div>\\n</div>';});\n\n","/***************************************************************************\n * Copyright (c) 2014 - Maven Medical\n * AUTHOR: 'Carlos Brenneisen'\n * DESCRIPTION: This Javascript handles the row for a historical snapshot\n *                  of a given pathway\n **************************************************************************/\ndefine('pathway/singleRows/historyRow',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    //Template\n    'text!templates/pathway/pathwayHistoryRow.html',\n\n    'globalmodels/contextModel',\n\n], function ($, _, Backbone, historyRowTemplate, contextModel) {\n\n    var HistoryRow = Backbone.View.extend({\n        tagName: \"li class='dd-item history-row'\",\n        template: _.template(historyRowTemplate),\n        events: {\n            'click .history-checkbox': 'handleCheck',\n            'click .history-select-button': 'handleSelect'\n        },\n        render: function(){\n            $(this.el).html(this.template($.extend({viewid:this.cid},this.model.toJSON())));\n            this.model.url = \"/history/\" + this.model.get(\"canonical\") + \"/\" + this.model.get('pathid');\n\n            return this;\n        },\n        handleCheck: function(event){\n            if ($(event.target).hasClass(\"check-disabled\")) return;\n            $(this.el).parent().find(\".history-checkbox\").switchClass(\"glyphicon-check\", \"glyphicon-unchecked\")\n            $(\".history-checkbox\", this.$el).switchClass(\"glyphicon-unchecked\", \"glyphicon-check\");\n            //$(this.el).trigger(\"change\");\n            this.model.save();\n        },\n        handleSelect: function() {\n            if (contextModel.get('code') == 'undefined') {\n                if (contextModel.get('canonical') != this.model.get('canonical')){\n                    contextModel.set('code', 'undefined', {silent: true});\n                }\n            }\n            contextModel.set('pathid', String(this.model.get('pathid')))\n            contextModel.set('canonical', String(this.model.get('canonical')))\n\n            $(\".active-pathway\").removeClass(\"active-pathway\");\n            $(this.el).addClass(\"active-pathway\")\n        }\n    });\n\n    return HistoryRow;\n\n});\n\n","\ndefine('text!templates/pathway/historyScroll.html',[],function () { return '<div class=\"historylist history-scroll\" style=\"clear:both; max-height: 200px; overflow-y:auto; overflow-x: hidden\">\\n    <div class=\"historyaccordion\">\\n    </div>\\n</div>';});\n\n","define('widgets/pathway/historyList',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    //views\n    'pathway/models/historyCollection',\n    'pathway/singleRows/historyRow',\n\n    'text!templates/pathway/historyScroll.html',\n    'pathway/models/treeModel',\n\n    'globalmodels/contextModel',\n\n], function ($, _, Backbone, HistoryCollection, HistoryRow, HistoryListTemplate, curTree, contextModel) {\n    var historyCollection;\n\n    var HistoryList = Backbone.View.extend({\n    extraData: {},\n    lastHeight: 0,\n    currentPath: 0,\n    first: true,\n    initialize: function(arg) {\n        if (typeof arg.template !== \"undefined\") {\n            this.template = _.template(arg.template); // this must already be loaded\n        }\n        else {\n            this.template = _.template(HistoryListTemplate);\n        }\n        if (typeof arg.extraData !== \"undefined\") {\n            this.extraData = arg.extraData;\n        }\n        if (typeof arg.currentPath !== \"undefined\") {\n            this.currentPath = arg.currentPath;\n        }\n        historyCollection = new (HistoryCollection.extend({extraData: this.extraData}));\n\n        this.$el.html(this.template({height:$(window).height()-50+'px'}));\n\t    historyCollection.bind('add', this.addHistory, this);\n\t    historyCollection.bind('reset', this.render, this);\n        curTree.bind('propagate', historyCollection.refresh, historyCollection)\n\t    //historyCollection.bind('sync', this.render, this);\n\t    //this.render();\n\t},\n    events: {\n\n    },\n\trender: function() {\n        this.reset();\n\n\t    this.$el.html(this.template(this));\n\t    this.addAll();\n\t},\n\taddAll: function() {\n\t    var nonempty = false;\n\t    if (historyCollection.length) {\n\t\tfor(hist in historyCollection.models) {\n\t\t\tthis.addHistory(historyCollection.models[hist]);\n\t\t\tnonempty = true;\n\t\t}\n\t    }\n\t    if(!nonempty) {\n            $('.historyaccordion').html('No History');\n            //this.$el.show();\n\t    }\n        else {\n            //this.$el.show();\n            var historylist = $('.history-scroll', this.$el);\n            setTimeout(function () {\n                var historyHeight = historylist.innerHeight();\n                if (this.lastHeight != historyHeight && historyHeight < parseInt(historylist.css('max-height'))) {\n                    this.lastHeight = historyHeight;\n                    historyCollection.more();\n                }\n                else {\n                    historylist.scroll(function(e) {\n                        if(historylist.scrollTop() + historylist.innerHeight() + 100 >= historylist[0].scrollHeight) {\n                            historyCollection.more();\n                        }\n                        return false;\n                    });\n                }\n            }, 500);\n        }\n\t},\n\taddHistory: function(history) {\n     /*   curpath = history.get(\"pathid\");\n        if (this.currentPath == curpath){\n            history.set({active: 1});\n        }\n        else {\n            history.set({active: 0});\n        }*/\n\t    var historyrow = new HistoryRow({model: history});\n\t    $('.historyaccordion', this.$el).append(historyrow.render().el);\n        $(historyrow.el).bind(\"change\", {activePath: historyrow.model.get(\"pathid\"), that: this}, this.updateActivePathway);\n\n\t    //this.$el.show();\n        //historyrow.events();\n\t},\n    updateActivePathway: function(event) {\n        event.data.that.currentPath = event.data.activePath;\n        $(this.el).trigger(\"change\");\n    },\n\treset: function() {\n\t    $(this.$el).empty();\n\t},\n    });\n\n    return HistoryList;\n\n});\n\n","\n/***************************************************************************\n * Copyright (c) 2014 - Maven Medical\n * AUTHOR: 'Tom DuBois'\n * DESCRIPTION: This Javascript file handle a hierarchy of rulelist view\n *              so we can handle events easier.\n *\n **************************************************************************/\ndefine('pathway/singleRows/pathRow',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jqueryq\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'router',\n    'globalmodels/contextModel',\n    'pathway/models/pathwayCollection',\n    'text!templates/pathway/pathwayListEntry.html',\n    '../../widgets/pathway/historyList',\n\n], function ($, _, Backbone, router, contextModel, pathwayCollection, pathRowTemplate, HistoryList) {\n\n    var ruleRow = Backbone.View.extend({\n        tagName: \"li class='dd-item pathrow-item dd2-item dd-collapsed'\",\n        template: _.template(pathRowTemplate),\n        historyList: null,\n        events:{\n\t      'click .select-button': 'handleSelect',\n\t      'click .show-hist': 'handleHistory',\n\t      'click .delete-button': 'handleRemove',\n\t      'click .pathway-checkbox': 'handleCheck',\n\t      'click .pathway-switch-label': 'handleToggle',\n        },\n        handleToggle: function(event){\n            event.stopPropagation();\n        },\n        render: function(){\n            $(this.el).html(this.template(this.model.toJSON()));\n            this.model.url = \"/list/\" + this.model.get(\"canonical\");\n\n            var that = this;\n            $(document).ready(function(){\n                //$(\".pathway-enable\", that.$el).bootstrapSwitch();\n                $('.pathway-enable', that.$el).on('switchChange.bootstrapSwitch', function(event, state) {\n                   // event.stopPropagation();\n                    if (state){\n                        $(\".history-checkbox\", this.$el).removeClass(\"check-disabled\",0);\n                    }\n                    else {folderrow\n                        $(\".history-checkbox\", this.$el).addClass(\"check-disabled\",0);\n                    }\n\n                    that.model.save({active: state});\n                });\n             });\n            return this;\n        },\n        initialize: function(params){\n            this.model = params.model\n            that = this;\n            $(this.el).on(\"remove\", function(){\n               console.log(\"this pathway was removed\");\n            });\n        },\n        handleSelect: function() {\n            if (contextModel.get('code') == 'undefined') {\n                if (contextModel.get('canonical') != this.model.get('canonical')){\n                    contextModel.set('code', 'undefined', {silent: true});\n                }\n            }\n            contextModel.set('canonical', String(this.model.get('canonical')))\n            contextModel.set('pathid', String(this.model.get('id')))\n\n            $(\".active-pathway\").removeClass(\"active-pathway\");\n            $(this.el).addClass(\"active-pathway\")\n\n            contextModel.unbind('change:pathid', this.updateCurPath);\n            contextModel.on(\"change:pathid\", this.updateCurPath, {that: this});\n        },\n        updateCurPath: function(event){\n            if (contextModel.get('canonical') == this.that.model.get('canonical')) {\n                this.that.model.set('id', contextModel.get('pathid'));\n            }\n            else {\n                contextModel.unbind('change:pathid', this.that.updateCurPath);\n            }\n        },\n        handleCheck: function(event){\n            var active = false;\n            if ($(event.target).hasClass(\"glyphicon-check\")) {\n                $(event.target).switchClass(\"glyphicon-check\", \"glyphicon-unchecked\", 0);\n                $(\".history-checkbox\", this.$el.parent()).addClass(\"check-disabled\",0);\n            }\n            else {\n                active = true;\n                $(event.target).switchClass(\"glyphicon-unchecked\", \"glyphicon-check\", 0);\n                $(\".history-checkbox\", this.$el.parent()).removeClass(\"check-disabled\",0);\n            }\n            //$(this.el).trigger(\"change\");\n            this.model.save({active: active});\n        },\n        handleHistory: function() {\n            var pathwayHistory = $(\".pathway-history-section\", this.$el)\n           // pathwayHistory.toggle();\n            //if (pathwayHistory.is(\":visible\")){\n                //hide all other history views\n                //$(\".pathway-history-section\").not(pathwayHistory).hide();\n                //if (pathwayHistory.is(\":empty\")) {\n                    //only fetch history if not yet fetched\n                    var extraData = {canonical: this.model.get('canonical')};\n                    this.historyList = new HistoryList({el: pathwayHistory, currentPath: this.model.get('id'), extraData: extraData});\n                    $(this.historyList.el).bind(\"change\", {that: this}, this.updateActivePathway);\n                //}\n           // }\n        },\n        updateActivePathway: function(event) {\n            event.data.model.set('id', event.data.that.historyList.currentPath);\n        },\n    \thandleRemove: function() {\n            var del = confirm(\"Are you sure you want to delete this pathway?\");\n            if (!del) return;\n            this.model.destroy({success: function(){\n                pathwayCollection.fetch()\n            }})\n\n            this.undelegateEvents(); // Unbind all local event bindings\n\n            $(this.el).remove(); // Remove view from DOM\n\n            delete this.$el; // Delete the jQuery wrapped object variable\n            delete this.el; // Delete the variable reference to this node\n    \t}\n    });\n\n    return ruleRow;\n\n});\n\n","/**\n * Created by Asmaa Aljuhani on 3/14/14.\n */\n\ndefine('globalmodels/summaryModel',[\n    'jquery',\n    'backbone',\n    'globalmodels/contextModel'\n], function ($, BackBone, contextModel) {\n\n    var SummaryModel = Backbone.Model.extend({urlRoot: '/total_spend'});\n    var summaryModel = new SummaryModel;\n\n    summaryModel.set({'spending':'','savings':''}, {silent:true});\n    if(contextModel.get('userAuth')) {\n\tsummaryModel.fetch({data:$.param(contextModel.toParams())});\n    }\n    var lastchange = {};\n    contextModel.on('change:patients change:userAuth change:encounter change:startdate change:enddate', \n\t\t    function(x) {\n\t\t\tvar changes = _.extend({},contextModel.changed);\n\t\t\tif(!_.isEqual(changes,lastchange)) {\n\t\t\t    lastchange = changes;\n\t\t\t    summaryModel.set({'spending':'','savings':''}, {silent:true});\n\t\t\t    summaryModel.fetch({data:$.param(x.toParams())});\n\t\t\t}\n\t\t    });\n    \n    return summaryModel;\n});\n\n","/**\n * Created by Asmaa Aljuhani on 3/14/14.\n */\n\ndefine('globalmodels/patientModel',[\n    'jquery',\n    'backbone',\n    'globalmodels/contextModel'\n], function ($, BackBone, contextModel) {\n\n    var PatientModel = Backbone.Model.extend({url: '/patient_details'});\n    var patientModel = new PatientModel;\n\n    if(contextModel.get('patients') && contextModel.get('userAuth')) {\n\tpatientModel.fetch({data:$.param(contextModel.toParams())});\n    }\n    contextModel.on('change:patients change:userAuth', \n\t\t    function(x) {\n\t\t\tif(x.get('patients') != patientModel.get('id') \n\t\t\t  && x.get('userAuth')) {\n\t\t\t    if(x.get('patients')) {\n\t\t\t\tpatientModel.fetch({data:$.param(x.toParams())});\n\t\t\t    } else {\n\t\t\t\tpatientModel.set({id:'', name:''});\n\t\t\t    }\n\t\t\t}\n\t\t    });\n\n    return patientModel;\n});\n\n","/**\n * Created by Asmaa Aljuhani on 3/14/14.\n */\n\ndefine('globalmodels/spendingModel',[\n    'underscore',\n    'backbone',\n    'globalmodels/contextModel'\n], function (_, Backbone, contextModel) {\n\n    var SpendingModel = Backbone.Model.extend({\n\turlRoot: '/spending',\n\tclickType: function(type) {\n\t    this.set({typeFilter:type});\n\t},\n\tclickDate: function(x) {\n\t    var d=x.item.dataContext.date;\n\t    //console.log(d);\n\t    d.setHours(0);\n\t    d.setMinutes(0);\n\t    d.setSeconds(0);\n\t    d.setMilliseconds(0);\n\t    this.set({dateFilter:d});\n\t},\n\tgetGathered: function() {\n\t    var gathered = {};\n\t    var data = [];\n\t    var datefilter = this.get('dateFilter');\n\t    for (var d in this.attributes) {\n\t\tif(Date.parse(d)) {\n\t\t    var date = new Date(d);\n\t\t    if(!datefilter || \n\t\t       (date.getFullYear()==datefilter.getFullYear() && \n\t\t\tdate.getMonth()==datefilter.getMonth() &&\n\t\t\tdate.getDate()==datefilter.getDate())) {\n\t\t\tvar days_spend = spendingModel.get(d);\n\t\t\tfor (var t in days_spend) {\n\t\t\t    var base = days_spend[t];\n\t\t\t    if (t in gathered) {\n\t\t\t\tbase = base + gathered[t];\n\t\t\t    }\n\t\t\t    gathered[t]=base;\n\t\t\t}\n\t\t    }\n\t\t}\n\t    }\n\t    return gathered;\n\t}\n    });\n    \n    var spendingModel = new SpendingModel;\n    spendingModel.set({'typeFilter':'', dateFilter:''});\n    if(contextModel.get('userAuth')) {\n\tspendingModel.fetch({data:$.param(contextModel.toParams())});\n    }\n    contextModel.on('change:patients change:userAuth change:encounter change:startdate change:enddate', \n\t\t    function(x) {\n\t\t\tif(x.get('userAuth')) {\n\t\t\t    spendingModel.fetch({\n\t\t\t\tdata:$.param(x.toParams()),\n\t\t\t\tsuccess: function(m,r) {\n\t\t\t\t    var old={\n\t\t\t\t\t'typeFilter':spendingModel.get('typeFilter'),\n\t\t\t\t\t'dateFilter':spendingModel.get('dateFilter')\n\t\t\t\t    };\n\t\t\t\t    spendingModel.clear({silent:true});\n\t\t\t\t    spendingModel.set($.extend(old,r));\n\t\t\t\t},\n\t\t\t    });\n\t\t\t}\n\t\t    });\n\n    return spendingModel;\n});\n\n","define('globalmodels/orderCollection',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'globalmodels/contextModel',\n    'globalmodels/scrollCollection'\n], function($, _, Backbone, contextModel, ScrollCollection) {\n    OrderModel = Backbone.Model;\n\n    orderCollection = new ScrollCollection;\n    orderCollection.url = function() {return '/orders'+this.offset+'-'+(this.offset+this.limit);};\n    orderCollection.model = OrderModel;\n    orderCollection.limit = 10;\n    orderCollection.context = function(){\n        contextModel.on('change:patients change:encounter change:startdate change:enddate',\n\t\t    // this will be needed once the context filters things\n\t\t    function(cm) {\n\t\t\tif(true && cm.get('userAuth')) {\n\t\t\t    if (cm.get('patients')) {\n                this.tried = 0;\n                this.offset = 0;\n                orderCollection.fetch({\n                    data:$.param(contextModel.toParams()),\n                    remove:true});\n\t\t\t    } else {\n\t\t\t\torderCollection.reset();\n\t\t\t    }\n\t\t\t}\n        }, orderCollection);\n    };\n\n    orderCollection.initialize();\n\n    return orderCollection;\n});\n\n","define('globalmodels/customerCollection',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'globalmodels/contextModel',\n    'globalmodels/scrollCollection'\n], function($, _, Backbone, contextModel, ScrollCollection) {\n    CustomerModel = Backbone.Model;\n\n    customerCollection = new ScrollCollection;\n    customerCollection.url = function() {return '/customers'+this.offset+'-'+(this.offset+this.limit);};\n    customerCollection.model = CustomerModel;\n    customerCollection.limit = 10;\n\n    customerCollection.initialize();\n\n    return customerCollection;\n});\n\n","define('globalmodels/auditCollection',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'globalmodels/contextModel',\n    'globalmodels/scrollCollection'\n], function($, _, Backbone, contextModel, ScrollCollection) {\n    AuditModel = Backbone.Model;\n\n    var AuditCollection = ScrollCollection.extend({\n        url: function() {return '/audits'+this.offset+'-'+(this.offset+this.limit);},\n        model: AuditModel,\n        limit: 5,\n        context: function(){\n            $(\".auditlist\").on('show',\n\t\t    // make sure the correct audit list is being loaded (user's own list versus target user)\n\t\t    this.fetch_refresh, this);\n        }\n    });\n\n    return AuditCollection;\n});\n\n","define('globalmodels/patientCollection',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'globalmodels/contextModel',\n    'globalmodels/scrollCollection'\n], function($, _, Backbone, contextModel, ScrollCollection){\n    var PatientModel = Backbone.Model;\n\n    patientCollection = new ScrollCollection;\n    patientCollection.url = function() {return '/patients'+this.offset+'-'+(this.offset+this.limit);};\n    patientCollection.model = PatientModel;\n    patientCollection.limit = 10;\n    patientCollection.context = function(){\n      contextModel.on('change:patients change:startdate change:enddate',\n\t\t    // this will be needed once the context filters things\n\t\t    function(cm) {\n\t\t\tif(true && cm.get('userAuth')) {\n\t\t\t    this.tried = 0;\n\t\t\t    this.offset=0;\n\t\t\t    patientCollection.fetch({\n\t\t\t\tdata:$.param(contextModel.toParams()),\n\t\t\t\tremove:true});\n\t\t\t}\n\t    }, this);\n    };\n    patientCollection.initialize();\n\n    return patientCollection;\n});\n\n","define('globalmodels/userCollection',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'globalmodels/contextModel',\n    'globalmodels/scrollCollection',\n], function($, _, Backbone, contextModel, ScrollCollection) {\n    UserModel = Backbone.Model;\n\n    var UserCollection = ScrollCollection.extend({\n        url: function () {return '/users' + this.offset + '-' + (this.offset + this.limit);},\n        model: UserModel,\n        context: function(){\n            contextModel.on('change:startdate change:enddate',\n\t\t    // this will be needed once the context filters things\n\t\t    this.refresh);\n        },\n    });\n    return UserCollection;\n});\n\n","/**\n * Created by Asmaa Aljuhani on 6/26/14.\n */\ndefine('globalmodels/histogramModel',[\n    'jquery',\n    'backbone',\n    'globalmodels/contextModel'\n], function ($, BackBone, contextModel) {\n\n    var HistogramModel = Backbone.Model.extend({urlRoot: '/hist_spending'});\n    var histogramModel = new HistogramModel;\n\n    var downloadorder = ['diagnosis', 'admission', 'discharge', 'spending'];\n\n    if(contextModel.get('userAuth')) {\n\thistogramModel.fetch({data:$.param(contextModel.toParams())});\n    }\n    // histogrammodel explicitly ignores start/end dates\n    contextModel.on('change:patients change:userAuth',\n\t\t    function() {\n\t\t\thistogramModel.fetch({data:$.param(contextModel.toParams())});\n\t\t    });\n\n    return histogramModel;\n});\n\n","define('globalmodels/interactionCollection',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'globalmodels/contextModel',\n    'globalmodels/scrollCollection'\n], function($, _, Backbone, contextModel, ScrollCollection) {\n    InteractionModel = Backbone.Model;\n\n    var InteractionCollection = ScrollCollection.extend({\n        url: function() {return '/interactions'+this.offset+'-'+(this.offset+this.limit);},\n        model: InteractionModel,\n        limit: 10,\n        context: function(){\n            $(\".interactionlist\").on('show',\n\t\t    // make sure the correct interaction list is being loaded (user's own list versus target user)\n\t\t    this.fetch_refresh, this);\n        },\n    });\n\n    return InteractionCollection;\n});\n\n","define('globalmodels/alertCollection',[\n    'jquery',\n    'underscore',\n    'backbone',\n    'globalmodels/contextModel',\n    'globalmodels/scrollCollection'\n], function($, _, Backbone, contextModel, ScrollCollection) {\n    AlertModel = Backbone.Model;\n\n    //specify default categories here, leave blank to include all categories\n    var categories = [];\n\n    alertCollection = new ScrollCollection;\n    alertCollection.url = function() {return '/alerts'+this.offset+'-'+(this.offset+this.limit);};\n    alertCollection.model = AlertModel;\n    alertCollection.limit = 5;\n    alertCollection.extraData = {'categories': categories};\n    alertCollection.context = function(){\n      contextModel.on('change:patients change:encounter change:startdate change:enddate',\n\t\t    // this will be needed once the context filters things\n\t\t    function(cm) {\n\t\t\tif(cm.get('userAuth')) {\n                var data = {};\n                $.extend(data, contextModel.toParams(), alertCollection.extraData);\n\t\t\t    this.tried = 0;\n\t\t\t    this.offset=0;\n\t\t\t    alertCollection.fetch({\n\t\t\t\tdata:$.param(data),\n\t\t\t\tremove:true});\n\t\t\t}\n\t    }, this);\n    };\n    alertCollection.initialize();\n\n    return alertCollection;\n});\n\n","/**\n * Created by Asmaa Aljuhani on 10/7/14.\n */\n\n\ndefine('widgets/welcome',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n], function ($, _, Backbone, contextModel) {\n\n    var Welcome = Backbone.View.extend({\n            initialize: function(arg){\n\n                this.template = _.template(arg.template);\n                this.render();\n                this.showhide();\n                contextModel.on('change:page', this.showhide , this)\n\t\tcontextModel.on('change:pathid', this.render, this);\n            },\n            render: function (){\n\t\tif (contextModel.get('pathid') && contextModel.get('pathid') > 0) {\n\t\t    this.$el.hide();\n\t\t} else {\n                    this.$el.html(this.template(contextModel.attributes));\n\t\t    this.$el.show();\n\t\t}\n            },\n        showhide: function(){\n            if(contextModel.get('page') == 'home'){\n                this.$el.show();\n            }else{\n                this.$el.hide();\n            }\n        }\n\n\n    });\n    return Welcome;\n\n});\n\n","/*\n * jQuery UI Autocomplete HTML Extension\n *\n * Copyright 2010, Scott González (http://scottgonzalez.com)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n *\n * http://github.com/scottgonzalez/jquery-ui-extensions\n */\ndefine('jquery_autocomplete',['jquery', 'jquery_ui'],\n\n(function( $ ) {\n\nvar proto = $.ui.autocomplete.prototype,\n\tinitSource = proto._initSource;\n\nfunction filter( array, term ) {\n\tvar matcher = new RegExp( $.ui.autocomplete.escapeRegex(term), \"i\" );\n\treturn $.grep( array, function(value) {\n\t\treturn matcher.test( $( \"<div>\" ).html( value.label || value.value || value ).text() );\n\t});\n}\n\n$.extend( proto, {\n\t_initSource: function() {\n\t\tif ( this.options.html && $.isArray(this.options.source) ) {\n\t\t\tthis.source = function( request, response ) {\n\t\t\t\tresponse( filter( this.options.source, request.term ) );\n\t\t\t};\n\t\t} else {\n\t\t\tinitSource.call( this );\n\t\t}\n\t},\n\n\t_renderItem: function( ul, item) {\n\t\treturn $( \"<li></li>\" )\n\t\t\t.data( \"item.autocomplete\", item )\n\t\t\t.append( $( \"<a></a>\" )[ this.options.html ? \"html\" : \"text\" ]( item.label ) )\n\t\t\t.appendTo( ul );\n\t}\n});\n\n}));\n\n\n\n","/**\n * Created by Asmaa Aljuhani on 3/11/14.\n */\n\ndefine('widgets/patientSearch',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel', // current patient (if any)\n    'jquery_autocomplete',\n], function ($, _, Backbone,  contextModel) {\n    \n    var PatSearch = Backbone.View.extend({\n\tinitialize: function(arg){\n\t    this.template = _.template(arg.template);\n\t    this.update(contextModel);\n\t    contextModel.on('change:patients', this.update, this);\n\t},\n\tupdate: function(cm) {\n\t    if(cm.get('patients')) {\n\t\t// for now this is what we do when there is no patient selected\n\t    } else {\n\t\t    this.$el.html(this.template(contextModel.attributes));\n\n            $(\"#srch-diagnosis\").autocomplete({\n                source: function(request, response) {\n                $.ajax({\n                    url: \"/autocomplete_diagnosis\",\n                    term : request.term,\n                    data:$.param(contextModel.toParams())+\"&diagnosis=\"+request.term,\n                    success: function(data) {\n                        response(data);\n                    }\n                  });\n                },\n                minLength: 4,\n                select: function(event, ui) {\n                    if(ui.item){\n                        $(event.target).val(ui.item.value);\n                        $(event.target.form).submit();\n                    }\n                }\n            });\n\n            var patients = new Array();\n            $('#srch-patient').autocomplete({\n                source: function(request, response) {\n                $.ajax({\n                    url: \"/autocomplete_patient\",\n                    term : request.term,\n                    patientname : $('#srch-patient').val(),\n                    data:$.param(contextModel.toParams())+\"&patientname=\"+request.term,\n                    success: function(data) {\n                        response(data);\n                    }\n                  });\n                },\n                minLength: 2,\n                select: function(event, ui) {\n                    event.preventDefault(); // prevent the \"value\" being written back after we've done our own changes\n\n                    if(ui.item){\n                        $(event.target).val(ui.item.label);\n                       // $(event.target.form).submit();\n                        contextModel.set({patientName:ui.item.label},\n\t\t\t\t\t {silent:true});\n\t\t\tBackbone.history.navigate('patient/'+ui.item.value, {trigger:true});\n\n                    }\n                }\n            });\n        }\n\t}\n    });\n    return PatSearch;\n});\n\n","/**\n * Created by Asmaa Aljuhani on 7/5/14.\n */\n\ndefine('widgets/datepicker-calendar',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'fullcalendar',\n    'globalmodels/contextModel',\n    'globalmodels/histogramModel'\n], function ($, _, Backbone, fullCalendar, contextModel, histogramModel) {\n    var DatepickerCalendar = Backbone.View.extend({\n        initialize: function (arg) {\n            this.template = _.template(arg.template); // this must already be loaded\n            this.$el.html(this.template({page: contextModel.get('page')}));\n            contextModel.on('change:patients change:encounter change:enc_date', this.update, this);\n            this.update();\n            $(\"#datepicker-modal\").on('shown.bs.modal', function () {\n                $(\"#calendar1\").fullCalendar('render');\n                $(\"#calendar2\").fullCalendar('render');\n\n            });\n        },\n        events: {\n            'click .btn': 'showEncounters'\n        },\n        update: function () {\n\n            var calendar = new Array();\n            var num_of_calendars = 2;\n            var eventlist = [];\n\n            for (var key in histogramModel.attributes) {\n                var enc = histogramModel.attributes[key];\n                var discharge = enc['discharge'];\n                if (!discharge) {\n                    discharge = (new Date()).toISOString().substring(0, 10);\n                }\n                eventlist.push({\n                    id: enc['encounterid'],\n                    title: enc['patientname'] + \": \" + enc['diagnosis'] + \" $\" + enc['spending'],\n                    start: enc['admission'],\n                    end: discharge,\n                    className: 'admission',\n                    allDay: true,\n                    url: \"#episode/\" + enc['encounterid'] + \"/patient/\" + enc['patientid'] + \"/\" + enc['admission'] });\n            }\n\n            for (var i = 1; i <= num_of_calendars; i++) {\n                var today = new Date ();\n                var d = (contextModel.get('enc_date'))? new Date(contextModel.get('enc_date')): new Date(today.getFullYear(), today.getMonth() - 2, 1);\n                var dd = d.setMonth(d.getMonth() + i);\n                calendar[i] = $(\"#calendar\" + i).fullCalendar({\n                    header: {\n                        left: (i == 1) ? 'prev,next' : '',\n                        center: 'title',\n                        right: (i == 2) ? 'today' : ''\n                    },\n                    defaultDate: dd,\n                    selectable: true,\n                    selectHelper: true,\n                    select: function (start, end, jsEvent) {\n                        if (contextModel.get('patients')) {\n                            contextModel.set({'enc': null, 'enc_date': null,\n                                'startdate': start.format(),\n                                'enddate': end.format()});\n                            // navigate to the chosen encounter\n                            Backbone.history.navigate(\"patient/\" + contextModel.get('patients'), true);\n                            // hide the modal\n                            $('#datepicker-modal').modal('hide');\n                        }\n                        $('#calendar').fullCalendar('unselect');\n                    },\n\n                    eventClick: function (event) {\n                        if (event.url) {\n                            // navigate to the chosen encounter\n                            Backbone.history.navigate(event.url, true);\n                            // hide the modal\n                            $('#datepicker-modal').modal('hide');\n\n                        }\n                    },\n                    events: eventlist\n                });\n            }\n\n            $(\"#calendar1 .fc-button-prev\").each(function () {\n                $(this).click(function () {\n                    $(\"#calendar2\").each(function () {\n                        $(this).fullCalendar('prev');\n                    });\n                });\n            });\n            $(\"#calendar1 .fc-button-next\").each(function () {\n                $(this).click(function () {\n                    $(\"#calendar2\").each(function () {\n                        $(this).fullCalendar('next');\n                    });\n                });\n            });\n            $(\"#calendar2 .fc-button-today\").each(function () {\n                $(this).click(function () {\n                    $(\"#calendar1\").each(function () {\n                        $(this).fullCalendar('today');\n                        $(this).fullCalendar('prev');\n                    });\n                });\n            });\n        },\n        showEncounters: function (e) {\n            var period = e.target.id;\n            var d = new Date();\n            d.setMonth(d.getMonth() - period);\n            console.log(d.toLocaleDateString());\n\n            contextModel.set({'enc': null, 'enc_date': null,\n                'startdate': d.toLocaleDateString(),\n                'enddate': (new Date()).toLocaleDateString()});\n            // navigate to the chosen encounter\n            Backbone.history.navigate(\"patient/\" + contextModel.get('patients'), true);\n            // hide the modal\n            $('#datepicker-modal').modal('hide');\n        }\n    });\n    return DatepickerCalendar;\n});\n\n","\ndefine('text!templates/patientRow.html',[],function () { return '<td>\\n    <a>\\n        <%= name %>\\n    </a>\\n    </td>\\n    <td>\\n        <%= gender %>\\n    </td>\\n    <td>\\n        <%= DOB %>\\n    </td>\\n    <td>\\n        <%= diagnosis %>\\n    </td>\\n    <td>\\n        $<%= cost %>\\n    </td>';});\n\n","/***************************************************************************\n * Copyright (c) 2014 - Maven Medical\n * AUTHOR: 'Asmaa Aljuhani'\n * DESCRIPTION: This Javascript file handle a hierarchy of patientlist view\n *              so we can handle events easier.\n * LAST MODIFIED FOR JIRA ISSUE: MAV-97\n **************************************************************************/\ndefine('singleRow/patientRow',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'text!templates/patientRow.html'\n], function ($, _, Backbone, contextModel, patRowTemplate) {\n    var patientRow = Backbone.View.extend({\n        tagName: 'tr',\n        template: _.template(patRowTemplate),\n        events:{\n            'click': 'handleClick'\n        },\n        render: function(){\n            $(this.el).html(this.template(this.model.toJSON()));\n            return this;\n        },\n        handleClick: function(){\n            //update context to have a current patient, \n\t    //that triggers everything else\n\t    var patid = this.model.get(\"id\");\n            contextModel.set({patientName:this.model.get(\"name\")},\n\t\t\t    {silent:true});\n\t    Backbone.history.navigate('patient/'+patid, {trigger:true});\n        }\n    });\n\n    return patientRow;\n\n});\n\n","\ndefine('text!templates/patientList.html',[],function () { return '<div class = \"widget-column col-sm-12\">\\n<div class=\"row\" style=\\'width:90%;margin:0 auto 0 auto\\'>\\n        <h2 class=\"headings\">\\n          <%= display %>\\'s Recent Patients\\n        </h2>\\n    <div class=\\'patientlist\\' style=\" width:100%; padding:0; max-height:100px; overflow-y:auto;\">\\n    <table class=\"table table-condensed table-hover patienttable\" style=\"width:100%; padding: 0;\">\\n        <col width=\"20%\">\\n        <col width=\"20%\">\\n        <col width=\"20%\">\\n        <col width=\"20%\">\\n        <col width=\"20%\">\\n        <thead>\\n            <tr>\\n                <th align=\"left\" id=\"pat_name\">Name</th>\\n                <th align=\"left\" id=\"pat_gender\">Gender</th>\\n                <th align=\"left\" id=\"pat_dob\">Date of Birth</th>\\n                <th align=\"left\" id=\"pat_diagnosis\">Diagnosis</th>\\n                <th align=\"left\" id=\"pat_cost\">Cost</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n        </tbody>\\n    </table>\\n    </div>\\n</div>\\n<div class=\"maven-padding\"></div>\\n<div class=\"row\">\\n    <hr>\\n</div>\\n</div>\\n';});\n\n","/**\n * Created by Asmaa Aljuhani on 3/11/14.\n */\n\ndefine('widgets/patientList',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'globalmodels/patientCollection',\n    'singleRow/patientRow',\n    'text!templates/patientList.html'\n], function ($, _, Backbone, contextModel, patientCollection, PatientRow, patientListTemplate) {\n        var PatientList = Backbone.View.extend({\n\t    template: function() {return '';},\n        initialize: function(){\n            patientCollection.bind('add', this.addPatient, this);\n            patientCollection.bind('reset', this.render, this);\n            contextModel.on('change', this.addAll, this);\n            this.addAll();\n            var patientlist = $('.patientlist', this.$el);\n            patientlist.scrollTop(0);\n            patientlist.scroll(function() {\n            if(patientlist.scrollTop() + patientlist.innerHeight() + 100 >= patientlist[0].scrollHeight) {\n                patientCollection.more();\n            }\n            });\n        },\n        render: function(){\n            template= _.template(patientListTemplate, {display: contextModel.get('display')});\n            this.$el.html(template);\n            return this;\n        },\n\t    addPatient: function(pat){\n            var patientrow = new PatientRow({\n                model: pat\n            });\n            $('.patienttable').append(patientrow.render().el);\n        },\n\t    addAll: function() {\n\t\t    if(contextModel.get('patients')) {\n\t\t        this.$el[0].style.display='none';\n\t\t    }\n            else {\n\t\t        this.$el[0].style.display='';\n\t\t        this.render();\n\t\t        for(var pat in patientCollection.models) {\n\t\t\t        this.addPatient(patientCollection.models[pat]);\n\t\t        }\n\t\t    }\n\n            var patientlist = $('.patientlist', this.$el);\n            setTimeout(function() {\n                var patientHeight = patientlist.innerHeight();\n                if (patientHeight > 0 && patientHeight < parseInt(patientlist.css('max-height'))) {\n                    patientCollection.more();\n                }\n            },500);\n\t    },\n    });\n\n    return PatientList;\n});\n\n","/**\n * Created by Carlos Brenneisen on 9/02/14.\n */\n\ndefine('widgets/customerCreation',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel'\n\n], function ($, _, Backbone, contextModel) {\n\n    var CustomerCreation = Backbone.View.extend({\n        initialize: function (arg) {\n            this.template = _.template(arg.template);\n            this.render();\n\n\n            this.showhide();\n            contextModel.on('change:page', this.showhide , this)\n\n        },\n        events: {\n            'click .add-customer-button': 'addCustomer'\n        },\n        showhide: function(){\n            if(contextModel.get('page') == 'customers'){\n                this.$el.show();\n            }else{\n                this.$el.hide();\n            }\n        },\n        addCustomer: function () {\n            var name = $(\"#customer-name-input\").val();\n            var abbr = $(\"#customer-abbr-input\").val();\n            var license = $(\"#customer-license-input\").val();\n            var config = $(\"#customer-config-input\").val();\n            var ituser = $(\"#customer-ituser-input\").val();\n\n            var reg_num = new RegExp('^[0]*[1-9]+[0]*$');\n            if (!reg_num.test(license))\n            {\n                $(\"#add-customer-message\").html(\"Please enter a valid number for # of licenses\");\n            }\n            else if (abbr==\"\")\n            {\n                $(\"#add-customer-message\").html(\"Please fill out Customer Abbreviation\");\n            }\n            else if (name==\"\")\n            {\n                $(\"#add-customer-message\").html(\"Please fill out Customer Name\");\n            }\n            else if (ituser==\"\")\n            {\n                $(\"#add-customer-message\").html(\"Please fill out IT User\");\n            }\n            else {\n                $(\"#add-customer-message\").html(\"&nbsp;\");\n                $.ajax({\n                    url: \"/add_customer\",\n                    data: $.param(contextModel.toParams()) + \"&name=\" + name +\n                          \"&abbr=\" + abbr + \"&license=\" + license + \"&ituser=\" + ituser +\n                          \"&config=\" + config,\n                    success: function (data, status, jqxhr) {\n                        $(\"#add-customer-message\").html(\"Customer Added!\");\n                        $(\"#customer-name-input\").val(\"\");\n                        $(\"#customer-abbr-input\").val(\"\");\n                        $(\"#customer-license-input\").val(\"\");\n                        $(\"#customer-ituser-input\").val(\"\");\n                        $(\"#add-customer-message\").html(\"Customer added.  \"+data);\n                        alert(data);\n                    },\n                    error: function(){\n                        $(\"#add-customer-message\").html(\"Sorry, an error occurred\");\n                    }\n                });\n            }\n        },\n        render: function(){\n            this.$el.html(this.template);\n            return this;\n        }\n    });\n\n    return CustomerCreation;\n\n});\n\n","/**\n * Created by Asmaa Aljuhani on 7/23/14.\n */\n\ndefine('widgets/providerProfile',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'globalmodels/sidebarModel',\n], function ($, _, Backbone, contextModel, sidebarModel) {\n\n    var Profile = Backbone.View.extend({\n            initialize: function(arg){\n                this.template = _.template(arg.template);\n                this.render();\n                sidebarModel.addOption('Profile')\n                this.showhide();\n                contextModel.on('change:page', this.showhide , this)\n\n            },\n            events: {\n                'keyup #official-name-input':'doentersave',\n                'keyup #display-name-input':'doentersave',\n                'keyup #new-password':'doenterchange',\n                'click #change-password': 'dochangepassword',\n                'click #save-settings': 'dosavesettings',\n            },\n        showhide: function(){\n            if(contextModel.get('page') == 'profile'){\n                this.$el.show();\n            }else{\n                this.$el.hide();\n            }\n        },\n            render: function (){\n                this.$el.html(this.template(contextModel.attributes));\n            },\n            doentersave: function(event){\n                $(\"#settings-save-status\").empty();\n                if(event.keyCode == 13){\n                    this.dosavesettings(event);\n                }\n            },\n            dosavesettings: function(event) {\n                var official_name = $(\"#official-name-input\").val();\n                var display_name = $(\"#display-name-input\").val();\n\n                $.ajax({\n                    url: \"/save_user_settings\",\n                    data:$.param(contextModel.toParams())+\"&official_name=\"+official_name+\"&display_name=\"+display_name,\n                    success: function(data) {\n                        console.log(\"Settings saved\");\n                        $(\"#settings-save-status\").html(\"Settings Saved!\");\n                    },\n                    error: function(xhr, textStatus, errorThrown){\n                        console.log(\"Settings failed to save\");\n                        $(\"#settings-save-status\").html(\"Sorry, an error occurred\");\n                    }\n            });\n        },\n        dochangepassword: function() {\n            if (this.newPasswordChange()){\n                console.log(\"saving new password\")\n            }\n        },\n        doenterchange: function(event){\n            if(event.keyCode == 13){\n                this.dochangepassword();\n            } else {\n                this.newPasswordChange();\n            }\n\t    },\n        newPasswordChange: function() {\n            var newpw = $(\"#new-password\").val();\n            var check = \"<big><big><font color='#00b000'>&#x2714</font></big></big>\";\n            var X = \"<big><font color='#ff0000'>&#x2718</font></big>\";\n            var len = newpw.length<8;\n            var low = newpw.search(\".*[a-z]\")<0;\n            var up = newpw.search(\".*[A-Z]\")<0;\n            var num = newpw.search(\".*[0-9]\")<0;\n            var diff = newpw==$(\"#current-password\").val();\n            var diff2 = newpw!=$(\"#new-password2\").val();\n            $(\"#pw-len-cb\").html(len?X:check);\n            $(\"#pw-low-cb\").html(low?X:check);\n            $(\"#pw-up-cb\").html(up?X:check);\n            $(\"#pw-num-cb\").html(num?X:check);\n            $(\"#pw-diff-cb\").html(diff?X:check);\n            if(len || low || up || num || diff || diff2) {\n            return false;\n            } else {\n            return true;\n            }\n\t    }\n    });\n    return Profile;\n\n});\n\n","\ndefine('text!templates/userRow.html',[],function () { return '<td>\\n    <%= (ehr_state == \\'active\\') ? display_name : \"<del>\" + display_name + \"</del>\" %> <br/>\\n    <%= profession %>\\n</td>\\n<td>\\n    <% if (last_login) { print(last_login + \\' GMT\\'); } %> <br/>\\n    <a class=\"audit-hover hover-link\">\\n        View Audits\\n    </a>\\n</td>\\n<td>\\n    <div width=\"100%\">\\n        <input type=\"checkbox\" class=\"toggle-status\" data-on-text=\"Active\" data-off-text=\"InActive\" data-size=\"small\" style=\"width:100% !important;\"\\n            <%= (roles.indexOf(\"administrator\")==-1 && ehr_state != \\'active\\') ? \"disabled\" : \\'\\' %>\\n            <%= (state == \\'active\\' && ehr_state == \\'active\\') ? \\'checked\\' : \\'\\' %>>\\n<!--\\n        <button class=\"btn btn-xs btn-default btn-block btn-status\" <%= (ehr_state != \\'active\\') ? \"disabled\" : \\'\\' %>\\n                value=\"<%= (state==\\'active\\') ? \\'deactivate\\' : \\'activate\\' %>\">\\n            <span class=\"btn-label\"><%= (state == \\'active\\' && ehr_state == \\'active\\') ? \\'Active\\' : \\'Inactive\\' %></span>\\n            <span class=\"btn-hover\"><%= (state == \\'active\\' && ehr_state == \\'active\\') ? \\'De Activate\\' : \\'Activate\\' %></span>\\n        </button>-->\\n    </div>\\n    <% if (ehr_state == \\'active\\' || roles.indexOf(\"administrator\")!=-1) { %>\\n    <div width=\"100%\">\\n        <button class=\"btn btn-xs reset-user-password btn-default btn-block\" value=\"\">Reset Password</button>\\n    </div>\\n    <% } %>\\n</td>\\n<td>&nbsp;</td>\\n<td>\\n    Primary <br/>\\n    Secondary\\n</td>\\n<td>\\n    <% notifications = {\\'desktop\\': \\'Desktop\\', \\'mobile\\': \\'Mobile\\', \\'ehrinbox\\': \\'EHR Inbox\\', \\'off\\': \\'Off\\', \\'\\': \\'Off\\'} %>\\n\\n    <div class=\"btn-group\" style=\"float:right; width:100%;\">\\n        <ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\" style=\\'float:right;\\'>\\n          <li><a class=\"btn-msg-primary\" value=\"desktop\">Desktop</a></li>\\n\\t      <li><a class=\"btn-msg-primary\" value=\"mobile\">Mobile</a></li>\\n          <li><a class=\"btn-msg-primary\" value=\"ehrinbox\">EHR Inbox</a></li>\\n          <li><a class=\"btn-msg-primary\" value=\"off\">Off</a></li>\\n\\t    </ul>\\n\\n        <button type=\"button\" class=\"btn btn-xs btn-default btn-block\" data-toggle=\"dropdown\">\\n            <span class=\"msg-primary-label\"><%= notifications[notify_primary.toLowerCase()] %></span>\\n\\t        <span class=\"sr-only\">Toggle Dropdown</span>\\n        </button>\\n\\n    </div>\\n\\n    <div class=\"btn-group\" style=\"float:right; width:100%;\">\\n        <ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\" style=\\'float:right;\\'>\\n          <li><a class=\"btn-msg-secondary\" value=\"desktop\">Desktop</a></li>\\n\\t      <li><a class=\"btn-msg-secondary\" value=\"mobile\">Mobile</a></li>\\n          <li><a class=\"btn-msg-secondary\" value=\"ehrinbox\">EHR Inbox</a></li>\\n          <li><a class=\"btn-msg-secondary\" value=\"off\">Off</a></li>\\n\\t    </ul>\\n\\n        <button type=\"button\" class=\"btn btn-xs btn-default btn-block msg-secondary-dropdown\" data-toggle=\"dropdown\">\\n            <span class=\"msg-secondary-label\"><%= notifications[notify_secondary.toLowerCase()] %></span>\\n\\t        <span class=\"sr-only\">Toggle Dropdown</span>\\n        </button>\\n\\n    </div>\\n\\n</td>';});\n\n","\ndefine('text!templates/auditRow.html',[],function () { return '<td>\\n    <%= date %> GMT\\n</td>\\n<td>\\n    <%= (patient != \"NOTVALIDYET\") ? patient : \"\"%>\\n</td>\\n<td>\\n    <%= action %>\\n</td>\\n<td>\\n    <%= (target != \"NOTVALIDYET\") ? target: \"\" %>\\n</td>\\n<td>\\n    <%= (device != \"NOTVALIDYET\") ? device: \"\" %>\\n</td>\\n<td>\\n    <%= (details != \"NOTVALIDYET\") ? details: \"\" %>\\n</td>\\n\\n';});\n\n","/***************************************************************************\n * Copyright (c) 2014 - Maven Medical\n * AUTHOR: 'Carlos Brenneisen'\n * DESCRIPTION: This Javascript handles an audit row, normally shown when \n *              hovering over a user\n **************************************************************************/\ndefine('singleRow/auditRow',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    //Template\n    'text!templates/auditRow.html',\n\n], function ($, _, Backbone, auditRowTemplate) {\n\n    var AuditRow = Backbone.View.extend({\n        tagName: \"tr class='audit-row'\",\n        template: _.template(auditRowTemplate),\n        render: function(){\n            $(this.el).html(this.template($.extend({viewid:this.cid},this.model.toJSON())));\n            return this;\n        }\n    });\n\n    return AuditRow;\n\n});\n\n","/*\n * jQuery Event Mousestop v0.1.1\n * http://richardscarrott.co.uk/posts/view/jquery-mousestop-event\n *\n * Copyright (c) 2010 Richard Scarrott\n * W/ thanks to Ben Alman for his jQuery special event API write up:\n * http://benalman.com/news/2010/03/jquery-special-events/\n *\n * Dual licensed under the MIT and GPL licenses:\n * http://www.opensource.org/licenses/mit-license.php\n * http://www.gnu.org/licenses/gpl.html\n *\n * Requires jQuery v1.3+\n */\n\nrequire(['jquery'],\nfunction($) {\n    // public vars\n    $.mousestopDelay = 500;\n\n    // special event\n    $.event.special.mousestop = {\n        setup: function(data) {\n            $(this).data('mousestop', {delay: data})\n                   .bind('mouseenter.mousestop', mouseenterHandler)\n                   .bind('mouseleave.mousestop', mouseleaveHandler);\n        },\n        teardown: function() {\n            $(this).removeData('mousestop')\n                   .unbind('.mousestop');\n        }\n    };\n\n    // private methods\n    function mouseenterHandler() {\n        if (typeof this.timeout === 'undefined') {\n            this.timeout = null;\n        }\n        \n        var elem = $(this),\n            data = elem.data('mousestop'),\n            delay = data.delay || $.mousestopDelay;\n\n        elem.bind('mousemove.mousestop', function() {\n            clearTimeout(this.timeout);\n            this.timeout = setTimeout(function() {\n                elem.trigger('mousestop');\n                //elem.unbind('mousemove.mousestop');\n            }, delay);\n        });\n    };\n    \n    function mouseleaveHandler() {\n        var elem = $(this);\n        elem.unbind('mousemove.mousestop');\n        clearTimeout(this.timeout);\n    };\n\n    // shorthand alias\n    $.fn.mousestop = function(data, fn) {\n        if (fn == null) {\n            fn = data;\n            data = null;\n        }\n\n        return arguments.length > 0 ? this.bind('mousestop', data, fn) : this.trigger('mousestop');\n    };\n});\n\ndefine(\"libs/jquery/jquery-mousestop-event\", function(){});\n\n","/* Blob.js\n * A Blob implementation.\n * 2014-07-24\n *\n * By Eli Grey, http://eligrey.com\n * By Devin Samarin, https://github.com/dsamarin\n * License: X11/MIT\n *   See https://github.com/eligrey/Blob.js/blob/master/LICENSE.md\n */\n\n/*global self, unescape */\n/*jslint bitwise: true, regexp: true, confusion: true, es5: true, vars: true, white: true,\n  plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/Blob.js/blob/master/Blob.js */\n\n(function (view) {\n\t\"use strict\";\n\n\tview.URL = view.URL || view.webkitURL;\n\n\tif (view.Blob && view.URL) {\n\t\ttry {\n\t\t\tnew Blob;\n\t\t\treturn;\n\t\t} catch (e) {}\n\t}\n\n\t// Internally we use a BlobBuilder implementation to base Blob off of\n\t// in order to support older browsers that only have BlobBuilder\n\tvar BlobBuilder = view.BlobBuilder || view.WebKitBlobBuilder || view.MozBlobBuilder || (function(view) {\n\t\tvar\n\t\t\t  get_class = function(object) {\n\t\t\t\treturn Object.prototype.toString.call(object).match(/^\\[object\\s(.*)\\]$/)[1];\n\t\t\t}\n\t\t\t, FakeBlobBuilder = function BlobBuilder() {\n\t\t\t\tthis.data = [];\n\t\t\t}\n\t\t\t, FakeBlob = function Blob(data, type, encoding) {\n\t\t\t\tthis.data = data;\n\t\t\t\tthis.size = data.length;\n\t\t\t\tthis.type = type;\n\t\t\t\tthis.encoding = encoding;\n\t\t\t}\n\t\t\t, FBB_proto = FakeBlobBuilder.prototype\n\t\t\t, FB_proto = FakeBlob.prototype\n\t\t\t, FileReaderSync = view.FileReaderSync\n\t\t\t, FileException = function(type) {\n\t\t\t\tthis.code = this[this.name = type];\n\t\t\t}\n\t\t\t, file_ex_codes = (\n\t\t\t\t  \"NOT_FOUND_ERR SECURITY_ERR ABORT_ERR NOT_READABLE_ERR ENCODING_ERR \"\n\t\t\t\t+ \"NO_MODIFICATION_ALLOWED_ERR INVALID_STATE_ERR SYNTAX_ERR\"\n\t\t\t).split(\" \")\n\t\t\t, file_ex_code = file_ex_codes.length\n\t\t\t, real_URL = view.URL || view.webkitURL || view\n\t\t\t, real_create_object_URL = real_URL.createObjectURL\n\t\t\t, real_revoke_object_URL = real_URL.revokeObjectURL\n\t\t\t, URL = real_URL\n\t\t\t, btoa = view.btoa\n\t\t\t, atob = view.atob\n\n\t\t\t, ArrayBuffer = view.ArrayBuffer\n\t\t\t, Uint8Array = view.Uint8Array\n\n\t\t\t, origin = /^[\\w-]+:\\/*\\[?[\\w\\.:-]+\\]?(?::[0-9]+)?/\n\t\t;\n\t\tFakeBlob.fake = FB_proto.fake = true;\n\t\twhile (file_ex_code--) {\n\t\t\tFileException.prototype[file_ex_codes[file_ex_code]] = file_ex_code + 1;\n\t\t}\n\t\t// Polyfill URL\n\t\tif (!real_URL.createObjectURL) {\n\t\t\tURL = view.URL = function(uri) {\n\t\t\t\tvar\n\t\t\t\t\t  uri_info = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t\t\t\t, uri_origin\n\t\t\t\t;\n\t\t\t\turi_info.href = uri;\n\t\t\t\tif (!(\"origin\" in uri_info)) {\n\t\t\t\t\tif (uri_info.protocol.toLowerCase() === \"data:\") {\n\t\t\t\t\t\turi_info.origin = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\turi_origin = uri.match(origin);\n\t\t\t\t\t\turi_info.origin = uri_origin && uri_origin[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn uri_info;\n\t\t\t};\n\t\t}\n\t\tURL.createObjectURL = function(blob) {\n\t\t\tvar\n\t\t\t\t  type = blob.type\n\t\t\t\t, data_URI_header\n\t\t\t;\n\t\t\tif (type === null) {\n\t\t\t\ttype = \"application/octet-stream\";\n\t\t\t}\n\t\t\tif (blob instanceof FakeBlob) {\n\t\t\t\tdata_URI_header = \"data:\" + type;\n\t\t\t\tif (blob.encoding === \"base64\") {\n\t\t\t\t\treturn data_URI_header + \";base64,\" + blob.data;\n\t\t\t\t} else if (blob.encoding === \"URI\") {\n\t\t\t\t\treturn data_URI_header + \",\" + decodeURIComponent(blob.data);\n\t\t\t\t} if (btoa) {\n\t\t\t\t\treturn data_URI_header + \";base64,\" + btoa(blob.data);\n\t\t\t\t} else {\n\t\t\t\t\treturn data_URI_header + \",\" + encodeURIComponent(blob.data);\n\t\t\t\t}\n\t\t\t} else if (real_create_object_URL) {\n\t\t\t\treturn real_create_object_URL.call(real_URL, blob);\n\t\t\t}\n\t\t};\n\t\tURL.revokeObjectURL = function(object_URL) {\n\t\t\tif (object_URL.substring(0, 5) !== \"data:\" && real_revoke_object_URL) {\n\t\t\t\treal_revoke_object_URL.call(real_URL, object_URL);\n\t\t\t}\n\t\t};\n\t\tFBB_proto.append = function(data/*, endings*/) {\n\t\t\tvar bb = this.data;\n\t\t\t// decode data to a binary string\n\t\t\tif (Uint8Array && (data instanceof ArrayBuffer || data instanceof Uint8Array)) {\n\t\t\t\tvar\n\t\t\t\t\t  str = \"\"\n\t\t\t\t\t, buf = new Uint8Array(data)\n\t\t\t\t\t, i = 0\n\t\t\t\t\t, buf_len = buf.length\n\t\t\t\t;\n\t\t\t\tfor (; i < buf_len; i++) {\n\t\t\t\t\tstr += String.fromCharCode(buf[i]);\n\t\t\t\t}\n\t\t\t\tbb.push(str);\n\t\t\t} else if (get_class(data) === \"Blob\" || get_class(data) === \"File\") {\n\t\t\t\tif (FileReaderSync) {\n\t\t\t\t\tvar fr = new FileReaderSync;\n\t\t\t\t\tbb.push(fr.readAsBinaryString(data));\n\t\t\t\t} else {\n\t\t\t\t\t// async FileReader won't work as BlobBuilder is sync\n\t\t\t\t\tthrow new FileException(\"NOT_READABLE_ERR\");\n\t\t\t\t}\n\t\t\t} else if (data instanceof FakeBlob) {\n\t\t\t\tif (data.encoding === \"base64\" && atob) {\n\t\t\t\t\tbb.push(atob(data.data));\n\t\t\t\t} else if (data.encoding === \"URI\") {\n\t\t\t\t\tbb.push(decodeURIComponent(data.data));\n\t\t\t\t} else if (data.encoding === \"raw\") {\n\t\t\t\t\tbb.push(data.data);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (typeof data !== \"string\") {\n\t\t\t\t\tdata += \"\"; // convert unsupported types to strings\n\t\t\t\t}\n\t\t\t\t// decode UTF-16 to binary string\n\t\t\t\tbb.push(unescape(encodeURIComponent(data)));\n\t\t\t}\n\t\t};\n\t\tFBB_proto.getBlob = function(type) {\n\t\t\tif (!arguments.length) {\n\t\t\t\ttype = null;\n\t\t\t}\n\t\t\treturn new FakeBlob(this.data.join(\"\"), type, \"raw\");\n\t\t};\n\t\tFBB_proto.toString = function() {\n\t\t\treturn \"[object BlobBuilder]\";\n\t\t};\n\t\tFB_proto.slice = function(start, end, type) {\n\t\t\tvar args = arguments.length;\n\t\t\tif (args < 3) {\n\t\t\t\ttype = null;\n\t\t\t}\n\t\t\treturn new FakeBlob(\n\t\t\t\t  this.data.slice(start, args > 1 ? end : this.data.length)\n\t\t\t\t, type\n\t\t\t\t, this.encoding\n\t\t\t);\n\t\t};\n\t\tFB_proto.toString = function() {\n\t\t\treturn \"[object Blob]\";\n\t\t};\n\t\tFB_proto.close = function() {\n\t\t\tthis.size = 0;\n\t\t\tdelete this.data;\n\t\t};\n\t\treturn FakeBlobBuilder;\n\t}(view));\n\n\tview.Blob = function(blobParts, options) {\n\t\tvar type = options ? (options.type || \"\") : \"\";\n\t\tvar builder = new BlobBuilder();\n\t\tif (blobParts) {\n\t\t\tfor (var i = 0, len = blobParts.length; i < len; i++) {\n\t\t\t\tbuilder.append(blobParts[i]);\n\t\t\t}\n\t\t}\n\t\treturn builder.getBlob(type);\n\t};\n}(typeof self !== \"undefined\" && self || typeof window !== \"undefined\" && window || this.content || this));\n\ndefine(\"libs/jquery/Blob\", function(){});\n\n","/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\nvar saveAs=saveAs||\"undefined\"!==typeof navigator&&navigator.msSaveOrOpenBlob&&navigator.msSaveOrOpenBlob.bind(navigator)||function(a){\"use strict\";if(\"undefined\"===typeof navigator||!/MSIE [1-9]\\./.test(navigator.userAgent)){var k=a.document,n=k.createElementNS(\"http://www.w3.org/1999/xhtml\",\"a\"),w=\"download\"in n,x=function(c){var e=k.createEvent(\"MouseEvents\");e.initMouseEvent(\"click\",!0,!1,a,0,0,0,0,0,!1,!1,!1,!1,0,null);c.dispatchEvent(e)},q=a.webkitRequestFileSystem,u=a.requestFileSystem||q||a.mozRequestFileSystem,\ny=function(c){(a.setImmediate||a.setTimeout)(function(){throw c;},0)},r=0,s=function(c){var e=function(){\"string\"===typeof c?(a.URL||a.webkitURL||a).revokeObjectURL(c):c.remove()};a.chrome?e():setTimeout(e,10)},t=function(c,a,d){a=[].concat(a);for(var b=a.length;b--;){var l=c[\"on\"+a[b]];if(\"function\"===typeof l)try{l.call(c,d||c)}catch(f){y(f)}}},m=function(c,e){var d=this,b=c.type,l=!1,f,p,k=function(){t(d,[\"writestart\",\"progress\",\"write\",\"writeend\"])},g=function(){if(l||!f)f=(a.URL||a.webkitURL||\na).createObjectURL(c);p?p.location.href=f:void 0==a.open(f,\"_blank\")&&\"undefined\"!==typeof safari&&(a.location.href=f);d.readyState=d.DONE;k();s(f)},h=function(a){return function(){if(d.readyState!==d.DONE)return a.apply(this,arguments)}},m={create:!0,exclusive:!1},v;d.readyState=d.INIT;e||(e=\"download\");if(w)f=(a.URL||a.webkitURL||a).createObjectURL(c),n.href=f,n.download=e,x(n),d.readyState=d.DONE,k(),s(f);else{a.chrome&&b&&\"application/octet-stream\"!==b&&(v=c.slice||c.webkitSlice,c=v.call(c,0,\nc.size,\"application/octet-stream\"),l=!0);q&&\"download\"!==e&&(e+=\".download\");if(\"application/octet-stream\"===b||q)p=a;u?(r+=c.size,u(a.TEMPORARY,r,h(function(a){a.root.getDirectory(\"saved\",m,h(function(a){var b=function(){a.getFile(e,m,h(function(a){a.createWriter(h(function(b){b.onwriteend=function(b){p.location.href=a.toURL();d.readyState=d.DONE;t(d,\"writeend\",b);s(a)};b.onerror=function(){var a=b.error;a.code!==a.ABORT_ERR&&g()};[\"writestart\",\"progress\",\"write\",\"abort\"].forEach(function(a){b[\"on\"+\na]=d[\"on\"+a]});b.write(c);d.abort=function(){b.abort();d.readyState=d.DONE};d.readyState=d.WRITING}),g)}),g)};a.getFile(e,{create:!1},h(function(a){a.remove();b()}),h(function(a){a.code===a.NOT_FOUND_ERR?b():g()}))}),g)}),g)):g()}},b=m.prototype;b.abort=function(){this.readyState=this.DONE;t(this,\"abort\")};b.readyState=b.INIT=0;b.WRITING=1;b.DONE=2;b.error=b.onwritestart=b.onprogress=b.onwrite=b.onabort=b.onerror=b.onwriteend=null;return function(a,b){return new m(a,b)}}}(\"undefined\"!==typeof self&&\nself||\"undefined\"!==typeof window&&window||this.content);\"undefined\"!==typeof module&&null!==module?module.exports=saveAs:\"undefined\"!==typeof define&&null!==define&&null!=define.amd&&define('libs/jquery/FileSaver.min',[],function(){return saveAs});\n","define('widgets/auditList',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    //views\n    'globalmodels/auditCollection',\n    'singleRow/auditRow',\n\n    'globalmodels/contextModel',\n    'libs/jquery/jquery-mousestop-event'\n], function ($, _, Backbone, AuditCollection, AuditRow, contextModel) {\n    var downloadaudit = ['date', 'patient', 'action', 'target', 'device', 'details'];\n    var auditCollection;\n\n    var AuditList = Backbone.View.extend({\n    extraData: {},\n    lastHeight: 0,\n    first: true,\n    initialize: function(arg) {\n        if (typeof arg.extraData !== \"undefined\") {\n            this.extraData = arg.extraData;\n        }\n        auditCollection = new (AuditCollection.extend({extraData: this.extraData}));\n\n\t    this.template = _.template(arg.template); // this must already be loaded\n\t    auditCollection.bind('add', this.addAudit, this);\n\t    auditCollection.bind('reset', this.reset, this);\n\t    this.render('Loading ...');\n        var auditlist = $('.audit-scroll', this.$el);\n\n        $(auditlist).on('show', function(){\n            //make sure that audit list is correct when loaded (target user's audits vs. current user audits)\n            auditCollection.reset();\n            auditCollection.initialize();\n        });\n\n\t},\n    events: {\n        'scroll .audit-scroll': 'handleScroll',\n\t'click .download-user-audits': 'downloadAudits'\n    },\n        showhide: function(){\n            if(contextModel.get('page') == 'auditlist'){\n                this.$el.show();\n            }else{\n                this.$el.hide();\n            }\n        },\n    downloadAudits: function() {\n        that = this;\n        var argData = {};\n        $.extend(argData, contextModel.toParams(), this.extraData);\n        $.ajax({\n            url: \"/audits\",\n            data: $.param(argData),\n            success: function (data) {\n\t\trequire(['libs/jquery/Blob', 'libs/jquery/FileSaver.min'], function(blob, saveAs) {\n\t\t    \n                    var csvContent = [downloadaudit.join(',')];\n                    _.each(data, function (row) {\n\t\t\tcsvContent.push('\"' + _.map(downloadaudit, function (v) {\n                            return row[v].replace(/\"/g, '');\n\t\t\t}).join('\",\"') + '\"');\n                    });\n\t\t    var b = new Blob([csvContent.join('\\n')], {type: 'data:text/csv;charset=utf-8'});\n\t\t    saveAs(b, 'audits.csv');\n\t\t});\n            },\n            error : function () {\n            }\n        });\n    },\n\n\trender: function(empty_text) {\n\t    this.$el.html(this.template(this));\n            var auditlist = $('.audit-scroll', this.$el);\n            auditlist.scroll(function(e) {\n                if(auditlist.scrollTop() + auditlist.innerHeight() + 100 >= auditlist[0].scrollHeight) {\n                    auditCollection.more();\n                }\n                return false;\n            });\n\n\t    this.addAll(empty_text);\n\t},\n\taddAll: function(empty_text) {\n\t    if (!empty_text || typeof(empty_text) != 'string') {\n\t\tempty_text = 'None available';\n\t    }\n\t    this.reset();\n\t    var nonempty = false;\n\t    if (auditCollection.length) {\n\t\tfor(audit in auditCollection.models) {\n\t\t\tthis.addAudit(auditCollection.models[audit]);\n\t\t\tnonempty = true;\n\t\t}\n\t    }\n\t    if(!nonempty) {\n            $('.audittable > tbody', this.$el).html(\"<tr><td colspan=\\\"5\\\">\"+empty_text+\"</td></tr>\");\n            $('.audittable > thead', this.$el).hide();\n            $('.audit-control-row', this.$el).hide();\n            this.$el.show();\n\t    }\n        else {\n            $('.audittable > thead', this.$el).show();\n            $('.audit-control-row', this.$el).show();\n            this.$el.show();\n            var auditlist = $('.audit-scroll', this.$el);\n            setTimeout(function () {\n                var auditHeight = auditlist.innerHeight();\n                if (this.lastHeight != auditHeight && auditHeight < parseInt(auditlist.css('max-height'))) {\n                    this.lastHeight = auditHeight;\n                    auditCollection.more();\n                }\n            }, 500);\n        }\n\t},\n\taddAudit: function(audit) {\n\t    var auditrow = new AuditRow({model: audit});\n\t    $('.audittable', this.$el).append(auditrow.render().el);\n\t    this.$el.show();\n        //auditrow.events();\n\t},\t\n\treset: function() {\n\t    $('.audittable > tbody', this.$el).empty();\n            //this.render()\n\t    this.$el.hide();\n\t},\n    });\n\n    return AuditList;\n\n});\n\n","\ndefine('text!../templates/auditScroll.html',[],function () { return '\\n<div class = \"widget-column\">\\n    <div class=\"auditlist audit-scroll\" style=\"clear:both;\">\\n        <div class=\"auditaccordion\">\\n            <table class=\"table table-condensed table-hover audittable\">\\n            <col width=\"20%\">\\n            <col width=\"20%\">\\n            <col width=\"20%\">\\n            <col width=\"20%\">\\n            <col width=\"20%\">\\n            <thead >\\n                <tr>\\n                    <th align=\"left\">Date</th>\\n                    <th align=\"left\">Patient</th>\\n                    <th align=\"left\">Action</th>\\n                    <th align=\"left\">User</th>\\n                    <th align=\"left\">Device</th>\\n                    <th align=\"left\">Details</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n            </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    <div class=\"audit-control-row\">\\n        <!--[if gte IE 10]><!-->\\n            <button class=\"btn btn-default download-user-audits\">Download Audits</button>\\n        <!--<![endif]-->\\n    </div>\\n</div>\\n';});\n\n","/***************************************************************************\n * Copyright (c) 2014 - Maven Medical\n * AUTHOR: 'Carlos Brenneisen'\n * DESCRIPTION: This Javascript file handles a hierarchy of users view\n *              so we can handle events easier.\n * LAST MODIFIED FOR JIRA ISSUE:\n **************************************************************************/\ndefine('singleRow/userRow',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    //Template\n    'text!templates/userRow.html',\n\n    'globalmodels/contextModel',\n\n    'widgets/auditList',\n    'text!templates/auditScroll.html',\n    'libs/jquery/jquery-mousestop-event',\n    'bootstrapswitch',\n\n], function ($, _, Backbone, userRowTemplate, contextModel, AuditList, AuditTemplate) {\n\n    var UserRow = Backbone.View.extend({\n        tagName: \"tr class='user-row'\",\n        template: _.template(userRowTemplate),\n        render: function(){\n            $(this.el).html(this.template($.extend({viewid:this.cid},this.model.toJSON())));\n            return this;\n        },\n        updateNotificationPreferences: function(primary, secondary){\n            $.ajax({\n                url: \"/update_user_pref\",\n                data: $.param(contextModel.toParams()) + \"&target_user=\" + this.model.get(\"user_name\") +\n                      \"&target_customer=\" + this.model.get(\"customer_id\") +\n                      \"&notify1=\"+primary+\"&notify2=\"+secondary,\n                success: function () {\n                    $(\"#save-user-message\").html(\"User Updated!\");\n                },\n                error: function (){\n                    alert(\"Could not save user information.\");\n                    $(\"#save-user-message\").html(\"Could not save user information.\");\n                }\n            });\n        },\n        events : function() {\n            var that = this;\n            var curTitle = null;\n            var overlist = false;\n            var auditElement = \"#mouse-target\";\n            var notifications = {'desktop': 'Desktop', 'mobile': 'Mobile', 'ehrinbox': 'EHR Inbox', 'off': 'Off'};\n            var currentPrimary = this.model.get(\"notify_primary\").toLowerCase();\n            var currentSecondary = this.model.get(\"notify_secondary\").toLowerCase();\n\n            $(document).ready(function() {\n                $(\".toggle-status\", that.$el).bootstrapSwitch();\n                $(that.el).find(\".reset-user-password\").click(function(){\n                    $(\"#save-user-message\").html(\"&nbsp;\");\n                    $.ajax({\n                        url: \"/reset_password\",\n                        data: $.param(contextModel.toParams()) + \"&target_user=\" + that.model.get(\"user_name\") +\n                            \"&target_customer=\" + that.model.get(\"customer_id\") + \"&ehr_state=\" + that.model.get(\"ehr_state\"),\n                        success: function (data) {\n                            if (data!=''){\n                                alert(data);\n                            }\n                            $(\"#save-user-message\").html(\"Password Reset!\");\n                        }\n                    });\n                });\n\n                $('.toggle-status', that.$el).on('switchChange.bootstrapSwitch', function(event, state) {\n                    var status = \"disabled\";\n                    if (state) status = \"active\";\n                    $.ajax({\n                        url: \"/update_user\",\n                        data: $.param(contextModel.toParams()) + \"&target_user=\" + that.model.get(\"user_name\") +\n                            \"&target_customer=\" + that.model.get(\"customer_id\")+ \"&state=\" + status,\n                        success: function (data) {\n                            if (data!='TRUE'){\n                                alert(data);\n                            }\n                            $(\"#save-user-message\").html(\"User Updated!\");\n                        },\n                        error: function () {\n                            alert(\"Sorry, an error occurred. Please try again later\");\n                            $(event.target).bootstrapSwitch('toggleState', true); //reset switch to its prior state\n                            $(\"#save-user-message\").html(\"Sorry, an error occurred. Please try again later\");\n                        }\n                    });\n                });\n/*\n                $(that.el).find(\".btn-status\").click(function(event){\n                    if ($(event.target).attr(\"value\")=='deactivate'){\n                        var state = \"disabled\";\n                        $(event.target).attr(\"value\", \"activate\");\n                        $(event.target).find(\".btn-hover\").html(\"Activate\");\n                        $(event.target).find(\".btn-label\").html(\"Inactive\");\n                    }\n                    else{\n                        var state = \"active\";\n                        $(event.target).attr(\"value\", \"deactivate\");\n                        $(event.target).find(\".btn-hover\").html(\"DeActivate\");\n                        $(event.target).find(\".btn-label\").html(\"Active\");\n                    }\n                    $.ajax({\n                        url: \"/update_user\",\n                        data: $.param(contextModel.toParams()) + \"&target_user=\" + that.model.get(\"user_name\") +\n                            \"&target_customer=\" + that.model.get(\"customer_id\")+ \"&state=\" + state,\n                        success: function () {\n                            $(\"#save-user-message\").html(\"User Updated!\");\n                        },\n                        error: function () {\n                            $(\"#save-user-message\").html(\"Sorry, an error occurred. Please try again later\");\n                        }\n                    });\n                });\n*/\n                $(\".btn-msg-primary\", that.$el).click(function(event){\n                    currentPrimary = $(event.target).attr(\"value\"); //update to whatever was selected\n                    $(\".msg-primary-label\", that.$el).html(notifications[currentPrimary]); //update drop-down label\n                    if (currentPrimary == 'off') {\n                        //secondary notifications are disabled if primary notifications are off\n                        currentSecondary = 'off';\n                        $(\".msg-secondary-label\", that.$el).html(\"Off\");\n                        $(\".msg-secondary-dropdown\").prop(\"disabled\", true);\n                    }\n                    else {\n                        $(\".msg-secondary-dropdown\").prop(\"disabled\", false);\n                        if (currentPrimary == currentSecondary){\n                            //secondary notifications cannot be the same as primary notifications\n                            currentSecondary = 'off';\n                            $(\".msg-secondary-label\", that.$el).html(\"Off\");\n                        }\n                    }\n                    that.updateNotificationPreferences(currentPrimary, currentSecondary);\n                });\n\n                $(\".btn-msg-secondary\", that.$el).click(function(event){\n                    currentSecondary = $(event.target).attr(\"value\"); //update to whatever was selected\n                    $(\".msg-secondary-label\", that.$el).html(notifications[currentSecondary]); //update drop-down label\n                    that.updateNotificationPreferences(currentPrimary, currentSecondary);\n                });\n\n                $(that.el).unbind('click');\n                var mousepos;\n                $(that.el).find(\".user-state\").click(function(){$(\"#save-user-message\").empty();});\n\n\t\t        $(that.el).find(\".audit-hover\").mouseover(function() {curTitle = \"audit\";});\n                $(that.el).find(\".audit-hover\").mousestop(500, function(e) {\n                    if (curTitle) {\n                        //mousepos=e;\n                        $(auditElement).hide();\n                        var extraData = {target_customer: that.model.get(\"customer_id\"), target_user: that.model.get(\"user_name\")};\n                        auditList = new AuditList({el: $(auditElement), template: AuditTemplate, extraData: extraData});\n                        auditList.$el[0].style.left = (mousepos.pageX + 10) + 'px';\n                        auditList.$el[0].style.top = (mousepos.pageY - 50) + 'px';\n                    }\n                });\n                $(that.el).find(\".audit-hover\").mouseleave(function() {\n                    curTitle= null;\n                    setTimeout(maybeHide,500);\n                });\n\t            $(that.el).find(\".audit-hover\").mousemove(function(e) {mousepos=e;});\n                $(auditElement).mouseover(function() {\n                    overlist = true;\n                });\n                $(auditElement).mouseleave(function() {\n                    overlist=false; setTimeout(maybeHide,500);\n                });\n\n                maybeHide = function() {\n                    if (curTitle == null && !overlist) {\n                        $(auditElement).hide();\n                        overlist = false;\n                    }\n                }\n            });\n       }\n\n    });\n\n    return UserRow;\n\n});\n\n","\ndefine('text!templates/userScroll.html',[],function () { return '<div class = \"widget-column col-sm-12\" style=\"clear: both;\">\\n\\n<div class=\"row userlist\" style=\"margin: auto; width: 100%; \">\\n    <div class=\"widget-header\">\\n    <span class=\"headings title\" style=\"float:left;\">Users</span>\\n      <button type=\"button\" class=\"btn btn-default btn-xs refreshButton\" data-dismiss=\"modal\" style=\"margin-left:10px; color: #46ECBD; font-size: 10px;\">\\n        <span class=\"glyphicon glyphicon-refresh\"></span>\\n      </button>\\n    </div>\\n    <table class=\"table-condensed table-hover usertable-header\" style=\"width:100%; padding: 0; table-layout: fixed;\">\\n        <col width=\"25%\">\\n        <col width=\"25%\">\\n        <col width=\"14%\">\\n        <col width=\"*\">\\n        <col width=\"12%\">\\n        <col width=\"14%\">\\n        <thead>\\n            <tr>\\n                <th align=\"left\">Display Name</th>\\n                <!--<th align=\"left\">Profession</th> -->\\n                <th align=\"left\">Last Login</th>\\n                <th align=\"left\">Status</th>\\n                <th align=\"left\">&nbsp;</th>\\n                <th align=\"left\">Notifications</th>\\n                <th align=\"left\"></th>\\n            </tr>\\n        </thead>\\n    </table>\\n    <div class=\"panel-group useraccordion\" style=\"overflow-y:auto; max-height:500px; width:100%\">\\n        <table class=\"table table-condensed table-hover usertable\" style=\"width:100%; padding: 0; table-layout: fixed;\">\\n            <col width=\"25%\">\\n            <col width=\"25%\">\\n            <col width=\"14%\">\\n            <col width=\"*\">\\n            <col width=\"12%\">\\n            <col width=\"14%\">\\n            <tbody>\\n            </tbody>\\n        </table>\\n    </div>\\n    <span id=\"save-user-message\"></span>\\n</div>\\n\\n</div>';});\n\n","define('widgets/userList',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    //views\n    'globalmodels/userCollection',\n    'singleRow/userRow',\n\n    'globalmodels/contextModel',\n    'text!templates/userScroll.html',\n\n], function ($, _, Backbone, UserCollection, UserRow, contextModel, UserListTemplate) {\n\n    var userCollection;\n\n    var UserList = Backbone.View.extend({\n    extraData: {},\n\tinitialize: function(arg) {\n        if (typeof arg.template !== \"undefined\") {\n            this.template = _.template(arg.template); // this must already be loaded\n        }\n        else {\n            this.template = _.template(UserListTemplate);\n        }\n        if (typeof arg.extraData !== \"undefined\") {\n            this.extraData = arg.extraData;\n        }\n        //initialize user collection with all required data\n        userCollection = new (UserCollection.extend({extraData: this.extraData}));\n\n        this.$el.html(this.template({height:$(window).height()-50+'px'}));\n\t    userCollection.bind('add', this.addUser, this);\n\t    userCollection.bind('reset', this.reset, this);\n\t    userCollection.bind('sync', this.addAll, this);\n\n\t    this.render();\n        var userlist = $('.useraccordion', this.$el);\n\t    userlist.scrollTop(0);\n\t    userlist.scroll(function() {\n\t\tif(userlist.scrollTop() + userlist.innerHeight() + 100 >= userlist[0].scrollHeight) {\n\t\t    userCollection.more();\n\t\t}\n\t    });\n\n        $(\".refreshButton\", this.$el).click(function(event){\n            $( '.usertable > tbody', this.$el).empty();\n            userCollection.refresh();\n        });\n        $(\".refreshButton\", this.$el).hover(function(event) {\n            $(event.target).attr('title', \"Last Refresh: \" + userCollection.getLastRefresh());\n        });\n\n\t},\n    events: {\n\t    'click #save-user-changes': 'saveChanges',\n    },\n    saveChanges: function() {\n    /*    that = this;\n        $(\".user-row\").each(function () {\n            var user_id  = $(this).find(\".user-val-id\").html();\n            var state=\"disabled\";\n            if($(this).find('.user-state').is(':checked'))\n            {\n                    state = \"active\";\n            }\n            $.ajax({\n                url: \"/update_user\",\n                data: $.param(contextModel.toParams()) + \"&target_user=\" + user_id +\n                                                         \"&state=\" + state,\n                success: function () {\n                    $(\"#save-user-message\").html(\"Changes Saved!\");\n                },\n                error : function () {\n                     $(\"#save-user-message\").html(\"Sorry, an error occurred. Please try again later\");\n                }\n            });\n        });*/\n    },\n\trender: function() {\n\t    this.$el.html(this.template(this));\n\t    this.addAll();\n        $(window).resize(function() {\n            $(\".usertable-header\").width($('.usertable', this.$el).width());\n        });\n\t},\n\taddAll: function() {\n\t    this.reset();\n\t    var nonempty = false;\n\t    if (userCollection.length) {\n            for(user in userCollection.models) {\n                this.addUser(userCollection.models[user]);\n                nonempty = true;\n            }\n\t    }\n        userCollection.lastRefresh = new Date();\n\n        var userlist = $('.useraccordion', this.$el);\n        var usertable = $('.usertable', this.$el);\n        $(document).ready(function(){\n            setTimeout(function() {\n                $(\".usertable-header\").width(usertable.width());\n            },200);\n        });\n\n        setTimeout(function() {\n            var newWidth = userlist.innerWidth();\n            var userHeight = userlist.innerHeight();\n            if (userHeight > 0 && userHeight < parseInt(userlist.css('max-height'))) {\n                userCollection.more();\n            }\n        },500);\n\t},\n\taddUser: function(user) {\n\t    var userrow = new UserRow({model: user});\n\t    $('.usertable').append(userrow.render().el);\n\t    this.$el.show();\n        userrow.events();\n\t},\t\n\treset: function() {\n\t    $('.usertable > tbody', this.$el).empty();\n\t},\n    refresh: function() {\n        this.reset();\n    }\n    });\n\n    return UserList;\n});\n\n","/**\n * Created by Asmaa Aljuhani on 3/11/14.\n */\n\ndefine('widgets/encounterSummary',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/summaryModel', // current patient (if any)\n    'globalmodels/patientModel',\n    'globalmodels/contextModel',\n], function ($, _, Backbone, summaryModel, patientModel, contextModel) {\n\n    var Summary = Backbone.View.extend({\n        initialize: function (arg) {\n            this.template = _.template(arg.template); // this must already be loaded\n            this.update(summaryModel);\n            summaryModel.on('change', this.update, this);\n            contextModel.on('change:page change:patients change:encounter change:startdate change:enddate change:enc_date',\n                this.update, this);\n            patientModel.on('change:name', this.update, this);\n\n        },\n        update: function (summary) {\n            var title = 'your patients';\n            var date = \"Through today\";\n            if (contextModel.get('encounter')) {\n                title = 'encounter';//including ' + date;\n                date = \"Encounter starting \" + contextModel.get('enc_date');\n                //date = contextModel.get('startdate') + \" to \" + contextModel.get('enddate');\n            } else {\n                if (patientModel.get('name')) {\n                    title = patientModel.get('name');\n                }\n                if (contextModel.get('startdate')) {\n                    if (contextModel.get('enddate')) {\n                        date = contextModel.get('startdate') + \" to \" + contextModel.get('enddate');\n                    } else {\n                        date = \"Since \" + contextModel.get('startdate');\n                    }\n                }\n            }\n            $('#datepicker-input').val(date);\n\n            this.$el.html(this.template($.extend({}, summaryModel.attributes, {'title': title, 'encounterdate': date, 'page': contextModel.get('page')})));\n        }\n    });\n    return Summary;\n})\n;\n\n","\ndefine('text!templates/orderRow.html',[],function () { return '<div class = \"widget-column col-sm-12\">\\n    <div class=\"panel panel-default\" style=\"margin-bottom:4px\">\\n      <div>\\n        <a data-toggle=\"collapse\" data-parent=\".orderaccordion\" data-target=\"#collapse<%= viewid %>\" class=\"orderlink\" id=\"order<%= viewid %>\">\\n          <h4 class=\"panel-title\">\\n            <i class=\"glyphicon glyphicon-chevron-right color-<%= ordertype.toLowerCase() %>\">\\n          <img title=\"<%= ordertype %>\" src=\"images/<%= ordertype.toLowerCase() %>-55x55px.jpg\" alt=\"<%= ordertype %>\" height=\"40\" width=\"40\">\\n          </i>\\n              <span class=\"headings\"><%= name %></span>\\n              <span class=\"badge\">$<%= cost %></span>\\n          </h4>\\n        </a>\\n      </div>\\n      <div id=\"collapse<%= viewid %>\" class=\"panel-collapse collapse\">\\n        <div class=\"panel-body\">\\n          <div class=\"row\">\\n            <div class=\"col-sm-6\">\\n              <span class=\"blue\">You Ordered:</span>\\n            </div>\\n            <div class=\"col-sm-6\">\\n              <%= name %> ($<%= cost %>) on <span style=\"white-space:nowrap\"><%= date.substr(0,19) %></span>\\n            </div>\\n          </div>\\n          <div class=\"row orderalerts\" ></div>\\n        </div>\\n      </div>\\n    </div>\\n\\n</div>\\n';});\n\n","\ndefine('text!templates/alertRow.html',[],function () { return '<div class = \"widget-column col-sm-12\">\\n<div class=\"row\">\\n  <div class=\"col-sm-12\">\\n    <div class=\"alert-type\" style=\"display:inline-block;\">\\n      <img src=\"images/<%= alerttype.toLowerCase().replace(\\' \\',\\'-\\') %>-29x37.png\"><br>\\n      <span class=\"headings title\" style=\"float:left;\"><%= alerttype %></span>\\n\\t  <div class=\"btn-group\" style=\"float:right;\">\\n        <ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\" style=\\'float:right;\\'>\\n          <li><a class=\"dislike_info\" value=\"incorrect\">Disagree</a></li>\\n\\t      <li><a class=\"dislike_info\" value=\"irrelevant\">Not Applicable</a></li>\\n          <li><a class=\"dislike_info\" value=\"notuseful\">Not Useful</a></li>\\n          <li><a class=\"dislike_info dislike_other\" value=\"other\">Other...</a></li>\\n          <li style=\"display:none\" class=\"dislike_text\"><textarea class=\\'dislike_text_form\\' rows=\"2\" cols=\"25\"></textarea></li>\\n\\t    </ul>\\n\\n        <button type=\"button\" class=\"btn btn-default btn-sm dislike\" data-dismiss=\"modal\" data-toggle=\"dropdown\" style=\"font-size: 8px;\">\\n            <span class=\"glyphicon glyphicon glyphicon-thumbs-down\">\\n                <%= ((dislikes+likes==0) ? \"N/A\" : ((dislikes/(likes+dislikes))*100).toFixed(0)+\"%\") %></span>\\n\\t        <span class=\"sr-only\">Toggle Dropdown</span>\\n        </button>\\n\\n      </div>\\n\\n      <button type=\"button\" class=\"btn btn-default btn-sm like\" data-dismiss=\"modal\" style=\"font-size: 8px; float:right;\">\\n        <span class=\"glyphicon glyphicon glyphicon-thumbs-up\">\\n                <%= ((dislikes+likes==0) ? \"N/A\" : ((likes/(likes+dislikes))*100).toFixed(0)+\"%\") %></span>\\n      </button>\\n    </div>\\n    <p>\\n      <b><%= name %></b>\\n      <%= html %> \\n      <% if(ruleid) { %>\\n      <span>\\n\\t<a style=\\'white-space:nowrap\\' href=\\'javascript:showEvidence(\"<%= ruleid %>\")\\'>\\n\\t  Show Evidence >\\n\\t  </a>\\n      </span>\\n      <% } %>\\n    </p>\\n    <!--<span class=\"headings\">Impact:</span>\\n    <span class=\"impact\">$16</span>-->\\n    <hr>\\n  </div>\\n</div>\\n</div>\\n';});\n\n","/***************************************************************************\n * Copyright (c) 2014 - Maven Medical\n * AUTHOR: 'Asmaa Aljuhani'\n * DESCRIPTION: This Javascript file handle a hierarchy of alerts view\n *              so we can handle events easier.\n * LAST MODIFIED FOR JIRA ISSUE: MAV-97\n **************************************************************************/\ndefine('singleRow/alertRow',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    'widgets/evidence',\n\n    //Template\n    'text!templates/alertRow.html',\n\n    'globalmodels/contextModel'\n\n], function ($, _, Backbone, Evidence, alertRowTemplate, contextModel) {\n\n    showEvidence = function(evi) {\n\tvar evidence = new Evidence({'evi':evi});\n\t$('#evidence-' + evi).modal();\n    };\n\n\n    var AlertRow = Backbone.View.extend({\n        tagName: 'div',\n        template: _.template(alertRowTemplate),\n        events:{\n            //'click .panel-heading': 'handleClick',\n            'click .like': 'like',\n            'click .dislike': 'dislike',\n            'click .dislike_info': 'critique',\n            'click .dislike_text': 'clickText',\n            'keyup .dislike_text':'doentercomment',\n        },\n        render: function(){\n            $(this.el).html(this.template(this.model.toJSON()));\n            return this;\n        },\n        like: function(){\n            //user clicks 'like'\n            this.rate(\"like\");\n        },\n        dislike: function(){\n            //user clicks 'dislike'\n            $(this.el).find(\".dislike_text\").hide();\n            this.rate(\"dislike\");\n        },\n        rate: function(like){\n            //sends like/dislike to backend\n            that = this;\n            $.ajax({\n                url: \"/rate_alert\",\n                data: $.param(contextModel.toParams()) + \"&alert_id=\" + that.model.get(\"id\") +\n                                                         \"&category=\" + that.model.get(\"alerttype\") +\n                                                         \"&rule_id=\" + that.model.get(\"ruleid\") +\n                                                         \"&action=\"+like,\n                success: function (data) {\n                    console.log(data);\n                }\n            });\n        },\n        critique: function(event){\n            //user gave additional info for 'dislike'\n            that = this;\n            var reason = $(event.target).attr(\"value\");\n            if (reason == \"other\")            {\n                event.stopPropagation();\n                if (!$(this.el).find(\".dislike_text\").is(\":visible\")) {\n                    $(this.el).find(\".dislike_text\").show();\n                }\n                else{\n                    $(this.el).find(\".dislike_text\").hide();\n                }\n            }\n            else\n            {\n                $.ajax({\n                    url: \"/critique_alert\",\n                    data: $.param(contextModel.toParams()) + \"&alert_id=\" + that.model.get(\"id\")+ \"&rule_id=\" + that.model.get(\"ruleid\") +\n                                                             \"&category=\" +that.model.get(\"alerttype\") + \"&action_comment=\"+reason,\n                    success: function (data) {\n                        console.log(data);\n                    }\n                });\n            }\n        },\n        clickText: function(event){\n            event.stopPropagation();\n        },\n        doentercomment: function(event){\n\t    if(event.keyCode == 13){\n            event.preventDefault();\n\t\t    this.addComment();\n\t        }\n\t    },\n        addComment: function(){\n            var comment = $(this.el).find(\".dislike_text_form\").val();\n            $(this.el).find(\".dislike_text_form\").val(\"\");\n            $(this.el).find(\".dislike_text\").hide();\n            $(this.el).find(\".dropdown-menu\").trigger('click');\n            console.log(\"Comment: \" + comment);\n             $.ajax({\n                url: \"/critique_alert\",\n                data: $.param(contextModel.toParams()) + \"&rule_id=\" + that.model.get(\"ruleid\") + \"&category=\" +that.model.get(\"alerttype\") + \"&action_comment=\"+comment,\n                success: function (data) {\n                    console.log(data);\n                }\n            });\n        },\n        clickEvidenceSpan:function(){\n            jQuery.noConflict();\n\t    this.evidence = new Evidence({'evi': this.model.get('ruleid')});\n        },\n        //handleClick: function(){\n\t//\tvar id = this.model.get('id');\n\t//\t$('#collapse'+this.model.get('patient')+'-'+id).toggleClass(\"in\");\n        //}\n    });\n\n    return AlertRow;\n\n});\n\n","/***************************************************************************\n * Copyright (c) 2014 - Maven Medical\n * AUTHOR: 'Asmaa Aljuhani'\n * DESCRIPTION: This Javascript file handle a hierarchy of orders view\n *              so we can handle events easier.\n * LAST MODIFIED FOR JIRA ISSUE: MAV-97\n **************************************************************************/\ndefine('singleRow/orderRow',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    //Template\n    'text!templates/orderRow.html',\n\n    'globalmodels/contextModel',\n    'singleRow/alertRow',\n\n], function ($, _, Backbone, orderRowTemplate, contextModel, AlertRow) {\n\n    var OrderRow = Backbone.View.extend({\n        tagName: 'div',\n        template: _.template(orderRowTemplate),\n        render: function(){\n            $(this.el).html(this.template($.extend({viewid:this.cid},this.model.toJSON())));\n            return this;\n        },\n        events : function() {\n          //Load alerts related to this order whenever the detail portion is expanded\n            var that = this;\n            $(document).ready(function() {\n                $(that.el).unbind('click');\n                $(that.el).on('click', function (e) {\n\n\n                    //only grab alert data if request has not already been made\n                    if ($(that.el).find(\".orderalerts\").is(':empty')) {\n                        $.ajax({\n                            url: \"/alerts\",\n                            data: $.param(contextModel.toParams()) + \"&order_id=\" + that.model.get(\"id\"),\n                            success: function (data) {\n                                for (var i = 0; i < data.length; i++) {\n                                    var alertrow = new AlertRow({model: data[i]});\n                                    alertrow.render = function () {\n                                        $(this.el).html(this.template(this.model));\n                                        return this;\n                                    };\n                                    //$(that.el).html(this.template(this.model.toJSON()));\n                                    $(that.el).find(\".orderalerts\").append(alertrow.render().el);\n\n                                    // $(that.el).find(\".orderalerts\").append(data[i].alerttype + \": \" + data[i].html);\n                                }\n                            }\n                        });\n                    }\n                });\n            });\n       }\n\n    });\n\n    return OrderRow;\n\n});\n\n","define('widgets/orderList',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    //views\n    'globalmodels/orderCollection',\n    'singleRow/orderRow',\n], function ($, _, Backbone, orderCollection, OrderRow) {\n\n    var OrderList = Backbone.View.extend({\n\tinitialize: function(arg) {\n\t    this.typeFilter = arg.typeFilter;\n\t    this.template = _.template(arg.template); // this must already be loaded\n        this.$el.html(this.template({height:$(window).height()-50+'px'}));\n\t    orderCollection.bind('add', this.addOrder, this);\n\t    orderCollection.bind('reset', this.reset, this);\n\t    orderCollection.bind('sync', this.addAll, this);\n\t    //spendingModel.on('change:typeFilter', function() {\n\t\t//this.render();\n\t    //}, this);\n\t    this.render();\n        var orderlist = $('.orderaccordion', this.$el);\n\t    orderlist.scrollTop(0);\n\t    orderlist.scroll(function() {\n\t\tif(orderlist.scrollTop() + orderlist.innerHeight() + 100 >= orderlist[0].scrollHeight) {\n\t\t    orderCollection.more();\n\t\t}\n\t    });\n\t},\n\trender: function() {\n\t    this.$el.html(this.template(this));\n\t    this.addAll();\n\t},\n\taddAll: function() {\n\t    this.reset();\n\t    var typefilter = this.typeFilter; \n\t    var nonempty = false;\n\t    if (orderCollection.length) {\n\t\tfor(order in orderCollection.models) {\n\t\t    if(!typefilter \n\t\t       || orderCollection.models[order].get('ordertype') == typefilter) {\n\t\t\tthis.addOrder(orderCollection.models[order]);\n\t\t\tnonempty = true;\n\t\t    }\n\t\t}\n\t    }\n\t    if(nonempty) {\n\t\tthis.$el.show();\n\t    } else {\n\t\tthis.$el.hide();\n\t    }\n\n        var orderlist = $('.orderaccordion', this.$el);\n        setTimeout(function() {\n            var orderHeight = orderlist.innerHeight();\n            if (orderHeight > 0 && orderHeight < parseInt(orderlist.css('max-height'))) {\n                orderCollection.more();\n            }\n        },500);\n\t},\n\taddOrder: function(order) {\n\t    var orderrow = new OrderRow({model: order});\n\t    $('.orderaccordion', this.$el).append(orderrow.render().el);\n\t    this.$el.show();\n        orderrow.events();\n\t},\t\n\treset: function() {\n\t    $('.orderaccordion', this.$el).empty();\n\t    this.$el.hide();\n\t},\n    });\n\n    return OrderList;\n\n});\n\n","/**\n * Created by Asmaa Aljuhani on 3/11/14.\n */\n\ndefine('widgets/costtable',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'globalmodels/spendingModel',\n    'globalmodels/summaryModel', // current patient (if any)\n    'widgets/orderList',\n    'libs/jquery/jquery-mousestop-event',\n], function ($, _, Backbone, contextModel, spendingModel, summaryModel, OrderList) {\n\n    var CostBD = Backbone.View.extend({\n        initialize: function (arg) {\n            this.template = _.template(arg.template); // this must already be loaded\n            this.$el.html(this.template({page: contextModel.get('page')}));\n\t        summaryModel.on('change', this.update, this);\n            spendingModel.on('change', this.update, this);\n            this.update();\n        },\n        events:{\n            'click .progress-bar': 'handleClick'\n        },\n        update: function () {\n            var datefilter = null;\n            if ('title' in spendingModel.changed) {\n                return;\n            }\n            if ('date' in spendingModel.changed) {\n                datefilter = spendingModel.changed['date'];\n                //\t\t    $('#costbd-restriction')[0].innerHTML='Only spending on <i><b>'+datefilter.toDateString() +'</b></i> <button id=\"removedatefilter\">(remove filter)</button>';\n                //$('#costbd-restriction')[0].innerHTML = 'Only spending on <i><b>' + datefilter.toDateString() + '</b></i>';\n            } else {\n                //$('#costbd-restriction')[0].innerHTML = '';\n            }\n\n\t    var colorArray = [];\n\t    var data = [];\n\t    var gathered = spendingModel.getGathered();\n            for (var k in gathered) {\n                data.push({order: k, cost: gathered[k], color:findColor(k)});\n                colorArray.push(findColor(k));\n            }\n\n            //clear order-table before filling it\n            $('#order-table-1').empty();\n            $('#order-table-2').empty();\n            $('.progress').empty();\n\n\t    var curTitle = null;\n\t    var overlist = false;\n\t    var maybeHide;\n            var flag = true;\n            data.forEach(function (entry) {\n                //fill order-table\n                var image = $('<img>').attr('src', \"../images/\"+ entry.order.toLowerCase()+\"-55x55px.jpg\");\n                var cost = $('<span class=\\\"cost-num\\\">$'+entry.cost+'</span>');\n                var lable = $('<span>'+entry.order+'</span>');\n                var container = $('<div>').attr('class', 'row');\n                var subcontainer = $('<div>').attr('class', 'col-sm-2');\n\t\t\n\t\tcontainer.mouseover(function() {curTitle = entry.order;});\n\t\tcontainer.mouseleave(function() {curTitle=null; setTimeout(maybeHide,500);});\n                //image\n                $('<div>').attr('class', 'col-sm-3').append(image).appendTo(container);\n                //cost\n                $(subcontainer).append(\n                    $('<div>').attr('class', 'row').append(cost)).appendTo(container);\n                //label\n                $(subcontainer).append(\n                    $('<div>').attr('class', 'row').append(lable)).appendTo(container);\n\n                if(flag){\n                    $('#order-table-1').append(container);\n                    flag = false;\n                } else {\n                    $('#order-table-2').append(container);\n                    flag = true;\n                }\n\n                // fill progress-bar\n                var percentage = (entry.cost/summaryModel.get('spending')*100).toFixed(2);\n\n                $('.progress').append(\n                    $('<div id=\"'+entry.order+'\" class=\"progress-bar bgcolor-'+entry.order.toLowerCase()+'\">')\n                        .attr('style','width: '+percentage+'%').append(Math.round(percentage)+'%'));\n            });\n\n\t    var mousepos;\n\t    var orderList = new OrderList({\n\t\ttemplate:'<div class=\"panel-group orderaccordion\"> </div>',\n\t\tel:$('#mouse-target'),\n\t\ttypeFilter: 'doesnotexist',\n\t\ttitle: null,\n\t    });\n\t    maybeHide = function() {\n\t\tif(curTitle == null && !overlist) {\n\t\t    orderList.title = null;\n\t\t    orderList.$el.hide();\n\t\t    orderList.typeFilter = 'does not exist';\n\t\t    overlist = false;\n\t\t}\n\t    }\n\t    //chart.addListener(\"rollOverSlice\", function(evt) {curTitle = evt.dataItem;});\n\t    //chart.addListener(\"rollOutSlice\", function() {\n//\t\tcurTitle = null;\n//\t\tsetTimeout(maybeHide,500);\n//\t    });\n\t    $(orderList.el).mouseover(function() {overlist=true});\n\t    $(orderList.el).mouseleave(function() {overlist=false; setTimeout(maybeHide,500);});\n\t    $(this.el).mousemove(function(e) {mousepos=e;});\n\t    $(this.el).mousestop(1000, function(e) {\n\t\tif(curTitle) {\n\t\t    orderList.$el[0].style.left = (mousepos.pageX+10)+'px';\n\t\t    orderList.$el[0].style.top = (mousepos.pageY-50)+'px';\n\t\t    if(curTitle != orderList.title) {\n\t\t\torderList.slice = curTitle;\n\t\t\torderList.typeFilter = curTitle;\n\t\t\torderList.addAll();\n\t\t    }\n\t\t}\n\t\t    \n\t    });\n\n        },\n        handleClick: function(e){\n            var element = $(e.currentTarget);\n            console.log(element.attr('id'));\n\n           /* var mousepos;\n\t    var overlist = false;\n\t    var orderList = new OrderList({\n\t\ttemplate:'<div class=\"panel-group orderaccordion\"> </div>',\n\t\tel:$('#mouse-target'),\n\t\ttypeFilter: 'doesnotexist',\n\t\tslice: null,\n\t    });*/\n\n        }\n    });\n    return CostBD;\n});\n//Chart codes are in the template file costbd.html\n;\n","\ndefine('text!templates/customerRow.html',[],function () { return '<td>\\n    <%= customer_id %>\\n    <input class=\"customer-id-row\" type=\"hidden\" value=\"<%= customer_id %>\">\\n</td>\\n<td>\\n    <div class=\"customer-row-val\"><%= name %></div>\\n    <input class=\"customer-name-row customer-row-edit\" type=\"text\" value=\"<%= (name.trim && name.trim()) || name %>\">\\n</td>\\n<td>\\n    <div class=\"customer-row-val\"><%= abbr %></div>\\n    <input class=\"customer-abbr-row customer-row-edit\" type=\"text\" value=\"<%= abbr %>\">\\n</td>\\n<td>\\n    <div class=\"customer-row-val\"><%= license_exp %></div>\\n    <input class=\"customer-license-exp-row customer-row-edit\" type=\"text\" value=\"<%= license_exp %>\">\\n</td>\\n<td>\\n    <div class=\"customer-row-val\"><%= license_type %></div>\\n    <input class=\"customer-license-num-row customer-row-edit\" type=\"text\" value=\"<%= license_type %>\">\\n</td>\\n<td>\\n    <a class=\"customer-info-click hover-link\">\\n        View Info\\n    </a>\\n</td>\\n';});\n\n","\ndefine('text!templates/widgetModal.html',[],function () { return '<div class=\"widget-column col-sm-12\">\\n    <div id=\"widget-modal\" class=\"modal fade\" role=\"dialog\" aria-hidden=\"true\">\\n        <div class=\"modal-dialog modal-dialog-lg\">\\n            <div class=\"modal-content\">\\n            </div>\\n        </div>\\n    </div>\\n</div>';});\n\n","/**\n * Created by Carlos Brenneisen on 10/01/14.\n */\n\ndefine('widgets/widgetModal',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n\n    'text!templates/widgetModal.html',\n    'widgets/userList'\n\n], function ($, _, Backbone, contextModel, widgetModalTemplate) {\n\n    var WidgetModal = Backbone.View.extend({\n            el: $(\"#modal-target\"),\n            template: _.template(widgetModalTemplate),\n            widgetList: [],\n            extraData: {},\n            initialize: function(arg){\n                this.widgetList = arg.widgetList;\n                //this.render();\n            },\n            events: {\n\n            },\n            render: function (data){\n                //data must be a dict (can be empty)\n                this.$el.html(this.template());\n                $(\"#widget-modal\").modal({'show':'true'});\n                for (var i = 0; i < this.widgetList.length; i ++)\n                {\n                    $(\"#widget-modal\").find('.modal-content').append(\"<div class='row content-row'></div>\");\n\t                var newEl = $('#widget-modal').find('.row').last();\n                    var args = {el: newEl};\n                    $.extend(args, data); //add additional arguments\n                    var widget = new this.widgetList[i](args);\n                }\n                $(document).ready(function(){\n                    //stop widget buttons from closing the modal\n                    $(\"button\", this.$el).click(function(event){\n                        event.stopPropagation();\n                    });\n                });\n            },\n    });\n\n    return WidgetModal;\n});\n\n","\ndefine('text!templates/adminSettings.html',[],function () { return '<div class=\"page-header\">\\n    <h1>\\n        Admin Settings\\n        <small>\\n            <i class=\"ace-icon fa fa-angle-double-right\"></i>\\n            EHR Integration Settings\\n        </small>\\n    </h1>\\n</div>\\n\\n\\n<div class = \"widget-column col-sm-12\" style=\"clear: both;\">\\n    <span class=\"headings title\">EHR Integration Settings</span>\\n    <div class=\"panel-body admin-settings\">\\n        <div class=\"col-md-12\">\\n            <div class=\"row\">\\n                <div class=\"col-sm-6\">\\n                    <div class=\"row\">\\n                        <div class=\"span3\">Unity Server Address:</div>\\n                        <div style=\\'float:left\\'>\\n                            <% var disabled = \"\";\\n\\t\\t\\t                   if (typeof EHRURL !== \"undefined\")\\n                               {\\n                                    disabled = \"disabled\";\\n                                    DISP_URL = EHRURL.replace(\"http://\",\"\").replace(\"https://\",\"\");\\n                               }\\n                            %>\\n                            <select id=\\'httphttps\\' class=\\'form-control\\' <%= disabled %>>\\n                                <option class=\\'form-control\\'\\n                                    value=\\'https://\\' <%= (typeof EHRURL !== \\'undefined\\') ? (EHRURL.indexOf(\"https://\") > -1) ? \\'selected\\' : \\'\\' : \\'\\'%>>https://\\n                                </option>\\n                                <option class=\\'form-control\\'\\n                                    value=\\'http://\\' <%= (typeof EHRURL !== \\'undefined\\') ? (EHRURL.indexOf(\"https://\") == -1) ? \\'selected\\' : \\'\\' : \\'\\' %>>http://\\n                                </option>\\n                          </select>\\n                        </div>\\n                        <div style=\\'float:left; margin-bottom:10px;\\'>\\n                            <input id=\"admin-ip-input\" type=\"text\" class=\\'form-control\\'  <%= disabled %>\\n                            <%= (typeof DISP_URL !== \\'undefined\\') ? \"value=\\'\"+DISP_URL+\"\\' disabled\" : \"value=\\'192.237.182.238\\'\" %>\\n                            title=\\'This url typically ends in /UnityService.svc\\'>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\"col-sm-6\">\\n                    <div class=\"row\">\\n                        <div class=\"span3\">App Name:</div>\\n                        <input id=\"admin-name-input\" class=\\'form-control\\' type=\"text\" <%= disabled %>\\n                            <%= (typeof EHRAppName !== \\'undefined\\') ? \"value=\\'\"+EHRAppName+\"\\'\" : \"value=\\'MavenPathways.TestApp\\'\" %>>\\n                    </div>\\n                </div>\\n                <div class=\"col-sm-6\">\\n                    <div class=\"row\">\\n                        <div class=\"span3\">Service User:</div>\\n                        <input id=\"admin-username-input\" class=\\'form-control\\' type=\"text\" <%= disabled %>\\n                            <%= (typeof EHRServiceUser !== \\'undefined\\') ? \"value=\\'\"+EHRServiceUser+\"\\' disabled\" : \"value=\\'MavenPathways\\'\" %>>\\n                    </div>\\n                </div>\\n                <div class=\"col-sm-6\">\\n                    <div class=\"row\">\\n\\t\\t      <div class=\"col-sm-6\">\\n                <div class=\"span3\">EHR Integration:</div>\\n\\t\\t      </div>\\n\\t\\t      <div class=\"col-sm-6\">\\n                  <div style=\"width:50%;\">\\n                    <input id=\"admin-ehr-disable\" type=\"checkbox\" data-on-text=\"On\" data-off-text=\"Off\" data-size=\"small\" <%= disabled %>\\n                        <%= (typeof EHRDisabled !== \\'undefined\\' && EHRDisabled) ? \"\" : \"checked\" %>>\\n                  </div>\\n\\t\\t\\t</div>\\n                    </div>\\n                </div>\\n                <div class=\"col-sm-6\">\\n                    <div class=\"row\" style=\\'margin-bottom:10px;\\'>\\n                        <div class=\"span3\">App Password:</div>\\n                        <input id=\"admin-pw-input\" class=\\'form-control\\' type=\"password\" <%= disabled %>>\\n                    </div>\\n                </div>\\n                <br/>\\n            </div>\\n            <div class=\"row\">\\n                <div class=\"col-sm-6\">\\n                    <div id=\"admin-setup-message\" class=\"span3\">&nbsp;</div>\\n                </div>\\n                <div class=\"col-sm-6\">\\n                    <div style=\\'float:right\\'>\\n                        <button class=\"btn btn-default btn-xs unlock-admin-button\">Edit EHR Settings</button>\\n                        <button class=\"btn btn-default btn-xs lock-admin-button\" style=\"display: none;\">Lock EHR Settings</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <span class=\"headings title\">Connection Settings</span>\\n    <div class=\"panel-body admin-settings\">\\n        <div class=\"col-md-12\">\\n            <div class=\"row\">\\n                <div class=\"col-sm-6\">\\n                    <div class=\"row\">\\n                        <div class=\"span3\">Polling Interval (seconds):</div>\\n                        <input id=\"admin-polling-input\" class=\\'time-input form-control\\' type=\"text\"\\n                               value=\"<%= (typeof EHRPolling !== \\'undefined\\') ? EHRPolling : \\'30\\'%>\">\\n                    </div>\\n                </div>\\n                <div class=\"col-sm-6\">\\n                    <div class=\"row\">\\n                        <div class=\"span3\">Login Inactivity Timeout (minutes):</div>\\n                        <input id=\"admin-timeout-input\" class=\\'time-input form-control\\' type=\"text\"\\n                               value=\"<%= (typeof UserTimeout !== \\'undefined\\') ? UserTimeout : \\'120\\'%>\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\"save-settings-row row\">\\n                <div class=\"col-sm-6\">\\n                    <div id=\"save-admin-message\" class=\"span3\" >&nbsp;</div>\\n                </div>\\n                <div class=\"col-sm-6\">\\n                    <div style=\\'float:right\\'>\\n                        <button class=\"btn btn-default setup-admin-button\">Save Changes</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n';});\n\n","/**\n * Created by Carlos Brenneisen on 9/15/14.\n */\n\ndefine('widgets/adminSettings',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'globalmodels/userCollection',\n    'text!templates/adminSettings.html',\n    'bootstrapswitch',\n], function ($, _, Backbone, contextModel, userCollection, AdminSettingsTemplate) {\n    var AdminModel = Backbone.Model.extend({url: '/customer_info'});\n\n    var AdminSettings = Backbone.View.extend({\n        model: null,\n        extraData: {},\n        initialize: function (arg) {\n\n            this.model = new AdminModel; //initialize every time this is shown - might not render otherwise\n\n            if (typeof arg.template !== \"undefined\") {\n                this.template = _.template(arg.template); // this must already be loaded\n            }\n            else {\n                this.template = _.template(AdminSettingsTemplate);\n            }\n            if (typeof arg.extraData !== \"undefined\") {\n                this.extraData = arg.extraData;\n            }\n            var data = {};\n            $.extend(data, contextModel.toParams(), this.extraData);\n            this.model.fetch({data:$.param(data)});\n            this.model.on('change', this.render, this);\n        },\n        events: {\n            'click .setup-admin-button': 'adminSetup',\n            'click .unlock-admin-button': 'unlockSettings',\n            'click .lock-admin-button': 'lockSettings',\n\t        'change #httphttps': 'httphttps'\n        },\n\n        httphttps: function() {\n            if($(\"#httphttps\").find(\":selected\").text() == 'http://') {\n            alert('Http connections are inherently insecure and must not be used with operational systems.  This option is only for test, or demo systems without any ePHI only.');\n            }\n        },\n        activateEHR: function() {\n            $(\"#admin-ehr-disable\").bootstrapSwitch('state', true, true); //reset switch to its prior state\n        },\n        unlockSettings: function() {\n            $(\"#admin-ip-input\").prop(\"disabled\",false);\n            $(\"#admin-name-input\").prop(\"disabled\",false);\n            $(\"#admin-username-input\").prop(\"disabled\",false);\n            $(\"#admin-pw-input\").prop(\"disabled\",false);\n            $(\"#httphttps\").prop(\"disabled\",false);\n            $(\"#admin-ehr-disable\").bootstrapSwitch('toggleDisabled');\n\n            $(\"#admin-pw-input\").val(\"\");\n            $(\".lock-admin-button\").show();\n            $(\".unlock-admin-button\").hide();\n        },\n        lockSettings: function() {\n            $(\"#admin-ip-input\").prop(\"disabled\",true);\n            $(\"#admin-name-input\").prop(\"disabled\",true);\n            $(\"#admin-username-input\").prop(\"disabled\",true);\n            $(\"#admin-pw-input\").prop(\"disabled\",true);\n            $(\"#httphttps\").prop(\"disabled\",true);\n            $(\"#admin-ehr-disable\").bootstrapSwitch('toggleDisabled');\n\n            $(\"#admin-pw-input\").val(\"password\");\n            $(\".lock-admin-button\").hide();\n            $(\".unlock-admin-button\").show();\n        },\n        adminSetup: function () {\n            var ip = $(\"#admin-ip-input\").val();\n            var name = $(\"#admin-name-input\").val();\n            var pw = $(\"#admin-pw-input\").val();\n            var polling = $(\"#admin-polling-input\").val();\n            var timeout = $(\"#admin-timeout-input\").val();\n            var username = $(\"#admin-username-input\").val();\n\t        var disabled = !($(\"#admin-ehr-disable\").is(':checked'));\n\t        var unlocked = $(\".lock-admin-button\").is(':visible');\n\t    \n            var reg_num = new RegExp('^[0]*[1-9]+[0]*$');\n            /*var reg_ip = new RegExp('^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$');\n            else if (!reg_ip.test(ip))\n            {\n                $(\"#admin-setup-message\").html(\"Please enter a valid IP Address\");\n            }*/\n            if (!reg_num.test(polling))\n            {\n                $(\"#save-admin-message\").html(\"Please enter a valid number for the polling interval\");\n            }\n            else if (!reg_num.test(timeout))\n            {\n                $(\"#save-admin-message\").html(\"Please enter a valid number for the timeout\");\n            }\n            else if (unlocked && ip == \"\")\n            {\n                $(\"#save-admin-message\").html(\"Please enter a Unity URL\");\n            }\n            else if (unlocked && pw == \"\")\n            {\n                $(\"#save-admin-message\").html(\"Please enter the password\");\n            }\n            else {\n                var protocol = $(\"#httphttps\").find(\":selected\").text();\n                var data;\n                if (unlocked || !this.model.attributes.settings) {\n                    console.log('loading from fields');\n                    data = {\n                        \"EHRURL\": $.trim(protocol) + $.trim(ip),\n                        \"EHRAppName\": name, \"EHRPassword\": pw, \"EHRServiceUser\": username,\n                        \"EHRPolling\": polling, \"UserTimeout\": timeout, 'EHRDisabled': disabled\n                    };\n                } else {\n                    console.log('loading from ', this.model.attributes.settings);\n                    data = _.clone(this.model.attributes.settings);\n                    _.extend(data, {\"EHRPolling\": polling, \"UserTimeout\": timeout, 'locked': 'locked'});\n                }\n\n                var argData = {};\n                $.extend(argData, contextModel.toParams(), this.extraData);\n\n                that = this;\n                $.ajax({\n                    type: 'POST',\n                    dataType: 'json',\n                    url: \"/setup_customer?\" + $.param(argData),\n                    data: JSON.stringify(data),\n                    success: function () {\n                        $(\"#save-admin-message\").html(\"Settings saved!\");\n                        if (unlocked || !that.model.attributes.settings) {\n                            alert(\"Success! Connection to EHR established.\");\n                        }\n                        else {\n                            alert(\"Connection settings saved!\");\n                        }\n                        userCollection.refresh();\n                            setTimeout(userCollection.refresh, 7000);\n                        },\n                        error: function (resp){\n                            alert(\"The server could NOT successfully connect using this configuration.  \" + resp.responseJSON);\n                            $(\"#save-admin-message\").html(\"&nbsp;\");\n                        }\n                });\n            }\n        },\n        render: function(){\n            if (!this.model.attributes.settings){\n                this.model.attributes.settings = {};\n            }\n            if (this.extraData['target_customer'] !== \"undefined\") {\n                if (this.extraData['target_customer'] == 0){\n                    //if looking at support customer, don't show this widget\n                    this.$el.hide();\n                    return;\n                }\n                this.model.attributes.settings.target_customer = this.extraData['target_customer'];\n            }\n            this.$el.html(this.template(this.model.attributes.settings));\n            $(document).ready(function(){\n                $(\"#admin-ehr-disable\", this.$el).bootstrapSwitch();\n            });\n            return this;\n        },\n    });\n\n    return AdminSettings;\n\n});\n\n","/***************************************************************************\n * Copyright (c) 2014 - Maven Medical\n * AUTHOR: 'Carlos Brenneisen'\n * DESCRIPTION: This Javascript file is for handling customer row events\n **************************************************************************/\ndefine('singleRow/customerRow',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'text!templates/customerRow.html',\n\n    'widgets/widgetModal',\n    'widgets/userList',\n    'widgets/adminSettings'\n\n], function ($, _, Backbone, contextModel, customerRowTemplate, WidgetModal, userList, adminSettings) {\n    var customerRow = Backbone.View.extend({\n        tagName: 'tr class=\\'customer-row\\'',\n        template: _.template(customerRowTemplate),\n        render: function(){\n            $(this.el).html(this.template(this.model.toJSON()));\n            return this;\n        },\n        events: function() {\n            var that = this;\n            $(document).ready(function() {\n                $(that.el).unbind('click');\n                $(that.el).on('click', function (e) {\n                    //hide all customer edit fields in case others are active\n                    $(\".customer-row > td\").each(function(){\n                        $(this).find(\".customer-row-val\").html($(this).find(\".customer-row-edit\").val());\n                    });\n                    $(\".customer-row-edit\").hide();\n                    $(\".customer-row-val\").show();\n\n                    if (!$(\".customer-info-click\", this.$el).is(e.target) &&\n                        $(\".customer-info-click\", this.$el).has(e.target).length === 0) {\n\n                        //show customer edit fields for this row if target is not the info click button\n                        $(that.el).find(\".customer-row-val\").hide();\n                        $(that.el).find(\".customer-row-edit\").each(function () {\n                            $(this).width($(this).parent().width() - 5);\n                            $(this).show();\n                        });\n                    }\n                    else\n                    {\n                        //show customer info modal if user clicked on 'view info' button\n                        var widgetModal = new WidgetModal({widgetList: [adminSettings, userList]});\n                        widgetModal.render({extraData: {target_customer: that.model.attributes.customer_id}});\n                    }\n                });\n            });\n        }\n    });\n\n    return customerRow;\n\n});\n\n","define('widgets/customerList',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    //views\n    'globalmodels/customerCollection',\n    'singleRow/customerRow',\n\n    'globalmodels/contextModel',\n    'globalmodels/sidebarModel'\n], function ($, _, Backbone, customerCollection, CustomerRow, contextModel, sidebarModel) {\n\n    var CustomerList = Backbone.View.extend({\n\tinitialize: function(arg) {\n\t    this.typeFilter = arg.typeFilter;\n\t    this.template = _.template(arg.template); // this must already be loaded\n        this.$el.html(this.template({height:$(window).height()-50+'px'}));\n\t    customerCollection.bind('add', this.addCustomer, this);\n\t    customerCollection.bind('reset', this.reset, this);\n\t    customerCollection.bind('sync', this.addAll, this);\n\t    //spendingModel.on('change:typeFilter', function() {\n\t\t//this.render();\n\t    //}, this);\n\t    this.render();\n        var customerlist = $('.customeraccordion', this.$el);\n\t    customerlist.scrollTop(0);\n\t    customerlist.scroll(function() {\n\t\tif(customerlist.scrollTop() + customerlist.innerHeight() + 100 >= customerlist[0].scrollHeight) {\n\t\t    customerCollection.more();\n\t\t}\n\t    });\n        $(document).click(function(e){\n            //hide customer edit fields if user clicks outside the widget\n            var customerList = $(this).find(\"tbody\");\n            if (!customerList.is(e.target) && customerList.has(e.target).length === 0) {\n                $(\".customer-row > td\").each(function(){\n                    //update text fields to be the value of the input fields\n                    $(this).find(\".customer-row-val\").html($(this).find(\".customer-row-edit\").val());\n                    $(\".customer-row-edit\").hide();\n                    $(\".customer-row-val\").show();\n                });\n            }\n        });\n\n        $(\".refreshButton\", this.$el).click(function(event){\n            $('.customertable > tbody', this.$el).empty();\n            customerCollection.refresh();\n          });\n        $(\".refreshButton\", this.$el).hover(function(event) {\n            $(event.target).attr('title', \"Last Refresh: \" + customerCollection.getLastRefresh());\n        });\n            sidebarModel.addOption('Customers')\n            this.showhide();\n            contextModel.on('change:page', this.showhide , this)\n\n\t},\n    events: {\n\t    'click #save-customer-changes': 'saveChanges',\n        'click document': 'hideEdits'\n    },\n       showhide: function(){\n            if(contextModel.get('page') == 'customers'){\n                this.$el.show();\n            }else{\n                this.$el.hide();\n            }\n        },\n    hideEdits: function(e) {\n    },\n    saveChanges: function() {\n        that = this;\n        $(\".customer-row\").each(function () {\n            var customer_id = $(this).find(\".customer-id-row\").val();\n            var name = $(this).find(\".customer-name-row\").val();\n            var abbr = $(this).find(\".customer-abbr-row\").val();\n            var license_exp = $(this).find(\".customer-license-exp-row\").val();\n            var license_num = $(this).find(\".customer-license-num-row\").val();\n\n            $.ajax({\n                url: \"/update_customer\",\n                data: $.param(contextModel.toParams()) + \"&target_customer=\" + customer_id +\n                                                         \"&name=\" + name + \"&abbr=\" + abbr +\n                                                         \"&license=\" + license_num + \"&license_exp=\" + license_exp,\n                success: function (data) {\n                    //console.log(data);\n                }\n            });\n            $(\"#save-customer-message\").html(\"Customer settings saved!\");\n        });\n    },\n\trender: function() {\n\t    this.$el.html(this.template(this));\n\t    this.addAll();\n\t},\n\taddAll: function() {\n\t    this.reset();\n\t    var typefilter = this.typeFilter; \n\t    var nonempty = false;\n\t    if (customerCollection.length) {\n\t\tfor(customer in customerCollection.models) {\n\t\t\tthis.addCustomer(customerCollection.models[customer]);\n\t\t\tnonempty = true;\n\t\t}\n\t    }\n\t    if(nonempty) {\n\t\tthis.$el.show();\n\t    } else {\n\t\tthis.$el.hide();\n\t    }\n\n        customerCollection.lastRefresh = new Date();\n\n        var customerlist = $('.customeraccordion', this.$el);\n        setTimeout(function() {\n            var customerHeight = customerlist.innerHeight();\n            if (customerHeight > 0 && customerHeight < parseInt(customerlist.css('max-height'))) {\n                customerCollection.more();\n            }\n        },500);\n\t},\n\taddCustomer: function(customer) {\n\t    var customerrow = new CustomerRow({model: customer});\n\t    $('.customertable').append(customerrow.render().el);\n\t    this.$el.show();\n        customerrow.events();\n\t},\t\n\treset: function() {\n\t    $('.customertable > tbody', this.$el).empty();\n\t    this.$el.hide();\n\t},\n    });\n\n    return CustomerList;\n\n});\n\n","/**\n * Created by Asmaa Aljuhani on 3/11/14.\n */\n\ndefine('widgets/costdonut',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'globalmodels/spendingModel',\n    'widgets/orderList',\n    'libs/jquery/jquery-mousestop-event',\n], function ($, _, Backbone, contextModel, spendingModel, OrderList) {\n\n    var CostBD = Backbone.View.extend({\n\tinitialize: function(arg) {\n\t    this.template = _.template(arg.template); // this must already be loaded\n\t    this.$el.html(this.template({page: contextModel.get('page')}));\n\t    spendingModel.on('change', this.update, this);\n\t    this.update();\n\t},\n\tupdate: function() {\n\t    var datefilter=null;\n\t    if('typeFilter' in spendingModel.changed) {\n\t\treturn;\n\t    }\n\t    if('dateFilter' in spendingModel.changed) {\n\t\tdatefilter=spendingModel.changed['dateFilter'];\n\t\t//\t\t    $('#costbd-restriction')[0].innerHTML='Only spending on <i><b>'+datefilter.toDateString() +'</b></i> <button id=\"removedatefilter\">(remove filter)</button>';\n\t\t$('#costbd-restriction')[0].innerHTML='Only spending on <i><b>'+datefilter.toDateString() +'</b></i>';\n \t    } else {\n\t\t$('#costbd-restriction')[0].innerHTML='';\n\t    }\n\n\t    var colorArray = [];\n\t    var data = []\n\t    var gathered = spendingModel.getGathered();\n\t    for (var k in gathered) {\n\t\tdata.push({order: k, cost: gathered[k]});\n\t\tcolorArray.push(findColor(k));\n\t    };\n\n\t    var chart = AmCharts.makeChart(\"cost-bd\", {\n\t\t\"type\": \"pie\",\n\n\n            \"colors\": colorArray,\n\t\t\n\t\t\"dataProvider\": data,\n\t\t\"titleField\": \"order\",\n\t\t\"valueField\": \"cost\",\n\t\t\"labelRadius\": 5,\n\t\t\"pullOutOnlyOne\": true,\n\t\t\n\t\t\"radius\": \"25%\",\n\t\t\"innerRadius\": \"60%\",\n\t\t\"labelText\": \"[[title]]: $[[value]]\",\n\t\t\"balloonText\": \"[[title]]<br>$[[value]]<br>[[percents]]%\",\n\t    });\n\n\t    chart.addListener(\"pullOutSlice\", function(v) {spendingModel.clickType(v.dataItem.title);}, spendingModel);\n\t    chart.addListener(\"pullInSlice\", function() {spendingModel.clickType('');}, spendingModel);\n\n\t    var curSlice = null;\n\t    var mousepos;\n\t    var overlist = false;\n\t    var orderList = new OrderList({\n\t\ttemplate:'<div class=\"panel-group orderaccordion\"> </div>',\n\t\tel:$('#mouse-target'),\n\t\ttypeFilter: 'doesnotexist',\n\t\tslice: null,\n\t    });\n\t    var maybeHide = function() {\n\t\tif(curSlice == null && !overlist) {\n\t\t    orderList.slice = null;\n\t\t    orderList.$el.hide();\n\t\t    orderList.typeFilter = 'does not exist';\n\t\t    overlist = false;\n\t\t}\n\t    }\n\t    chart.addListener(\"rollOverSlice\", function(evt) {curSlice = evt.dataItem;});\n\t    chart.addListener(\"rollOutSlice\", function() {\n\t\tcurSlice = null;\n\t\tsetTimeout(maybeHide,500);\n\t    });\n\t    $(orderList.el).mouseover(function() {overlist=true});\n\t    $(orderList.el).mouseleave(function() {overlist=false; setTimeout(maybeHide,500);});\n\t    $(this.el).mousemove(function(e) {mousepos=e;});\n\t    $(this.el).mousestop(1000, function(e) {\n\t\tif(curSlice) {\n\t\t    orderList.$el[0].style.left = (mousepos.pageX+10)+'px';\n\t\t    orderList.$el[0].style.top = (mousepos.pageY-50)+'px';\n\t\t    if(curSlice != orderList.slice) {\n\t\t\torderList.slice = curSlice;\n\t\t\torderList.typeFilter = curSlice.title;\n\t\t\torderList.addAll();\n\t\t    }\n\t\t}\n\t\t    \n\t    });\n\n\t    chart.invalidateSize();\n\t}\n    });\n    return CostBD;\n});\n//Chart codes are in the template file costbd.html\n;\n","/**\n * Created by Asmaa Aljuhani on 3/11/14.\n */\n\ndefine('widgets/patientInfo',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/patientModel', // current patient (if any)\n    'globalmodels/contextModel',\n], function ($, _, Backbone,  patientModel, contextModel) {\n    \n    var PatInfo = Backbone.View.extend({\n\tinitialize: function(arg) {\n        this.template = _.template(arg.template);\n        this.update(patientModel);\n        patientModel.on('change', this.update, this);\n        contextModel.on('change:page', function(){\n            if (contextModel.get('page')=='pathway'){\n                this.update(patientModel);\n            } else {\n                this.$el.hide();\n            }\n        }, this);\n    },\n\tupdate: function(pat) {\n\t    if(patientModel.get('id') && contextModel.get('page') == 'pathway') {\n            this.$el.html(this.template(patientModel.attributes));\n            this.$el.show();\n\t    } else {\n            // for now we just hide this if no patient is selected\n            this.$el.hide();\n\t    }\n\t}\n    });\n    return PatInfo;\n});\n\n","define('widgets/alertList',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    //views\n    'globalmodels/alertCollection',\n    \n    'singleRow/alertRow',\n    // Using the Require.js text! plugin, we are loaded raw text\n    // which will be used as our views primary template\n], function ($, _, Backbone, alertCollection, AlertRow) {\n\n    var AlertList = Backbone.View.extend({\n\tinitialize: function(arg) {\n\t    this.template = _.template(arg.template);\n\t    this.$el.html(this.template({height:$(window).height()-50+'px'}));\n\t    alertCollection.bind('add', this.addAlert, this);\n\t    alertCollection.bind('reset', this.reset, this);\n\t    //alertCollection.bind('remove', this.remove, this);\n\t    alertCollection.bind('sync', this.addAll, this);\n\t    this.addAll();\n\t    var alertlist = $('.alertlist', this.$el);\n\t    alertlist.scrollTop(0);\n\t    alertlist.scroll(function() {\n\t\tif(alertlist.scrollTop() + alertlist.innerHeight() + 100 >= alertlist[0].scrollHeight) {\n\t\t    alertCollection.more();\n\t\t}\n\t    });\n\t},\n\taddAlert: function(alert) {\n\t    var alertrow = new AlertRow({model: alert});\n\t    $('#alertaccordion').append(alertrow.render().el);\n\t},\t\n\taddAll: function() {\n\t    this.reset();\n\t    for(alert in alertCollection.models) {\n\t\tthis.addAlert(alertCollection.models[alert]);\n\t    }\n\n\t    var alertlist = $('.alertlist', this.$el);\n        setTimeout(function() {\n            var alertHeight = alertlist.innerHeight();\n            if (alertHeight > 0 && alertHeight < parseInt(alertlist.css('max-height'))) {\n                alertCollection.more();\n            }\n        },500);\n\t},\n\treset: function() {\n\t    $('#alertaccordion').empty();\n\t}\n    });\n\n    return AlertList;\n\n});\n\n","/**\n * Created by Asmaa Aljuhani on 3/11/14.\n */\n\ndefine('widgets/spend_histogram',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'globalmodels/histogramModel',\n    'amchartsserial',\n], function ($, _, Backbone, contextModel, histogramModel) {\n\n    var downloadorder = ['diagnosis', 'admission', 'discharge', 'spending'];\n\n    var HistogramView = Backbone.View.extend({\n        initialize: function (arg) {\n            this.template = _.template(arg.template); // this must already be loaded\n            histogramModel.on('change', this.update, this);\n            contextModel.on('change:page', this.update, this);\n\t    this.update();\n        },\n        events: {\n            'click #histogram-download': 'downloadhist',\n        },\n        downloadhist: function () {\n            var csvContent = [\"data:text/csv;charset=utf-8,\" + downloadorder.join(',')];\n            _.each(histogramModel.attributes, function (row) {\n                csvContent.push('\"' + _.map(downloadorder, function (v) {\n                    return row[v];\n                }).join('\",\"') + '\"');\n            });\n            window.open(encodeURI(csvContent.join('\\n')));\n        },\n        update: function () {\n            if (histogramModel.get(0) && contextModel.get('page') == 'home') {\n                this.$el.html(this.template(contextModel.attributes));\n                var values = _.pluck(histogramModel.attributes, 'spending');\n                var max = _.max(values);\n                var min = _.min(values);\n                if (!this.binwidth) {\n                    this.binwidth = 100 * Math.floor((max - min) / 1000);\n                    if (!this.binwidth) {\n                        this.binwidth = 1000;\n                    }\n                }\n                var binwidth = this.binwidth;\n                var start = binwidth * Math.floor(min / binwidth);\n                var buckets = []\n                for (var k = Math.floor((max - min) / binwidth); k >= 0; k--) {\n                    buckets[k] = 0;\n                }\n                _.each(values, function (value) {\n                    var bin = Math.floor((value - start) / binwidth);\n                    buckets[bin]++;\n                });\n                buckets = _.map(buckets, function (v, k) {\n                    var x = start + binwidth * k;\n                    return {'center': x + '-' + (x + binwidth), 'value': v};\n                });\n                \n                var chart = AmCharts.makeChart('spend-histogram', {\n                    \"type\": \"serial\",\n                    \"categoryField\": \"center\",\n                    \"autoMarginOffset\": 40,\n                    \"marginRight\": 60,\n                    \"marginTop\": 60,\n                    \"startDuration\": 1,\n                    \"fontSize\": 13,\n                    \"theme\": 'light',\n                    \"categoryAxis\": {\n                        \"gridPosition\": \"start\",\n                        \"labelRotation\": 45\n                    },\n                    \"graphs\": [\n                        {\n                            \"type\": \"column\",\n                            \"valueField\": \"value\",\n                            \"fillAlphas\": 1,\n                            \"id\": \"AmGraph-1\",\n                            \"labelText\": \"\",\n                            \"title\": \"graph 1\",\n                        }\n                    ],\n                    \"valueAxes\": [\n                        {\n                            \"id\": \"ValueAxis-1\",\n                            \"title\": \"Encounters\",\n                            \"integersOnly\": true\n                        }\n                    ],\n                    \"dataProvider\": buckets,\n                });\n                this.$el.show();\n                chart.invalidateSize();\n            } else {\n                this.$el.hide();\n            }\n        }\n    });\n    return HistogramView;\n});\n\n\n","/**\n * Created by Asmaa Aljuhani on 8/8/14.\n */\n\ndefine('widgets/maveninfo',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'pathway/models/treeModel',\n    'pathway/models/treeContext',\n], function ($, _, Backbone, contextModel, curTree, treeContext) {\n    var MavenInfo = Backbone.View.extend({\n\n            initialize: function (arg) {\n                this.template = _.template(arg.template);\n                treeContext.on('propagate', this.render, this);\n                contextModel.on('change:page change:pathid', this.hidePopup, this);\n            },\n            showhide: function () {\n                this.$el.show();\n            },\n            events: {\n                'click button.close': 'hidePopup',\n\n            },\n            render: function () {\n                if (!treeContext.get('selectedNode')) {\n                    this.hidePopup()\n                    return\n                }\n                if (treeContext.get('selectedNode') == this.selectedNode) {\n                    return\n                }\n\n                //console.log('selectedNode', treeContext.get('selectedNode'));\n                // for accounts with no pathways\n                if (typeof treeContext.get('selectedNode') !== 'undefined') {\n\n                    var that = this;\n                    // Don't show if there is no text or if selected node is Protocol\n                    if (treeContext.get('selectedNode').attributes.sidePanelText && !treeContext.get('selectedNode').attributes.isProtocol) {\n                        this.hidePopup();\n                        // this.$el.hide(); // hide previous side-popup\n                        this.selectedNode = treeContext.get('selectedNode');\n                        this.$el.html(this.template(treeContext.get('selectedNode').attributes));\n\n                        this.showPopup();\n                        //console.log($(\"#mavenInfo-header\").width(), $(\"#mavenInfo-title\").outerWidth())\n                    } else {\n                        this.hidePopup();\n                    }\n                } else {\n                    this.hidePopup()\n                }\n                //         return this;\n            },\n            hidePopup: function () {\n                this.$el.hide();\n                this.selectedNode = treeContext.get('selectedNode');\n            },\n            showPopup: function () {\n                $('#side-popup').css('top', 'none');\n                $('#side-popup').css('left', 'none');\n                $('#side-popup').css('bottom', 5);\n                $('#side-popup').css('right', 11);\n                this.$el.show(1000);\n\n            },\n        })\n        ;\n    return MavenInfo;\n})\n;\n\n","/**\n * Created by Asmaa Aljuhani on 8/8/14.\n */\n\ndefine('widgets/pathway',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'jsplumb',\n    'globalmodels/contextModel',\n    'globalmodels/sidebarModel'\n], function ($, _, Backbone, jsPlumb, contextModel,sidebarModel) {\n    var Pathway = Backbone.View.extend({\n        initialize: function (arg) {\n            _.bindAll(this, 'render', 'drawTree', 'showFirstchild', 'expandAll', 'suggested');\n\n            this.template = _.template(arg.template);\n            this.$el.html(this.template());\n            console.log('pathway ini');\n            sidebarModel.addOption('Pathways')\n            this.showhide();\n            contextModel.on('change:page', this.showhide , this)\n            //$('#content').css(\"width\", \"80%\");\n\n            // this.render();\n            setTimeout(_.bind(this.showFirstchild, this), 1000);\n\n            $('span[data-toggle=\"tooltip\"]').tooltip({\n                animated: 'fade',\n                placement: 'left',\n                container: 'body'\n            });\n\n\n            jsPlumb.importDefaults({\n                container: '#pathway-container',\n                MaxConnections: -1,\n                Endpoint: 'Blank',\n                PaintStyle: {\n                    lineWidth: 2,\n                    strokeStyle: '#ccc'\n                },\n                HoverPaintStyle: {\n                    lineWidth: 3,\n                    strokeStyle: '#61B7CF'\n                },\n                DragOptions: {cursor: \"crosshair\" },\n                Endpoints: [\n                    [ \"Dot\", { radius: 1 } ],\n                    [ \"Dot\", { radius: 1 } ]\n                ],\n                EndpointStyles: [\n                    { fillStyle: \"#ccc\" },\n                    { fillStyle: \"#ccc\" }\n                ],\n                Connector: [ \"Flowchart\", {\n                    cornerRadius: 3\n                }],\n                Anchors: [ \"Bottom\", \"Top\" ]\n                /* ConnectionOverlays: [\n                 [ \"Arrow\", { location: 2 } ],\n                 [ \"Label\", {\n                 location: 0.1,\n                 id: \"label\",\n                 cssClass: \"aLabel\"\n                 }]\n                 ]*/\n\n            });\n\n            $('#pathway-container').draggable();\n\n            $('#pathway-container').on('wheel', function(data){\n                    data.preventDefault()\n/*\n */                  var re = /scale\\((.*)\\)/\n\n                     var n = $('#pathway-container')[0].style.transform\n                     var result = re.exec(n)\n                     console.log(result)\n\n                     if (data.originalEvent.deltaY > 0){\n                         var newScale = result[1] -.05\n                     } else {\n                          var newScale = (result[1]-0) + .05\n\n                     }\n                     var scaleString = 'scale(' + newScale +')'\n                     $('#pathway-container').css({'transform': scaleString})\n\n                 })\n        },\n        events: {\n            'click button#copybutton': 'copyIndex',\n            'click .qualifier': 'toggleChildren',\n            'click button#expandAll': 'expandAll',\n            'click button#sugPath': 'suggested'\n\n        },\n         showhide: function(){\n            if(contextModel.get('page') == 'pathways'){\n                this.$el.show();\n            }else{\n                this.$el.hide();\n            }\n        },\n        render: function () {\n\n\n        },\n        copyIndex: function () {\n\n            $('<div>').attr('id', 'copiedText').appendTo('body');\n\n\n            //window.prompt (\"Copy to clipboard: Ctrl+C, Enter\", \"test copy\");\n            $('#copiedText').text(\"In summary, the patient is a 54-year-old man with \" +\n                \"symptomatic mCRPC and good performance status (ECOG 0-1) \" +\n                \"who has not received prior docetaxel therapy. \" +\n                \"\\r\\n\" +\n                \"   - This is evidenced by rising PSA in the setting of castrate testosterone levels.\" +\n                \"\\r\\n\" +\n                \"   - Prior radiographic imaging has confirmed metastasis.\" +\n                \"\\r\\n\" +\n                \"   - Symptoms that are attributable to the metastatic disease\" +\n                \"burden include:\" +\n                \"\\r\\n\" +\n                \"    [[[SYMPTOMS]]]\" +\n                \"\\r\\n\" +\n                \"Management Plan:\" +\n                \"\\r\\n\" +\n                \"Per AUA guidelines*, The patient will receive\" +\n                \"\\r\\n\" +\n                \"   - Docetaxel therapy\" +\n                \"\\r\\n\" +\n                \"   - Abiraterone + prednisone\" +\n                \"\\r\\n\" +\n                \"   [[[OR Since the patient cannot receive the standard\" +\n                \"tretatment, he was offered ketoconazole + steroid,\" +\n                \"mitoxantrone or radionuclide therapy]]]\" +\n                \"\\r\\n \\r\\n\" +\n                \"*Index Patient 3 - http://www.auanet.org/education/guidelines/castration-resistant-prostate-cancer.cfm\");\n\n\n            $('#toast').css('visibility', 'visible');\n\n            setTimeout(function () {\n\n                $(\"#toast\").fadeOut(\"slow\", function () {\n                    //$('#toast').css('visibility', 'hidden');\n                });\n\n            }, 2000);\n\n        },\n        toggleChildren: function (self) {\n            var parent = (self.currentTarget.parentNode)\n            $('.children', parent).first().toggle();\n            this.drawTree();\n        },\n        drawTree: function () {\n            jsPlumb.reset();\n\n\n            var nodeList = $('.qualifier');\n            $.each(nodeList, function (key, value) {\n                var s = jsPlumb.addEndpoint(value, {anchor: 'Bottom'});\n                var parent = (value.parentNode);\n                var child = $('.children', parent).first();\n                if (child[0]) {\n                    var children = child[0].children;\n                    $.each(children, function (key2, value2) {\n                        var targetDiv = $('.qualifier', value2).first(); //top endpiont\n                        var t = jsPlumb.addEndpoint(targetDiv, {anchor: 'Top'})\n                        if (($(value).is(\":visible\")) && ($(targetDiv).is(\":visible\"))) {\n                            jsPlumb.connect({source: s, target: t});\n                        }\n                    })\n\n\n                }\n            })\n\n            if (($('#gp').is(\":visible\")) && ($('#i3').is(\":visible\"))) {\n                var s = jsPlumb.addEndpoint($('#gp'), {anchor: 'Bottom'});\n                var t = jsPlumb.addEndpoint($('#i3'), {anchor: 'Top'});\n                jsPlumb.connect({source: s, target: t});\n            }\n        },\n        showFirstchild: function () {\n            $('#n1').click();\n        },\n        suggested: function () {\n            console.log('suggested');\n           // $('#n1').click();\n           // $('.children').toggle();\n           // this.drawTree();\n\n            $('.suggested').css({\n                \"border\": \"2px solid orange\"\n            })\n        },\n        expandAll: function () {\n            console.log('expandAll');\n            $('#n1').click();\n            $('.children').toggle();\n            this.drawTree();\n\n            $('.suggested').css({\n                \"border\": \"2px solid #46bdec\"\n            })\n\n\n            $(\"#pathway-container\").css({\n                \"-webkit-transform\": \"scale(0.75)\",\n                \"-moz-transform\": \"scale(0.75)\",\n                \"-ms-transform\": \"scale(0.75)\",\n                \"-o-transform\": \"scale(0.75)\",\n                \"transform\": \"scale(0.75)\"\n            });\n        }\n    });\n    return Pathway;\n});\n\n","/**\n * Created by Asmaa Aljuhani on 7/5/14.\n */\n\ndefine('widgets/datepicker-chart',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'globalmodels/histogramModel'\n], function ($, _, Backbone, contextModel, histogramModel) {\n\n    var DatepickerChart = Backbone.View.extend({\n        initialize: function (arg) {\n            this.template = _.template(arg.template); // this must already be loaded\n            histogramModel.on('change', this.update, this);\n            contextModel.on('change page', this.update, this);\n\n            this.$el.html(this.template(this));\n            this.update();\n        },\n        update: function () {\n\n            var data = [];\n            for (var key in histogramModel.attributes) {\n                var enc = histogramModel.attributes[key];\n                data.push(enc);\n            }\n\n            var chart = AmCharts.makeChart(\"datepicker-chart\", {\n                \"type\": \"serial\",\n                \"theme\": \"light\",\n                \"dataDateFormat\": \"YYYY-MM-DD\",\n                \"pathToImages\": \"http://cdn.amcharts.com/lib/3/images/\",\n                \"categoryField\": \"admission\",\n                \"startDuration\": 1,\n                \"categoryAxis\": {\n                    \"gridPosition\": \"start\"\n                },\n                \"chartCursor\": {},\n                \"chartScrollbar\": {},\n                \"trendLines\": [],\n                \"graphs\": [\n                    {\n                        \"fillAlphas\": 1,\n                        \"id\": \"AmGraph-1\",\n                        \"title\": \"graph 1\",\n                        \"type\": \"column\",\n                        \"valueField\": \"spending\",\n                        \"balloonText\": \"[[diagnosis]] <br /><b>$[[value]]</b>\",\n                    }\n                ],\n                \"guides\": [],\n                \"valueAxes\": [\n                    {\n                        \"id\": \"ValueAxis-1\",\n                        \"title\": \"Spending\"\n                    }\n                ],\n                \"allLabels\": [],\n                \"balloon\": {\n                },\n                \"chartScrollbar\": {\n                    //\"autoGridCount\": true,\n                    \"graph\": \"AmGraph-1\",\n                    \"scrollbarHeight\": 20\n                },\n                \"dataProvider\": data,\n                periodSelector: {\n                    position: \"left\",\n                    periods: [\n                        {\n                            period: \"MM\",\n                            selected: true,\n                            count: 1,\n                            label: \"1 month\"\n                        },\n                        {\n                            period: \"YYYY\",\n                            count: 1,\n                            label: \"1 year\"\n                        },\n                        {\n                            period: \"YTD\",\n                            label: \"YTD\"\n                        },\n                        {\n                            period: \"MAX\",\n                            label: \"MAX\"\n                        }\n                    ]\n                }\n            });\n\n            chart.addListener(\"clickGraphItem\", function (e) {\n                var eventData = e.item.dataContext;\n\n                var URL;\n                URL = \"episode/\" + eventData['encounterid'] + \"/\";\n                URL += \"patient/\" + eventData['patientid'] + \"/\";\n                URL += eventData['admission'];\n\n                // navigate to the chosen encounter\n                Backbone.history.navigate(URL, true);\n\n                // hide the modal\n                $('#datepicker-modal').modal('hide');\n            });\n            $(\"#datepicker-modal\").on('shown.bs.modal', function () {\n                chart.invalidateSize();\n            });\n\n        }\n    });\n    return DatepickerChart;\n});\n\n","/**\n * Created by Asmaa Aljuhani on 3/11/14.\n */\n\ndefine('widgets/topBanner',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel', // current patient (if any)\n], function ($, _, Backbone, contextModel) {\n\n    var TopBanner = Backbone.View.extend({\n        initialize: function (arg) {\n            this.template = _.template(arg.template);\n            this.update(contextModel);\n            contextModel.on('change:display change:page', this.update, this);\n\n        },\n        update: function (pat) {\n            this.$el.html(this.template(contextModel.attributes));\n        },\n        events: {\n            'click #settings_button': 'handle_settings',\n            'click #profile_button' : 'handle_profile',\n            'click #pathway_button' : 'handel_pathway',\n            'click #pathwayEditor_button': 'handel_pathwayEditor'\n        },\n        handel_pathway: function(){\n            $('#pathwayName').html(\"\")\n            //TODO add the right id for the pathway\n            Backbone.history.navigate(\"pathway/\" + contextModel.get('pathid') + \"/node/\" + contextModel.get('code'), {trigger: true});\n        },\n        handel_pathwayEditor: function(){\n            Backbone.history.navigate(\"pathwayeditor/\" + contextModel.get('pathid') +\"/node/\" + contextModel.get('code') , true);\n        },\n        handle_profile: function () {\n            // a modal to be shown after clicking 'my profile' from the dropdown menu\n             $(\"#profile-modal\").modal({'show': 'true'});\n\n        },\n        handle_settings: function () {\n            $(\"#settings-modal\").modal({'show': 'true'});\n        }\n    });\n    return TopBanner;\n});\n\n","\ndefine('text!templates/pathway/toolbar.html',[],function () { return '<ul id=\\'toolbar\\' class=\"nav nav-list\">\\n    <li class=\"hover\" id=\"newpath-button\">\\n        <a href=\"javascript:void(0)\">\\n            <i class=\"menu-icon\">\\n                <img src=\"../images/temp/newPath.jpg\"\\n                     style=\"width: 30px; height: 25px\"></i>\\n\\t\\t\\t <span class=\"menu-text\">\\n\\t\\t\\t  New Pathway\\n\\t\\t\\t </span>\\n        </a>\\n        <b class=\"arrow\"></b>\\n    </li>\\n    <li class=\"hover\" id=\"exportpath-button\">\\n        <a href=\"javascript:void(0)\">\\n            <i class=\"menu-icon\">\\n                <img src=\"../images/temp/newPath.jpg\"\\n                     style=\"width: 30px; height: 25px\"></i>\\n\\t\\t\\t <span class=\"menu-text\">\\n\\t\\t\\t  Export Pathway\\n\\t\\t\\t </span>\\n\\n        </a>\\n        <b class=\"arrow\"></b>\\n    </li>\\n\\n\\n\\n    <li class=\"hover\" id=\"copypath-button\">\\n        <a href=\"javascript:void(0)\" class=\"disabled\">\\n            <i class=\"menu-icon\">\\n                <img src=\"../images/temp/newPath.jpg\"\\n                     style=\"width: 30px; height: 25px\"></i>\\n\\t\\t\\t <span class=\"menu-text\">\\n\\t\\t\\t  Copy Pathway\\n\\t\\t\\t </span>\\n\\n        </a>\\n        <b class=\"arrow\"></b>\\n    </li>\\n\\n    <% if (treeNode) { %>\\n\\n    <li class=\"hover\" id=\"trigger-button\">\\n        <a href=\"javascript:void(0)\">\\n            <i class=\"menu-icon\">\\n                <img src=\"../images/temp/newPath.jpg\"\\n                     style=\"width: 30px; height: 25px\"></i>\\n\\t\\t\\t <span class=\"menu-text\">\\n\\t\\t\\t  Edit Triggers\\n\\t\\t\\t </span>\\n\\n        </a>\\n        <b class=\"arrow\"></b>\\n    </li>\\n\\n    <li class=\"hover\" id=\"editNode-button\">\\n        <a href=\"javascript:void(0)\">\\n            <i class=\"menu-icon\">\\n                <img src=\"../images/temp/newPath.jpg\"\\n                     style=\"width: 30px; height: 25px\"></i>\\n             <span class=\"menu-text\">\\n              Edit Selected Node\\n             </span>\\n\\n        </a>\\n        <b class=\"arrow\"></b>\\n    </li>\\n\\n    <li class=\"hover\" id=\"deleteNodeButton\">\\n        <a href=\"javascript:void(0)\">\\n            <i class=\"menu-icon\">\\n                <img src=\"../images/temp/newPath.jpg\"\\n                     style=\"width: 30px; height: 25px\"></i>\\n             <span class=\"menu-text\">\\n              Delete Selected Node\\n             </span>\\n\\n        </a>\\n        <b class=\"arrow\"></b>\\n    </li>\\n\\n     <li class=\"hover\" id=\"addChildButton\">\\n        <a href=\"javascript:void(0)\">\\n            <i class=\"menu-icon\">\\n                <img src=\"../images/temp/newChild.jpg\"\\n                     style=\"width: 30px; height: 25px\"></i>\\n             <span class=\"menu-text\">\\n              Add Child\\n             </span>\\n\\n        </a>\\n        <b class=\"arrow\"></b>\\n    </li>\\n\\n        <% if (treeNode.children && treeNode.children.length == 0){%>\\n             <li class=\"hover\" id=\"addProtocolButton\">\\n        <a href=\"javascript:void(0)\">\\n            <i class=\"menu-icon\">\\n                <img src=\"../images/temp/newProtocole.jpg\"\\n                     style=\"width: 30px; height: 25px\"></i>\\n             <span class=\"menu-text\">\\n              Add Protocol\\n             </span>\\n\\n        </a>\\n        <b class=\"arrow\"></b>\\n        </li>\\n        <% } %>\\n\\n          <% if ((treeNode.children && treeNode.children.length > 0)||treeNode.protocol) {%>\\n<li class=\"hover\" id=\"collapseButton\">\\n        <a href=\"javascript:void(0)\">\\n            <% if (childrenHidden){%>\\n            <i class=\"menu-icon\">\\n                <img src=\"../images/temp/expand.jpg\"\\n                     style=\"width: 30px; height: 25px\"></i>\\n             <span class=\"menu-text\">\\n              Expand Node\\n             </span>\\n            <%}else{%>\\n            <i class=\"menu-icon\">\\n                <img src=\"../images/temp/collapse.jpg\"\\n                     style=\"width: 30px; height: 25px\"></i>\\n             <span class=\"menu-text\">\\n              Collapse Node\\n             </span>\\n            <%}%>\\n        </a>\\n        <b class=\"arrow\"></b>\\n    </li>\\n        <% } %>\\n\\n    <% } %>\\n</ul>\\n\\n\\n\\n\\n\\n\\n\\n\\n';});\n\n","/**\n * Created by Asmaa Aljuhani on 8/7/14.\n */\n\ndefine('widgets/pathway/toolbar',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'pathway/models/pathwayCollection',\n    'pathway/models/treeModel',\n    'pathway/models/treeContext',\n\n    'pathway/modalViews/newPathway',\n    'pathway/modalViews/editNode',\n    'pathway/modalViews/nodeEditor',\n    'pathway/modalViews/protocolEditor',\n     'pathway/modalViews/DeleteDialog',\n\n    'pathway/modalViews/ruleWizard',\n    'pathway/singleRows/pathRow',\n    'pathway/internalViews/treeNodeActionSet',\n\n    'text!templates/pathway/pathwayListEntry.html',\n    'text!templates/pathway/toolbar.html'\n\n], function ($, _, Backbone, contextModel, curCollection, curTree, treeContext,\n             NewPathway, editNode, NodeEditor, ProtocolEditor,deleteDialog,\n             ruleWizard, PathRow, treeNodeActionSet, listEntry, toolbarTemplate) {\n\n\n    var exportPathway = function (strData, strFileName, strMimeType) {\n\trequire(['libs/jquery/Blob', 'libs/jquery/FileSaver.min'], function(blob, saveAs) {\n\t    var b = new Blob([strData], {type: strMimeType});\n\t    saveAs(b, strFileName);\n\t});\n    };\n    var toolbar = Backbone.View.extend({\n        template: _.template(toolbarTemplate),\n        events: {\n            'click #newpath-button': 'handle_newPath',\n            'click #trigger-button': 'addTrigger',\n            'click #exportpath-button': 'exportPath',\n            'click #copypath-button': 'handle_copyPath',\n            'click #editNode-button': 'editNode',\n            'click #deleteNodeButton': 'deleteNode',\n            'click #addChildButton': 'addChild',\n            'click #addProtocolButton': 'addProtocol',\n            'click #collapseButton': 'expandCollapse',\n            'click #testButton': 'handleTest'\n        },\n        handleTest: function () {\n            curTree.changeNodePosition(treeContext.get('selectedNode'), -1)\n        },\n        initialize: function () {\n\n           if(treeContext.get('selectedNode')){\n\t\t        var selected = treeContext.get('selectedNode')\n                this.$el.html(this.template({treeNode: selected.attributes, childrenHidden: selected.childrenHidden && selected.childrenHidden(), page: contextModel.get('page')}))\n            } else {\n                this.$el.html(this.template({treeNode: null, childrenHidden: null, page: contextModel.get('page')}))\n           }\n            contextModel.on('change:page', this.showhide, this)\n            this.showhide();\n            treeContext.on('propagate', this.renderActions, this)\n            this.renderActions();\n        },\n        showhide: function(){\n            if(contextModel.get('page') == 'pathEditor'){\n                this.$el.show();\n                $('#toolbar').show()\n                $('#widget-toolbox').addClass('grid')\n\n            }else{\n                this.$el.hide();\n                 $('#toolbar').hide()\n                $('#widget-toolbox').removeClass('grid')\n            }\n        },\n        addTrigger: function () {\n            //clear previous modals\n            $('#modal-target').empty();\n            $('#detailed-trigger-modal').empty();\n           // Backbone.history.navigate(\"triggereditor/\" + contextModel.get('pathid') + \"/node/\"+contextModel.get('code'), {trigger: true});\n            a = new ruleWizard({el: '#modal-target'});\n        },\n        renderActions: function () {\n                if (treeContext.get('selectedNode')) {\n                    var selected = treeContext.get('selectedNode')\n                this.$el.html(this.template({treeNode: selected.attributes, childrenHidden: selected.childrenHidden && selected.childrenHidden(), page: contextModel.get('page')}))\n                }\n\n\n\n        },\n        renderPathList: function () {\n            $('#avail-paths').html(\"\")\n            _.each(curCollection.models, function (cur) {\n                var thisRow = new PathRow({model: cur})\n                $('#avail-paths').append(thisRow.render().$el)\n            }, this)\n        },\n        handle_newPath: function (e) {\n             e.preventDefault();\n            a = new NewPathway({el: '#modal-target'});\n\n        },\n        handle_copyPath: function(){\n            $.ajax({\n                type: 'GET',\n                url: \"/pathway_version?\" + $.param(contextModel.toParams()),\n                dataType: \"json\",\n                success: function (data) {\n                    //curTree.loadNewPathway({name: data['full_spec']['name'], folder: data['folder']});\n                    curCollection.addNewPath();\n                }\n            });\n        },\n        exportPath: function () {\n           exportPathway(JSON.stringify(curTree.toJSON({'toExport':true})) , curTree.get('name')+'.pathway', 'text/plain');\n        },\n        addChild : function(){\n\n            var newEditor = new NodeEditor(treeContext.get('selectedNode'))\n        },\n        addProtocol: function(){\n            var newEditor = new ProtocolEditor(treeContext.get('selectedNode'))\n        },\n        expandCollapse: function(){\n                           if (!treeContext.get('selectedNode').childrenHidden()){\n                               curTree.collapse(treeContext.get('selectedNode'))\n                           } else{\n                               treeContext.get('selectedNode').showChildren()\n                           }\n            curTree.getShareCode()\n            treeContext.trigger('propagate')\n        },\n        editNode: function(){\n            new editNode();\n\n        },\n\n        deleteNode: function(){\n            new deleteDialog()\n\n\n        }\n\n    });\n    return toolbar;\n});\n\n","\ndefine('text!templates/pathway/treeTemplate.html',[],function () { return '<hr/>\\n<div class=\"col-xs-12 col-sm-12 widget-container-col\">\\n    <!-- #section:custom/widget-box -->\\n    <div class=\"widget-box\">\\n        <div class=\"widget-header widget-header-large\">\\n            <h4 class=\"widget-title\">Pathway Editor</h4>\\n            <!-- #section:custom/widget-box.toolbar -->\\n            <div class=\"widget-toolbar\">\\n                <div class=\"widget-menu\">\\n                    <a href=\"#\" data-action=\"fullscreen\" class=\"orange2\">\\n                        <i class=\"ace-icon fa fa-expand\"></i>\\n                    </a>\\n                    <a href=\"#\" data-action=\"collapse\">\\n                        <i class=\"ace-icon fa fa-chevron-up\"></i>\\n                    </a>\\n                </div>\\n            </div>\\n            <!-- /section:custom/widget-box.toolbar -->\\n        </div>\\n        <div class=\"widget-body\">\\n            <div id=\\'widget-toolbox\\' class=\"widget-toolbox\">\\n                 <div id=\\'pathway-toolbox\\' class=\\'sidebar  h-sidebar navbar-collapse collapse\\'></div>\\n\\n            <div class=\"widget-main\" style=\"overflow:hidden\">\\n                <div style=\"width:10000px; text-align:center; clear:both; height: auto; min-height:600px; transform: scale(1.0);\"\\n                     class=\"pathtree container-fluid\">\\n                </div>\\n                <div style=\"width:auto; clear:both\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n';});\n\n","\ndefine('text!templates/pathway/insertDiv.html',[],function () { return '<div id=\"insertButton\" style=\"background-color: white; font-size: 200%; border-style: solid\">+</div>';});\n\n","define('widgets/pathway/TreeView.js',[\n        'jquery',     // lib/jquery/jquery\n        'underscore', // lib/underscore/underscore\n        'backbone',    // lib/backbone/backbone\n        'globalmodels/contextModel',\n        'pathway/models/treeModel',\n        'pathway/models/treeContext',\n        'widgets/pathway/toolbar',\n        'pathway/internalViews/triggerNode',\n        'pathway/modalViews/nodeEditor',\n        'pathway/Helpers',\n        'pathway/models/pathwayCollection',\n        'text!templates/pathway/treeTemplate.html',\n        'text!templates/pathway/insertDiv.html',\n        'jsplumb'\n    ],\n\n    function ($, _, Backbone, contextModel, curTree, treeContext,toolbar, TriggerNode, NodeEditor, Helpers, pathwayCollection, treeTemplate, insertDiv) {\n\n        var TreeView = Backbone.View.extend({\n\n            template: _.template(treeTemplate),\n            initialize: function () {\n                this.$el.html(this.template())\n                this.toolbar = new toolbar({el:this.$('#pathway-toolbox')})\n\n                if(contextModel.get('page') == 'pathway') {\n                    $('.widget-title', this.$el).html('Pathway')\n                } else {\n                    $('.widget-title', this.$el).html('Pathway Editor')\n                }                contextModel.on('change:page', function () {\n                    if (contextModel.get('page') == 'pathEditor' || contextModel.get('page') == 'pathway') {\n                        if(contextModel.get('page') == 'pathway') {\n                            $('.widget-title', this.$el).html('Pathway')\n                        } else {\n                            $('.widget-title', this.$el).html('Pathway Editor')\n                        }\n                        this.$el.show()\n\n                    } else {\n                        this.$el.hide()\n                    }\n                }, this)\n                this.plumb = jsPlumb.getInstance({\n                    MaxConnections: -1,\n                    Connector: [ \"Flowchart\", { cornerRadius: 3 }],\n                    Endpoint: 'Blank',\n                    PaintStyle: {\n                        lineWidth: 2,\n                        strokeStyle: '#ccc'\n                    },\n                    HoverPaintStyle: {\n                        lineWidth: 2,\n                        strokeStyle: '#61B7CF'\n                    }\n\n                })\n                var that = this\n                setTimeout(function () {\n                    that.reset = true;\n                    that.render()\n                }, 200)\n                this.treeEl = $('.pathtree', this.$el)\n                that.treeEl.css({'opacity': 0})\n                this.treeEl.draggable({\n                    start: function (event, ui) {\n                        treeContext.suppressClick = true\n                    },\n                    stop: function (event, ui) {\n                        setTimeout(function () {\n                            treeContext.suppressClick = false\n                        }, 100)\n                        $(event.toElement).one('click', function (e) {\n                            e.stopImmediatePropagation();\n                        });\n                    }\n                })\n                var that = this\n                this.plumb.setContainer(this.treeEl[0])\n                this.$el.on('wheel', function (data) {\n                        var mouseX = data.originalEvent.pageX;\n                        var mouseY = data.originalEvent.pageY;\n                        var left = that.treeEl.offset().left\n                        var top = that.treeEl.offset().top\n                        data.preventDefault()\n                        /*\n                         */\n                        var re = /scale\\((.*)\\)/\n                        var n = that.treeEl[0].style.transform\n                        var transform_property = 'transform';\n                        if (!n) {\n                            n = that.treeEl[0].style.msTransform;\n                            transform_property = 'msTransform'\n                        }\n                        if (n) {\n                            var oldScale = re.exec(n)[1];\n                            if (data.originalEvent.deltaY > 0) {\n                                var newScale = oldScale - .05\n                            } else {\n                                var newScale = (oldScale - 0) + .05\n                            }\n                            var newTop = mouseY - (mouseY - top ) * newScale / oldScale;\n                            var newLeft = mouseX - (mouseX - left ) * newScale / oldScale;\n                            if (newScale > 5 || newScale <= .25) {\n                                return\n                            }\n                            var scaleString = 'scale(' + newScale + ')'\n                            if (transform_property == 'transform') {\n                                that.treeEl.css({'transform': scaleString})\n                            } else {\n                                that.treeEl.css({'msTransform': scaleString})\n                            }\n                            that.treeEl.offset({left: newLeft,\n                                top: newTop});\n                            that.setDraggableBox(newScale)\n                        }\n                    }\n                )\n\n                var resizetimer\n                window.onresize = function () {\n\n                    window.clearTimeout(resizetimer)\n                    resizetimer = window.setTimeout(function () {\n                        that.render()\n                    }, 100)\n                }\n                treeContext.on('propagate sync', function () {\n                    this.render();\n                }, this)\n                //contextModel.on('change', this.render, this)\n                contextModel.on('change:pathid', function () {\n                    treeContext.set({'selectedNodeOffset': null, 'selectedNode': null}, {silent: true})\n                    that.treeEl.css({'opacity': 0})\n                    that.reset = true\n                    if (that.treeEl[0].style.transform) {\n                        that.treeEl.css({left: '', top: '', transform: 'scale(1)'});\n                    } else {\n                        that.treeEl.css({left: '', top: '', msTransform: 'scale(1)'});\n                    }\n                })\n                this.render()\n            },\n            render: function () {\n\n\n                var that = this\n                if (contextModel.get('page') == 'pathEditor' || contextModel.get('page') == 'pathway') {\n                    this.$el.show()\n                    this.toolbar.showhide()\n\n                } else {\n                    return\n                }\n\n                that.treeEl.css({'cursor': 'wait'})\n\n                var pathid = contextModel.get('pathid');\n                if (pathid && pathid != '0') {\n                    this.$el.show()\n                } else {\n                    this.$el.hide()\n                }\n                curTree.elPairs = []\n                this.plumb.deleteEveryEndpoint();\n                this.treeEl.html('')\n\n                $('.pathtree', that.$el).append(\"<div style= 'width:auto; height: auto' class='nodeEl'></div>\")\n                $('.pathtree', that.$el).append(\"<div style='height:100px'></div>\")\n\n                var topLevel = new TriggerNode({el: $('.nodeEl', this.$el).last(), model: curTree});\n\n                if (contextModel.get('page') == 'pathEditor')\n                    $('#pathwayName').html(\"Now Editing Pathway: \" + curTree.attributes.name);\n                else if (contextModel.get('page') == 'pathHistory')\n                    $('#pathwayName').html(\"Now Viewing History for Pathway: \" + curTree.attributes.name);\n                else {\n                    $('#pathwayName').html(\"\")\n                }\n                this.renderJSPlumb()\n                this.adjustWidth()\n                this.setDraggableBox()\n            },\n            adjustWidth: function () {\n\n                if (this.reset) {\n                    this.reset = false\n                    var boundingWidth = $('.nodeEl', this.$el).width()\n                    var widthDiff = (this.$el.width() - boundingWidth) / 2\n                    if (widthDiff > 0) {\n                        var offset = this.treeEl.offset()\n                        offset.left = this.$el.offset().left + widthDiff;\n                        this.treeEl.offset(offset)\n                    }\n                    this.treeEl.css({'opacity': 1})\n                }\n            },\n            setDraggableBox: function (scale) {\n                if (!scale) {\n                    scale = 1\n                }\n                var boxnode = $('.nodeEl', this.$el)\n                var boundingW = boxnode.width()\n                var boundingH = boxnode.height()\n\n\n                var l = this.$el.offset().left , t = this.$el.offset().top\n                var w = this.$el.width(), h = this.$el.height()\n                var box = [l + (100 - boundingW) * scale, t + (50 - boundingH) * scale, l + w - 100 * scale, t + h - 100 * scale]\n                this.treeEl.draggable('option', 'containment', box)\n            },\n            renderJSPlumb: function () {\n                var that = this\n                var insertDiv = Backbone.View.extend({\n                    initialize: function (params) {\n\n                        this.$el.html(\"<div style='float: left; background-color: white; height: 15px'>+</div>\")\n                        this.parentNode = params.source\n                        this.childNode = params.target\n                        var that = this\n                        this.$el.on('click', function () {\n\n                            var newEditor = new NodeEditor(that.parentNode, that.childNode)\n\n\n                        })\n\n\n                    }\n                })\n\n                for (var i in curTree.elPairs) {\n                    var cur = curTree.elPairs[i]\n                    if ((cur.source.$el.is(\":visible\")) && (cur.target.$el.is(\":visible\"))) {\n\n                        var a = cur.source.makeExit(that.plumb)\n                        var b = cur.target.makeEntrance(that.plumb)\n\n                        if (cur.bold) {\n                            that.plumb.connect({\n                                source: a,\n                                target: b,\n                                overlays: [\n                                    [\"Custom\", {\n                                        create: function (component) {\n\n                                            var myInsert = new insertDiv({source: cur.source.model, target: cur.target.model})\n\n                                            if (contextModel.get('page') == 'pathEditor') {\n                                                return myInsert.$el\n                                            } else {\n                                                return $(\"<div></div>\")\n                                            }\n                                        },\n                                        location: -10,\n\n                                        id: \"customOverlay\"\n                                    }]\n                                ],\n                                paintStyle: {\n                                    lineWidth: 4,\n                                    strokeStyle: '#46bdec'\n                                }\n                            })\n                        } else {\n                            that.plumb.connect({\n\n                                overlays: [\n                                    [\"Custom\", {\n                                        create: function (component) {\n\n                                            // console.log(\"the source\", cur.source)\n                                            var myInsert = new insertDiv({source: cur.source.model, target: cur.target.model})\n                                            if (contextModel.get('page') == 'pathEditor') {\n                                                return myInsert.$el\n                                            } else {\n                                                return $(\"<div></div>\")\n                                            }\n                                        },\n                                        location: -10,\n\n                                        id: \"customOverlay\"\n                                    }]\n                                ],\n                                source: a,\n                                target: b\n                            })\n                        }\n                    }\n                }\n\n                var selected = $('.selected.treeNode')\n                var old = treeContext.get('selectedNodeOffset')\n                if (old && selected.length && selected.is(':visible') && old.clickid == selected.attr('clickid')) {\n                    var tree = this.treeEl.offset();\n                    var cur = selected.offset();\n                    this.treeEl.offset({left: tree.left - cur.left + old.left,\n                        top: tree.top - cur.top + old.top});\n                }\n\n                contextModel.trigger('rendered')\n                that.treeEl.css({'cursor': 'default'})\n\n\n            },\n            showExtraInfo: function () {\n\n            },\n            drawNodes: function () {\n\n\n            },\n        })\n\n        return TreeView\n    });\n\n\n\n\n\n\n\n","\ndefine('text!templates/pathway/pathwaysList.html',[],function () { return '<div class=\"page-header\">\\n    <h1>\\n        Pathways\\n        <small>\\n            <i class=\"ace-icon fa fa-angle-double-right\"></i>\\n            Pathway Management &amp; Editing\\n        </small>\\n    </h1>\\n</div>\\n<div class=\"row\">\\n    <div class=\"col-xs-12 col-sm-6 widget-container-col\">\\n        <!-- #section:custom/widget-box -->\\n        <div class=\"widget-box\">\\n            <div class=\"widget-header widget-header-large\">\\n                <h4 class=\"widget-title\">Library</h4>\\n                <!-- #section:custom/widget-box.toolbar -->\\n                <div class=\"widget-toolbar\">\\n                    <div class=\"widget-menu\">\\n                        <a href=\"#\" data-action=\"fullscreen\" class=\"orange2\">\\n                            <i class=\"ace-icon fa fa-expand\"></i>\\n                        </a>\\n                        <a href=\"#\" data-action=\"collapse\">\\n                            <i class=\"ace-icon fa fa-chevron-up\"></i>\\n                        </a>\\n                    </div>\\n                </div>\\n                <!-- /section:custom/widget-box.toolbar -->\\n            </div>\\n            <div class=\"widget-body\">\\n                <div class=\"widget-main\">\\n                    <div class=\"row\">\\n                        <div class=\"col-sm-12 widget-container-col\">\\n                            <div class=\"widget-box transparent\">\\n                                <div class=\"widget-header\">\\n                                    <h5 class=\"widget-title lighter\">Folder &amp; Documents</h5>\\n\\n                                    <div class=\"widget-toolbar\">\\n                                        <div class=\"widget-menu\">\\n                                            <button class=\"btn btn-white btn-primary btn-xs dropdown-toggle\" data-action=\"settings\" data-toggle=\"dropdown\">New<span class=\"ace-icon fa fa-caret-down icon-on-right\"></span>\\n                                            </button>\\n                                            <ul class=\"dropdown-menu dropdown-menu-right dropdown-light-blue dropdown-caret dropdown-closer\">\\n                                                <li>\\n                                                    <a id=\\'paths-list-add-folder\\' class=\"blue\">\\n                                                        New Folder\\n                                                    </a>\\n                                                </li>\\n                                                <li>\\n                                                    <a id=\\'add-base-pathway\\' class=\"blue\">\\n                                                        New Pathway\\n                                                    </a>\\n                                                </li>\\n                                            </ul>\\n                                        </div>\\n                                        <div class=\"widget-menu\">\\n                                            <button class=\"btn btn-white btn-primary btn-xs dz-clickable path\" id=\"mvn-importpath-btn\"><span class=\"ace-icon fa fa-cloud-upload light-blue\"></span>Import\\n                                                <input id=\"browser\" type=\"file\" accept=\".pathway\" class=\"mvn-importpath\">\\n                                            </button>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\"widget-body\">\\n                                    <div class=\"widget-main\">\\n                                        <div class=\"dd\" id=\"nestable\" style=\"max-width: NONE; width:100%\">\\n                                            <ol class=\"dd-list\" id=\"avail-paths-list\">\\n\\n                                            </ol>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>';});\n\n","\ndefine('text!templates/pathway/pathwayFolderEntry.html',[],function () { return '<div class=\"pathway-folder-title dd-handle dd2-handle\" name=\"<%=name%>\">\\n    <!--<span title=\"New Folder\" class=\"glyphicon glyphicon-folder-close\"></span>\\n    <span title=\"New Folder\" class=\"glyphicon glyphicon-folder-open\"></span> -->\\n    <i class=\"normal-icon ace-icon fa fa-folder orange bigger-130\"></i>\\n\\n    <i class=\"drag-icon ace-icon fa fa-arrows bigger-125\"></i>\\n\\n</div>\\n<div class=\"dd2-content\">\\n    <%=name%>\\n    <div class=\"pull-right action-buttons\">\\n            <div class=\"btn-group\">\\n                <button class=\"btn btn-white btn-primary btn-xs dropdown-toggle\" data-toggle=\"dropdown\">New<span class=\"ace-icon fa fa-caret-down icon-on-right\"></span>\\n                </button>\\n                <ul class=\"dropdown-menu dropdown-menu-right dropdown-caret\">\\n                    <li>\\n                        <a class=\"add-sub-folder\">Sub-Folder</a>\\n                    </li>\\n                    <li>\\n                        <a class=\"add-sub-pathway\">Pathway</a>\\n                    </li>\\n                </ul>\\n            </div>\\n        <a class=\"red delete-folder\">\\n            <i class=\"ace-icon fa fa-trash-o bigger-140\"></i>\\n        </a>\\n    </div>\\n</div>\\n<ol class=\"sub-folder-contents dd-list\"></ol>\\n';});\n\n","/***************************************************************************\n * Copyright (c) 2014 - Maven Medical\n * AUTHOR: 'Carlos Brenneisen'\n * DESCRIPTION: This Javascript file handle a hierarchy of rulelist view\n *              so we can handle events easier.\n * \n **************************************************************************/\ndefine('pathway/singleRows/folderRow',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'router',\n    'globalmodels/contextModel',\n    'text!templates/pathway/pathwayFolderEntry.html',\n    'pathway/modalViews/newPathway',\n    'pathway/modalViews/newPathwayFolder',\n\n], function ($, _, Backbone, router, contextModel, pathFolderRowTemplate, NewPathway, NewPathwayFolder) {\n\n    var ruleRow = Backbone.View.extend({\n        tagName: \"li class='sub-folder dd-item dd2-item dd-collapsed'\",\n        template: _.template(pathFolderRowTemplate),\n        parentList: [], //parent folders\n        events: {\n            //\"click .pathway-folder-title\": 'toggleFolder',\n            \"click .glyphicon-folder-open\": 'closeFolder',\n            \"click .glyphicon-folder-close\": 'openFolder',\n            \"click .add-sub-pathway\": 'handleNewPathway',\n            \"click .add-sub-folder\": 'handleNewSubFolder',\n            \"click .delete-folder\": 'handleDeleteFolder'\n        },\n        openFolder: function(event){\n            //open folder - change folder icon to 'open' and show all immediate children\n            $(event.target).closest(\".sub-folder\").switchClass(\"dd-collapsed\", \"dd-expanded\",0);\n        },\n        closeFolder: function(event){\n            //close folder - change folder icon to 'close' and hide all children\n            $(event.target).closest(\".sub-folder\").switchClass(\"dd-expanded\", \"dd-collapsed\",0);\n            $(event.target).closest(\".sub-folder\").find(\".sub-folder\").switchClass(\"dd-expanded\", \"dd-collapsed\",0);\n        },\n        setParents: function(){\n            //check the location of the folder - if it has moved, update the parent list and return true\n\n            var newParentList = [$(this.el).children(\".pathway-folder-title\").attr(\"name\")]; //initialize with current folder name [this.parentList[this.parentList.length-1]];\n            var parentFolder = $(this.el).parent().closest(\".sub-folder\");\n            while (parentFolder.length){\n                parentName = parentFolder.children(\".pathway-folder-title\").attr('name');\n                if (typeof parentName=='undefined' || parentName==\"\") break;\n                newParentList.push(parentName);\n                parentFolder = $(parentFolder).parent().closest(\".sub-folder\");\n            }\n            newParentList.reverse();\n            this.parentList = newParentList;\n            return newParentList;\n        },\n        handleNewPathway: function(event) {\n            event.stopPropagation();\n\n            new NewPathway({el: '#modal-target', parentList: this.setParents()});\n        },\n        handleDeleteFolder: function(event) {\n            event.stopPropagation();\n            if ($(\".path-row\", this.$el).length) {\n                var r = confirm(\"WARNING: This will delete all contained pathways. Are you sure you want to do this?\");\n                if (!r) return;\n            }\n            this.deleteFolderAndPathways($(this.el), this);\n        },\n        deleteFolderAndPathways: function(folderSelector, that){\n            $(folderSelector).children(\".sub-folder-contents\").children().each(function() {\n                //delete all children\n                if ($(this).hasClass(\"pathrow-item\")){\n                    //current child is a pathway\n                    var canonical = $(this).children(\".path-row\").attr(\"id\");\n                    $.ajax({\n                        type: 'DELETE',\n                        dataType: 'json',\n                        url: \"/list/\" +canonical,\n                        error: function (){\n                            alert(\"Could not delete pathway\");\n                        }\n                    });\n                }\n                else{\n                    //current child is a folder\n                    that.deleteFolderAndPathways(this, that);\n                }\n            });\n\n            this.undelegateEvents(); // Unbind all local event bindings\n\n            $(this.el).remove(); // Remove view from DOM\n\n            delete this.$el; // Delete the jQuery wrapped object variable\n            delete this.el; // Delete the variable reference to this node\n        },\n        handleNewSubFolder: function(event) {\n            event.stopPropagation();\n            this.setParents();\n            new NewPathwayFolder({el: '#modal-target', parentFolder: $(this.el).children('ol').first(), parentList: this.parentList});\n        },\n        handleMove: function(folder, path, that){\n            //if the folder is moved, or if a pathway is moved into this folder, pathway locations will need to be updated\n            var position = 0;\n            $(folder).children('ol').children().each(function(){\n                if ($(this).hasClass(\"pathrow-item\")){\n                    //update order\n                    position++;\n                    var locationData = { \"location\": path, \"position\": position}\n                    var canonical_id = $(\".path-row\", $(this)).attr(\"id\");\n                    that.handleMovedPath(canonical_id, locationData)\n                }\n                else {\n                    var new_path = path + \"/\" + $(\".pathway-folder-title\",$(this)).first().attr('name');\n                    that.handleMove(this, new_path, that);\n                }\n            });\n        },\n        handleMovedPath: function(canonical_id, locationData){\n            //update order\n            var data = {'canonical': canonical_id, 'customer_id': contextModel.get(\"customer_id\"), 'userid': contextModel.get(\"userid\")}\n            $.extend(data, contextModel.toParams(), data);\n            $.ajax({\n                type: 'POST',\n                dataType: 'json',\n                url: \"/update_pathway_location?\" + $.param(data),\n                data: JSON.stringify(locationData),\n                success: function () {\n                    console.log(\"pathway location updated\");\n                }\n            });\n        },\n        render: function(){\n            var that =this;\n            $(this.el).html(this.template(this.model.toJSON()));\n            $(this.el).on(\"change\", function(event){\n                event.stopPropagation();\n                that.handleMove($(that.el), that.setParents().join(\"/\"), that);\n            })\n            return this;\n        },\n        initialize: function(params){\n            this.model = params.model\n            this.parentList = params.parentList;\n            this.parentList.push(this.model.attributes.name);\n            //$.extend(this.parents, this.parents,[]);\n        },\n    });\n\n    return ruleRow;\n\n});\n\n","/*!\r\n * Nestable jQuery Plugin - Copyright (c) 2012 David Bushell - http://dbushell.com/\r\n * Dual-licensed under the BSD or MIT licenses\r\n */\r\n;(function($, window, document, undefined)\r\n{\r\n    var hasTouch = 'ontouchstart' in document.documentElement;\r\n\r\n    /**\r\n     * Detect CSS pointer-events property\r\n     * events are normally disabled on the dragging element to avoid conflicts\r\n     * https://github.com/ausi/Feature-detection-technique-for-pointer-events/blob/master/modernizr-pointerevents.js\r\n     */\r\n    var hasPointerEvents = (function()\r\n    {\r\n        var el    = document.createElement('div'),\r\n            docEl = document.documentElement;\r\n        if (!('pointerEvents' in el.style)) {\r\n            return false;\r\n        }\r\n        el.style.pointerEvents = 'auto';\r\n        el.style.pointerEvents = 'x';\r\n        docEl.appendChild(el);\r\n        var supports = window.getComputedStyle && window.getComputedStyle(el, '').pointerEvents === 'auto';\r\n        docEl.removeChild(el);\r\n        return !!supports;\r\n    })();\r\n\r\n    var eStart  = 'mousedown touchstart MSPointerDown pointerdown',//ACE\r\n        eMove   = 'mousemove touchmove MSPointerMove pointermove',//ACE\r\n        eEnd    = 'mouseup touchend touchcancel MSPointerUp MSPointerCancel pointerup pointercancel';//ACE\r\n\r\n    var defaults = {\r\n            listNodeName    : 'ol',\r\n            itemNodeName    : 'li:not(.history-row)',\r\n            rootClass       : 'dd',\r\n            listClass       : 'dd-list',\r\n            itemClass       : 'dd-item',\r\n            dragClass       : 'dd-dragel',\r\n            handleClass     : 'dd-handle',\r\n            collapsedClass  : 'dd-collapsed',\r\n            placeClass      : 'dd-placeholder',\r\n            noDragClass     : 'dd-nodrag',\r\n            emptyClass      : 'dd-empty',\r\n            expandBtnHTML   : '<button data-action=\"expand\" title=\"Expand\" class=\"show-hist\">expand</button>',\r\n            collapseBtnHTML : '<button data-action=\"collapse\" title=\"Collapse\">collapse</button>',\r\n            group           : 0,\r\n            maxDepth        : 5,\r\n            threshold       : 20\r\n        };\r\n\r\n    function Plugin(element, options)\r\n    {\r\n        this.w  = $(window);\r\n        this.el = $(element);\r\n        this.options = $.extend({}, defaults, options);\r\n        this.init();\r\n    }\r\n\r\n    Plugin.prototype = {\r\n\r\n        init: function()\r\n        {\r\n            var list = this;\r\n\r\n            list.reset();\r\n\r\n            list.el.data('nestable-group', this.options.group);\r\n\r\n            list.placeEl = $('<div class=\"' + list.options.placeClass + '\"/>');\r\n\r\n            $.each(this.el.find(list.options.itemNodeName), function(k, el) {\r\n                list.setParent($(el));\r\n            });\r\n\r\n            list.el.on('click', 'button', function(e) {\r\n                if (list.dragEl || ('button' in e && e.button !== 0)) {\r\n                    return;\r\n                }\r\n                var target = $(e.currentTarget),\r\n                    action = target.data('action'),\r\n                    item   = target.parent(list.options.itemNodeName);\r\n                if (action === 'collapse') {\r\n                    list.collapseItem(item);\r\n                }\r\n                if (action === 'expand') {\r\n                    list.expandItem(item);\r\n                }\r\n            });\r\n\r\n            var onStartEvent = function(e)\r\n            {\r\n\t\t\t\te = e.originalEvent;//ACE\r\n                var handle = $(e.target);\r\n                if (!handle.hasClass(list.options.handleClass)) {\r\n                    if (handle.closest('.' + list.options.noDragClass).length) {\r\n                        return;\r\n                    }\r\n                    handle = handle.closest('.' + list.options.handleClass);\r\n                }\r\n\t\t\t\t//ACE\r\n                if (!handle.length || list.dragEl || ('button' in e && e.button !== 0) || ('touches' in e && e.touches.length !== 1)) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                list.dragStart('touches' in e ? e.touches[0] : e);//ACE\r\n            };\r\n\r\n            var onMoveEvent = function(e)\r\n            {\r\n                if (list.dragEl) {\r\n\t\t\t\t\te = e.originalEvent;//ACE\r\n                    e.preventDefault();\r\n                    list.dragMove('touches' in e ? e.touches[0] : e);//ACE\r\n                }\r\n            };\r\n\r\n            var onEndEvent = function(e)\r\n            {\r\n\t\t\t\tif (list.dragEl) {\r\n\t\t\t\t\te = e.originalEvent;//ACE\r\n                    e.preventDefault();\r\n                    list.dragStop('touches' in e ? e.touches[0] : e);//ACE\r\n                }\r\n            };\r\n\r\n\t\t\t//ACE\r\n            /**if (hasTouch) {\r\n                list.el[0].addEventListener(eStart, onStartEvent, false);\r\n                window.addEventListener(eMove, onMoveEvent, false);\r\n                window.addEventListener(eEnd, onEndEvent, false);\r\n                //window.addEventListener(eCancel, onEndEvent, false);\r\n            } else {\r\n\t\t\t*/\r\n                list.el.on(eStart, onStartEvent);\r\n                list.w.on(eMove, onMoveEvent);\r\n                list.w.on(eEnd, onEndEvent);\r\n            //}\r\n\r\n        },\r\n\r\n        serialize: function()\r\n        {\r\n            var data,\r\n                depth = 0,\r\n                list  = this;\r\n                step  = function(level, depth)\r\n                {\r\n                    var array = [ ],\r\n                        items = level.children(list.options.itemNodeName);\r\n                    items.each(function()\r\n                    {\r\n                        var li   = $(this),\r\n                            item = $.extend({}, li.data()),\r\n                            sub  = li.children(list.options.listNodeName);\r\n                        if (sub.length) {\r\n                            item.children = step(sub, depth + 1);\r\n                        }\r\n                        array.push(item);\r\n                    });\r\n                    return array;\r\n                };\r\n            data = step(list.el.find(list.options.listNodeName).first(), depth);\r\n            return data;\r\n        },\r\n\r\n        serialise: function()\r\n        {\r\n            return this.serialize();\r\n        },\r\n\r\n        reset: function()\r\n        {\r\n            this.mouse = {\r\n                offsetX   : 0,\r\n                offsetY   : 0,\r\n                startX    : 0,\r\n                startY    : 0,\r\n                lastX     : 0,\r\n                lastY     : 0,\r\n                nowX      : 0,\r\n                nowY      : 0,\r\n                distX     : 0,\r\n                distY     : 0,\r\n                dirAx     : 0,\r\n                dirX      : 0,\r\n                dirY      : 0,\r\n                lastDirX  : 0,\r\n                lastDirY  : 0,\r\n                distAxX   : 0,\r\n                distAxY   : 0\r\n            };\r\n            this.moving     = false;\r\n            this.dragEl     = null;\r\n            this.dragRootEl = null;\r\n            this.dragDepth  = 0;\r\n            this.hasNewRoot = false;\r\n            this.pointEl    = null;\r\n        },\r\n\r\n        expandItem: function(li)\r\n        {\r\n            li.removeClass(this.options.collapsedClass);\r\n            li.children('[data-action=\"expand\"]').hide();\r\n            li.children('[data-action=\"collapse\"]').show();\r\n            li.children(this.options.listNodeName).show();\r\n        },\r\n\r\n        collapseItem: function(li)\r\n        {\r\n            var lists = li.children(this.options.listNodeName);\r\n            if (lists.length) {\r\n                li.addClass(this.options.collapsedClass);\r\n                li.children('[data-action=\"collapse\"]').hide();\r\n                li.children('[data-action=\"expand\"]').show();\r\n                li.children(this.options.listNodeName).hide();\r\n            }\r\n        },\r\n\r\n        expandAll: function()\r\n        {\r\n            var list = this;\r\n            list.el.find(list.options.itemNodeName).each(function() {\r\n                list.expandItem($(this));\r\n            });\r\n        },\r\n\r\n        collapseAll: function()\r\n        {\r\n            var list = this;\r\n            list.el.find(list.options.itemNodeName).each(function() {\r\n                list.collapseItem($(this));\r\n            });\r\n        },\r\n\r\n        setParent: function(li)\r\n        {\r\n            if (li.children(this.options.listNodeName).length) {\r\n                li.prepend($(this.options.expandBtnHTML));\r\n                li.prepend($(this.options.collapseBtnHTML));\r\n            }\r\n            li.children('[data-action=\"collapse\"]').hide();\r\n        },\r\n\r\n        unsetParent: function(li)\r\n        {\r\n            li.removeClass(this.options.collapsedClass);\r\n            li.children('[data-action]').remove();\r\n            li.children(this.options.listNodeName).remove();\r\n        },\r\n\r\n        dragStart: function(e)\r\n        {\r\n            var mouse    = this.mouse,\r\n                target   = $(e.target),\r\n                dragItem = target.closest(this.options.itemNodeName);\r\n\r\n            this.placeEl.css('height', dragItem.height());\r\n\r\n            mouse.offsetX = e.offsetX !== undefined ? e.offsetX : e.pageX - target.offset().left;\r\n            mouse.offsetY = e.offsetY !== undefined ? e.offsetY : e.pageY - target.offset().top;\r\n            mouse.startX = mouse.lastX = e.pageX;\r\n            mouse.startY = mouse.lastY = e.pageY;\r\n\r\n            this.dragRootEl = this.el;\r\n\r\n            this.dragEl = $(document.createElement(this.options.listNodeName)).addClass(this.options.listClass + ' ' + this.options.dragClass);\r\n            this.dragEl.css('width', dragItem.width());\r\n\r\n            // fix for zepto.js\r\n            //dragItem.after(this.placeEl).detach().appendTo(this.dragEl);\r\n            dragItem.after(this.placeEl);\r\n            dragItem[0].parentNode.removeChild(dragItem[0]);\r\n            dragItem.appendTo(this.dragEl);\r\n\r\n            $(document.body).append(this.dragEl);\r\n            this.dragEl.css({\r\n                'left' : e.pageX - mouse.offsetX,\r\n                'top'  : e.pageY - mouse.offsetY\r\n            });\r\n            // total depth of dragging item\r\n            var i, depth,\r\n                items = this.dragEl.find(this.options.itemNodeName);\r\n            for (i = 0; i < items.length; i++) {\r\n                depth = $(items[i]).parents(this.options.listNodeName).length;\r\n                if (depth > this.dragDepth) {\r\n                    this.dragDepth = depth;\r\n                }\r\n            }\r\n        },\r\n\r\n        dragStop: function(e)\r\n        {\r\n            // fix for zepto.js\r\n            //this.placeEl.replaceWith(this.dragEl.children(this.options.itemNodeName + ':first').detach());\r\n            var el = this.dragEl.children(this.options.itemNodeName).first();\r\n            el[0].parentNode.removeChild(el[0]);\r\n            this.placeEl.replaceWith(el);\r\n\r\n            this.dragEl.remove();\r\n            this.el.trigger('change');\r\n            if (this.hasNewRoot) {\r\n                this.dragRootEl.trigger('change');\r\n            }\r\n            el.trigger('change');\r\n            //el.parent().closest(\".sub-folder\").removeClass(\"collapsed\");\r\n            this.reset();\r\n        },\r\n\r\n        dragMove: function(e)\r\n        {\r\n            var list, parent, prev, next, depth,\r\n                opt   = this.options,\r\n                mouse = this.mouse;\r\n\r\n            this.dragEl.css({\r\n                'left' : e.pageX - mouse.offsetX,\r\n                'top'  : e.pageY - mouse.offsetY\r\n            });\r\n\r\n            // mouse position last events\r\n            mouse.lastX = mouse.nowX;\r\n            mouse.lastY = mouse.nowY;\r\n            // mouse position this events\r\n            mouse.nowX  = e.pageX;\r\n            mouse.nowY  = e.pageY;\r\n            // distance mouse moved between events\r\n            mouse.distX = mouse.nowX - mouse.lastX;\r\n            mouse.distY = mouse.nowY - mouse.lastY;\r\n            // direction mouse was moving\r\n            mouse.lastDirX = mouse.dirX;\r\n            mouse.lastDirY = mouse.dirY;\r\n            // direction mouse is now moving (on both axis)\r\n            mouse.dirX = mouse.distX === 0 ? 0 : mouse.distX > 0 ? 1 : -1;\r\n            mouse.dirY = mouse.distY === 0 ? 0 : mouse.distY > 0 ? 1 : -1;\r\n            // axis mouse is now moving on\r\n            var newAx   = Math.abs(mouse.distX) > Math.abs(mouse.distY) ? 1 : 0;\r\n\r\n            // do nothing on first move\r\n            if (!mouse.moving) {\r\n                mouse.dirAx  = newAx;\r\n                mouse.moving = true;\r\n                return;\r\n            }\r\n\r\n            // calc distance moved on this axis (and direction)\r\n            if (mouse.dirAx !== newAx) {\r\n                mouse.distAxX = 0;\r\n                mouse.distAxY = 0;\r\n            } else {\r\n                mouse.distAxX += Math.abs(mouse.distX);\r\n                if (mouse.dirX !== 0 && mouse.dirX !== mouse.lastDirX) {\r\n                    mouse.distAxX = 0;\r\n                }\r\n                mouse.distAxY += Math.abs(mouse.distY);\r\n                if (mouse.dirY !== 0 && mouse.dirY !== mouse.lastDirY) {\r\n                    mouse.distAxY = 0;\r\n                }\r\n            }\r\n            mouse.dirAx = newAx;\r\n\r\n            /**\r\n             * move horizontal\r\n             */\r\n            if (mouse.dirAx && mouse.distAxX >= opt.threshold) {\r\n                // reset move distance on x-axis for new phase\r\n                mouse.distAxX = 0;\r\n                prev = this.placeEl.prev(opt.itemNodeName);\r\n                // increase horizontal level if previous sibling exists and is not collapsed\r\n                if (mouse.distX > 0 && prev.length && !prev.hasClass(opt.collapsedClass)) {\r\n                    // cannot increase level when item above is collapsed\r\n                    list = prev.find(opt.listNodeName).last();\r\n                    // check if depth limit has reached\r\n                    depth = this.placeEl.parents(opt.listNodeName).length;\r\n                    if (depth + this.dragDepth <= opt.maxDepth) {\r\n                        // create new sub-level if one doesn't exist\r\n                        if (!list.length) {\r\n                            list = $('<' + opt.listNodeName + '/>').addClass(opt.listClass);\r\n                            list.append(this.placeEl);\r\n                            prev.append(list);\r\n                            this.setParent(prev);\r\n                        } else {\r\n                            // else append to next level up\r\n                            list = prev.children(opt.listNodeName).last();\r\n                            list.append(this.placeEl);\r\n                        }\r\n                    }\r\n                }\r\n                // decrease horizontal level\r\n                if (mouse.distX < 0) {\r\n                    // we can't decrease a level if an item preceeds the current one\r\n                    next = this.placeEl.next(opt.itemNodeName);\r\n                    if (!next.length) {\r\n                        parent = this.placeEl.parent();\r\n                        this.placeEl.closest(opt.itemNodeName).after(this.placeEl);\r\n                        if (!parent.children().length) {\r\n                            this.unsetParent(parent.parent());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            var isEmpty = false;\r\n\r\n            // find list item under cursor\r\n            if (!hasPointerEvents) {\r\n                this.dragEl[0].style.visibility = 'hidden';\r\n            }\r\n            this.pointEl = $(document.elementFromPoint(e.pageX - document.body.scrollLeft, e.pageY - (window.pageYOffset || document.documentElement.scrollTop)));\r\n            if (!hasPointerEvents) {\r\n                this.dragEl[0].style.visibility = 'visible';\r\n            }\r\n            if (this.pointEl.hasClass(opt.handleClass)) {\r\n                this.pointEl = this.pointEl.parent(opt.itemNodeName);\r\n            }\r\n            if (this.pointEl.hasClass(opt.emptyClass)) {\r\n                isEmpty = true;\r\n            }\r\n            else if (!this.pointEl.length || !this.pointEl.hasClass(opt.itemClass)) {\r\n                return;\r\n            }\r\n\r\n            // find parent list of item under cursor\r\n            var pointElRoot = this.pointEl.closest('.' + opt.rootClass),\r\n                isNewRoot   = this.dragRootEl.data('nestable-id') !== pointElRoot.data('nestable-id');\r\n\r\n            /**\r\n             * move vertical\r\n             */\r\n            if (!mouse.dirAx || isNewRoot || isEmpty) {\r\n                // check if groups match if dragging over new root\r\n                if (isNewRoot && opt.group !== pointElRoot.data('nestable-group')) {\r\n                    return;\r\n                }\r\n                // check depth limit\r\n                depth = this.dragDepth - 1 + this.pointEl.parents(opt.listNodeName).length;\r\n                if (depth > opt.maxDepth) {\r\n                    return;\r\n                }\r\n                var before = e.pageY < (this.pointEl.offset().top + this.pointEl.height() / 2);\r\n                    parent = this.placeEl.parent();\r\n                // if empty create new list to replace empty placeholder\r\n                if (isEmpty) {\r\n                    list = $(document.createElement(opt.listNodeName)).addClass(opt.listClass);\r\n                    list.append(this.placeEl);\r\n                    this.pointEl.replaceWith(list);\r\n                }\r\n                else if (before) {\r\n                    this.pointEl.before(this.placeEl);\r\n                }\r\n                else {\r\n                    this.pointEl.after(this.placeEl);\r\n                }\r\n                if (!parent.children().length) {\r\n                    this.unsetParent(parent.parent());\r\n                }\r\n                if (!this.dragRootEl.find(opt.itemNodeName).length) {\r\n                    this.dragRootEl.append('<div class=\"' + opt.emptyClass + '\"/>');\r\n                }\r\n                // parent root list has changed\r\n                if (isNewRoot) {\r\n                    this.dragRootEl = pointElRoot;\r\n                    this.hasNewRoot = this.el[0] !== this.dragRootEl[0];\r\n                }\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    $.fn.nestable = function(params)\r\n    {\r\n        var lists  = this,\r\n            retval = this;\r\n\r\n        lists.each(function()\r\n        {\r\n            var plugin = $(this).data(\"nestable\");\r\n\r\n            if (!plugin) {\r\n                $(this).data(\"nestable\", new Plugin(this, params));\r\n                $(this).data(\"nestable-id\", new Date().getTime());\r\n            } else {\r\n                if (typeof params === 'string' && typeof plugin[params] === 'function') {\r\n                    retval = plugin[params]();\r\n                }\r\n            }\r\n        });\r\n\r\n        return retval || lists;\r\n    };\r\n\r\n})(window.jQuery || window.Zepto, window, document);\r\n\ndefine(\"nestable\", [\"jquery\",\"jquery_ui\",\"bootstrap\"], function(){});\n\n","/*\n * jQuery UI Nested Sortable\n * v 2.0 / 29 oct 2012\n * http://mjsarfatti.com/sandbox/nestedSortable\n *\n * Depends on:\n *\t jquery.ui.sortable.js 1.10+\n *\n * Copyright (c) 2010-2013 Manuele J Sarfatti\n * Licensed under the MIT License\n * http://www.opensource.org/licenses/mit-license.php\n */\n(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine('nestedSortable',[\n\t\t\t\"jquery\",\n\t\t\t\"jquery_ui\"\n\t\t], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n}(function($) {\n\n\tfunction isOverAxis( x, reference, size ) {\n\t\treturn ( x > reference ) && ( x < ( reference + size ) );\n\t}\n\n\t$.widget(\"mjs.nestedSortable\", $.extend({}, $.ui.sortable.prototype, {\n\n\t\toptions: {\n\t\t\tdisableParentChange: false,\n\t\t\tdoNotClear: false,\n\t\t\texpandOnHover: 700,\n\t\t\tisAllowed: function(placeholder, placeholderParent, originalItem) { return true; },\n\t\t\tisTree: false,\n\t\t\tlistType: 'ol',\n\t\t\tmaxLevels: 0,\n\t\t\tprotectRoot: false,\n\t\t\trootID: null,\n\t\t\trtl: false,\n\t\t\tstartCollapsed: false,\n\t\t\ttabSize: 20,\n\n\t\t\tbranchClass: 'mjs-nestedSortable-branch',\n\t\t\tcollapsedClass: 'mjs-nestedSortable-collapsed',\n\t\t\tdisableNestingClass: 'mjs-nestedSortable-no-nesting',\n\t\t\terrorClass: 'mjs-nestedSortable-error',\n\t\t\texpandedClass: 'mjs-nestedSortable-expanded',\n\t\t\thoveringClass: 'mjs-nestedSortable-hovering',\n\t\t\tleafClass: 'mjs-nestedSortable-leaf',\n\t\t\tdisabledClass: 'mjs-nestedSortable-disabled'\n\t\t},\n\n\t\t_create: function() {\n\t\t\tthis.element.data('ui-sortable', this.element.data('mjs-nestedSortable'));\n\n\t\t\t// mjs - prevent browser from freezing if the HTML is not correct\n\t\t\tif (!this.element.is(this.options.listType))\n\t\t\t\tthrow new Error('nestedSortable: Please check that the listType option is set to your actual list type');\n\n\t\t\t// mjs - force 'intersect' tolerance method if we have a tree with expanding/collapsing functionality\n\t\t\tif (this.options.isTree && this.options.expandOnHover) {\n\t\t\t\tthis.options.tolerance = 'intersect';\n\t\t\t}\n\n\t\t\t$.ui.sortable.prototype._create.apply(this, arguments);\n\n\t\t\t// mjs - prepare the tree by applying the right classes (the CSS is responsible for actual hide/show functionality)\n\t\t\tif (this.options.isTree) {\n\t\t\t\tvar self = this;\n\t\t\t\t$(this.items).each(function() {\n\t\t\t\t\tvar $li = this.item;\n\t\t\t\t\tif ($li.children(self.options.listType).length || $li.hasClass('sub-folder')) {\n\t\t\t\t\t\t$li.addClass(self.options.branchClass);\n\t\t\t\t\t\t// expand/collapse class only if they have children\n\t\t\t\t\t\tif ( ! $li.hasClass( self.options.collapsedClass ) && ( ! $li.hasClass( self.options.expandedClass ) ) ) {\n\t\t\t\t\t\t\tif (self.options.startCollapsed) $li.addClass(self.options.collapsedClass);\n\t\t\t\t\t\t\telse $li.addClass(self.options.expandedClass);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$li.addClass(self.options.leafClass);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t_destroy: function() {\n\t\t\tthis.element\n\t\t\t\t.removeData(\"mjs-nestedSortable\")\n\t\t\t\t.removeData(\"ui-sortable\");\n\t\t\treturn $.ui.sortable.prototype._destroy.apply(this, arguments);\n\t\t},\n\n\t\t_mouseDrag: function(event) {\n\t\t\tvar i, item, itemElement, intersection,\n\t\t\t\to = this.options,\n\t\t\t\tscrolled = false;\n\n\t\t\t//Compute the helpers position\n\t\t\tthis.position = this._generatePosition(event);\n\t\t\tthis.positionAbs = this._convertPositionTo(\"absolute\");\n\n\t\t\tif (!this.lastPositionAbs) {\n\t\t\t\tthis.lastPositionAbs = this.positionAbs;\n\t\t\t}\n\n\t\t\t//Do scrolling\n\t\t\tif(this.options.scroll) {\n\t\t\t\tif(this.scrollParent[0] != document && this.scrollParent[0].tagName != 'HTML') {\n\n\t\t\t\t\tif((this.overflowOffset.top + this.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity) {\n\t\t\t\t\t\tthis.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop + o.scrollSpeed;\n\t\t\t\t\t} else if(event.pageY - this.overflowOffset.top < o.scrollSensitivity) {\n\t\t\t\t\t\tthis.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop - o.scrollSpeed;\n\t\t\t\t\t}\n\n\t\t\t\t\tif((this.overflowOffset.left + this.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity) {\n\t\t\t\t\t\tthis.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft + o.scrollSpeed;\n\t\t\t\t\t} else if(event.pageX - this.overflowOffset.left < o.scrollSensitivity) {\n\t\t\t\t\t\tthis.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft - o.scrollSpeed;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif(event.pageY - $(document).scrollTop() < o.scrollSensitivity) {\n\t\t\t\t\t\tscrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);\n\t\t\t\t\t} else if($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity) {\n\t\t\t\t\t\tscrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);\n\t\t\t\t\t}\n\n\t\t\t\t\tif(event.pageX - $(document).scrollLeft() < o.scrollSensitivity) {\n\t\t\t\t\t\tscrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);\n\t\t\t\t\t} else if($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity) {\n\t\t\t\t\t\tscrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif(scrolled !== false && $.ui.ddmanager && !o.dropBehaviour)\n\t\t\t\t\t$.ui.ddmanager.prepareOffsets(this, event);\n\t\t\t}\n\n\t\t\t//Regenerate the absolute position used for position checks\n\t\t\tthis.positionAbs = this._convertPositionTo(\"absolute\");\n\n\t\t\t// mjs - find the top offset before rearrangement,\n\t\t\tvar previousTopOffset = this.placeholder.offset().top;\n\n\t\t\t//Set the helper position\n\t\t\tif(!this.options.axis || this.options.axis !== \"y\") {\n\t\t\t\tthis.helper[0].style.left = this.position.left+\"px\";\n\t\t\t}\n\t\t\tif(!this.options.axis || this.options.axis !== \"x\") {\n\t\t\t\tthis.helper[0].style.top = this.position.top+\"px\";\n\t\t\t}\n\n\t\t\t// mjs - check and reset hovering state at each cycle\n\t\t\tthis.hovering = this.hovering ? this.hovering : null;\n\t\t\tthis.mouseentered = this.mouseentered ? this.mouseentered : false;\n\n\t\t\t// mjs - let's start caching some variables\n\t\t\tvar parentItem = (this.placeholder[0].parentNode.parentNode &&\n\t\t\t\t\t\t\t $(this.placeholder[0].parentNode.parentNode).closest('.ui-sortable').length)\n\t\t\t\t       \t\t\t? $(this.placeholder[0].parentNode.parentNode)\n\t\t\t\t       \t\t\t: null,\n\t\t\t    level = this._getLevel(this.placeholder),\n\t\t\t    childLevels = this._getChildLevels(this.helper);\n\n\t\t\tvar newList = document.createElement(o.listType);\n\n\t\t\t//Rearrange\n\t\t\tfor (i = this.items.length - 1; i >= 0; i--) {\n\n\t\t\t\t//Cache variables and intersection, continue if no intersection\n\t\t\t\titem = this.items[i];\n\t\t\t\titemElement = item.item[0];\n\t\t\t\tintersection = this._intersectsWithPointer(item);\n\t\t\t\tif (!intersection) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Only put the placeholder inside the current Container, skip all\n\t\t\t\t// items form other containers. This works because when moving\n\t\t\t\t// an item from one container to another the\n\t\t\t\t// currentContainer is switched before the placeholder is moved.\n\t\t\t\t//\n\t\t\t\t// Without this moving items in \"sub-sortables\" can cause the placeholder to jitter\n\t\t\t\t// beetween the outer and inner container.\n\t\t\t\tif (item.instance !== this.currentContainer) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// No action if intersected item is disabled \n\t\t\t\t// and the element above or below in the direction we're going is also disabled\n\t\t\t\tif (itemElement.className.indexOf(o.disabledClass) !== -1) {\n\t\t\t\t\t// Note: intersection hardcoded direction values from jquery.ui.sortable.js:_intersectsWithPointer\n\t\t\t\t\tif (intersection === 2) {\n\t\t\t\t\t\t// Going down\n\t\t\t\t\t\tvar itemAfter = this.items[i + 1];\n\t\t\t\t\t\tif (itemAfter && itemAfter.item[0].className.indexOf(o.disabledClass) !== -1){\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse if (intersection === 1) {\n\t\t\t\t\t\t// Going up\n\t\t\t\t\t\tvar itemBefore = this.items[i - 1];\n\t\t\t\t\t\tif (itemBefore && itemBefore.item[0].className.indexOf(o.disabledClass) !== -1){\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// cannot intersect with itself\n\t\t\t\t// no useless actions that have been done before\n\t\t\t\t// no action if the item moved is the parent of the item checked\n\t\t\t\tif (itemElement !== this.currentItem[0] &&\n\t\t\t\t\tthis.placeholder[intersection === 1 ? \"next\" : \"prev\"]()[0] !== itemElement &&\n\t\t\t\t\t!$.contains(this.placeholder[0], itemElement) &&\n\t\t\t\t\t(this.options.type === \"semi-dynamic\" ? !$.contains(this.element[0], itemElement) : true)\n\t\t\t\t) {\n\n\t\t\t\t\t// mjs - we are intersecting an element: trigger the mouseenter event and store this state\n\t\t\t\t\tif (!this.mouseentered) {\n\t\t\t\t\t\t$(itemElement).mouseenter();\n\t\t\t\t\t\tthis.mouseentered = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// mjs - if the element has children and they are hidden, show them after a delay (CSS responsible)\n\t\t\t\t\tif (o.isTree && $(itemElement).hasClass(o.collapsedClass) && o.expandOnHover) {\n\t\t\t\t\t\tif (!this.hovering) {\n\t\t\t\t\t\t\t$(itemElement).addClass(o.hoveringClass);\n\t\t\t\t\t\t\tvar self = this;\n\t\t\t\t\t\t\tthis.hovering = window.setTimeout(function() {\n\t\t\t\t\t\t\t\t$(itemElement).removeClass(o.collapsedClass).addClass(o.expandedClass);\n\t\t\t\t\t\t\t\tself.refreshPositions();\n\t\t\t\t\t\t\t\tself._trigger(\"expand\", event, self._uiHash());\n\t\t\t\t\t\t\t}, o.expandOnHover);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.direction = intersection == 1 ? \"down\" : \"up\";\n\n\t\t\t\t\t// mjs - rearrange the elements and reset timeouts and hovering state\n\t\t\t\t\tif (this.options.tolerance == \"pointer\" || this._intersectsWithSides(item)) {\n\t\t\t\t\t\t$(itemElement).mouseleave();\n\t\t\t\t\t\tthis.mouseentered = false;\n\t\t\t\t\t\t$(itemElement).removeClass(o.hoveringClass);\n\t\t\t\t\t\tthis.hovering && window.clearTimeout(this.hovering);\n\t\t\t\t\t\tthis.hovering = null;\n\n\t\t\t\t\t\t// mjs - do not switch container if it's a root item and 'protectRoot' is true\n\t\t\t\t\t\t// or if it's not a root item but we are trying to make it root\n\t\t\t\t\t\tif (o.protectRoot\n\t\t\t\t\t\t\t&& ! (this.currentItem[0].parentNode == this.element[0] // it's a root item\n\t\t\t\t\t\t\t\t  && itemElement.parentNode != this.element[0]) // it's intersecting a non-root item\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (this.currentItem[0].parentNode != this.element[0]\n\t\t\t\t\t\t\t   \t&& itemElement.parentNode == this.element[0]\n\t\t\t\t\t\t\t) {\n\n\t\t\t\t\t\t\t\tif ( ! $(itemElement).children(o.listType).length) {\n\t\t\t\t\t\t\t\t\titemElement.appendChild(newList);\n\t\t\t\t\t\t\t\t\to.isTree && $(itemElement).removeClass(o.leafClass).addClass(o.branchClass + ' ' + o.expandedClass);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar a = this.direction === \"down\" ? $(itemElement).prev().children(o.listType) : $(itemElement).children(o.listType);\n\t\t\t\t\t\t\t\tif (a[0] !== undefined) {\n\t\t\t\t\t\t\t\t\tthis._rearrange(event, null, a);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._rearrange(event, item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if ( ! o.protectRoot) {\n\t\t\t\t\t\t\tthis._rearrange(event, item);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Clear emtpy ul's/ol's\n\t\t\t\t\tthis._clearEmpty(itemElement);\n\n\t\t\t\t\tthis._trigger(\"change\", event, this._uiHash());\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// mjs - to find the previous sibling in the list, keep backtracking until we hit a valid list item.\n\t\t\tvar previousItem = this.placeholder[0].previousSibling ? $(this.placeholder[0].previousSibling) : null;\n\t\t\tif (previousItem != null) {\n\t\t\t\twhile (previousItem[0].nodeName.toLowerCase() != 'li' || previousItem[0].className.indexOf(o.disabledClass) !== -1 || previousItem[0] == this.currentItem[0] || previousItem[0] == this.helper[0]) {\n\t\t\t\t\tif (previousItem[0].previousSibling) {\n\t\t\t\t\t\tpreviousItem = $(previousItem[0].previousSibling);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpreviousItem = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// mjs - to find the next sibling in the list, keep stepping forward until we hit a valid list item.\n\t\t\tvar nextItem = this.placeholder[0].nextSibling ? $(this.placeholder[0].nextSibling) : null;\n\t\t\tif (nextItem != null) {\n\t\t\t\twhile (nextItem[0].nodeName.toLowerCase() != 'li' || nextItem[0].className.indexOf(o.disabledClass) !== -1 || nextItem[0] == this.currentItem[0] || nextItem[0] == this.helper[0]) {\n\t\t\t\t\tif (nextItem[0].nextSibling) {\n\t\t\t\t\t\tnextItem = $(nextItem[0].nextSibling);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextItem = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.beyondMaxLevels = 0;\n\n\t\t\t// mjs - if the item is moved to the left, send it one level up but only if it's at the bottom of the list\n\t\t\tif (parentItem != null\n\t\t\t\t&& nextItem == null\n\t\t\t\t&& ! (o.protectRoot && parentItem[0].parentNode == this.element[0])\n\t\t\t\t&&\n\t\t\t\t\t(o.rtl && (this.positionAbs.left + this.helper.outerWidth() > parentItem.offset().left + parentItem.outerWidth())\n\t\t\t\t\t || ! o.rtl && (this.positionAbs.left < parentItem.offset().left))\n\t\t\t) {\n\n\t\t\t\tparentItem.after(this.placeholder[0]);\n\t\t\t\tif ((o.isTree && parentItem.children(o.listItem).children('li:visible:not(.ui-sortable-helper)').length < 1) &&\n                    !parentItem.hasClass('sub-folder')) {\n\t\t\t\t\tparentItem.removeClass(this.options.branchClass + ' ' + this.options.expandedClass)\n\t\t\t\t\t\t\t  .addClass(this.options.leafClass);\n\t\t\t\t}\n\t\t\t\tthis._clearEmpty(parentItem[0]);\n\t\t\t\tthis._trigger(\"change\", event, this._uiHash());\n\t\t\t}\n\t\t\t// mjs - if the item is below a sibling and is moved to the right, make it a child of that sibling\n\t\t\telse if (previousItem != null\n\t\t\t\t\t && ! previousItem.hasClass(o.disableNestingClass)\n\t\t\t\t\t &&\n\t\t\t\t\t\t(previousItem.children(o.listType).length && previousItem.children(o.listType).is(':visible')\n\t\t\t\t\t\t || ! previousItem.children(o.listType).length)\n\t\t\t\t\t && ! (o.protectRoot && this.currentItem[0].parentNode == this.element[0])\n\t\t\t\t\t &&\n\t\t\t\t\t\t(o.rtl && (this.positionAbs.left + this.helper.outerWidth() < previousItem.offset().left + previousItem.outerWidth() - o.tabSize)\n\t\t\t\t\t\t || ! o.rtl && (this.positionAbs.left > previousItem.offset().left + o.tabSize))\n\t\t\t) {\n\n\t\t\t\tthis._isAllowed(previousItem, level, level+childLevels+1);\n\n\t\t\t\tif (!previousItem.children(o.listType).length || previousItem.hasClass('sub-folder')) {\n\t\t\t\t\tpreviousItem[0].appendChild(newList);\n\t\t\t\t\to.isTree && previousItem.removeClass(o.leafClass).addClass(o.branchClass + ' ' + o.expandedClass);\n\t\t\t\t}\n\n\t\t        // mjs - if this item is being moved from the top, add it to the top of the list.\n\t\t        if (previousTopOffset && (previousTopOffset <= previousItem.offset().top)) {\n\t\t        \tpreviousItem.children(o.listType).prepend(this.placeholder);\n\t\t        }\n\t\t        // mjs - otherwise, add it to the bottom of the list.\n\t\t        else {\n\t\t\t\t\tpreviousItem.children(o.listType)[0].appendChild(this.placeholder[0]);\n\t\t\t\t}\n\n\t\t\t\tthis._trigger(\"change\", event, this._uiHash());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._isAllowed(parentItem, level, level+childLevels);\n\t\t\t}\n\n\t\t\t//Post events to containers\n\t\t\tthis._contactContainers(event);\n\n\t\t\t//Interconnect with droppables\n\t\t\tif($.ui.ddmanager) {\n\t\t\t\t$.ui.ddmanager.drag(this, event);\n\t\t\t}\n\n\t\t\t//Call callbacks\n\t\t\tthis._trigger('sort', event, this._uiHash());\n\n\t\t\tthis.lastPositionAbs = this.positionAbs;\n\t\t\treturn false;\n\n\t\t},\n\n\t\t_mouseStop: function(event, noPropagation) {\n\n\t\t\t// mjs - if the item is in a position not allowed, send it back\n\t\t\tif (this.beyondMaxLevels) {\n\n\t\t\t\tthis.placeholder.removeClass(this.options.errorClass);\n\n\t\t\t\tif (this.domPosition.prev) {\n\t\t\t\t\t$(this.domPosition.prev).after(this.placeholder);\n\t\t\t\t} else {\n\t\t\t\t\t$(this.domPosition.parent).prepend(this.placeholder);\n\t\t\t\t}\n\n\t\t\t\tthis._trigger(\"revert\", event, this._uiHash());\n\n\t\t\t}\n\n\n\t\t\t// mjs - clear the hovering timeout, just to be sure\n\t\t\t$('.'+this.options.hoveringClass).mouseleave().removeClass(this.options.hoveringClass);\n\t\t\tthis.mouseentered = false;\n\t\t\tthis.hovering && window.clearTimeout(this.hovering);\n\t\t\tthis.hovering = null;\n\n\t\t\t$.ui.sortable.prototype._mouseStop.apply(this, arguments);\n\t\t\t\n\t\t\tvar pid = $(this.domPosition.parent).parent().attr(\"id\");\n\t\t\tvar sort = this.domPosition.prev ? $(this.domPosition.prev).next().index() : 0;\n\t\t\t\n\t\t\tif(!(pid == this._uiHash().item.parent().parent().attr(\"id\") && \n\t\t\t\tsort == this._uiHash().item.index())) {\n\t\t\t\tthis._trigger(\"relocate\", event, this._uiHash());\n\t\t\t}\n\n\t\t},\n\n\t\t// mjs - this function is slightly modified to make it easier to hover over a collapsed element and have it expand\n\t\t_intersectsWithSides: function(item) {\n\n\t\t\tvar half = this.options.isTree ? .8 : .5;\n\n\t\t\tvar isOverBottomHalf = isOverAxis(this.positionAbs.top + this.offset.click.top, item.top + (item.height*half), item.height),\n\t\t\t\tisOverTopHalf = isOverAxis(this.positionAbs.top + this.offset.click.top, item.top - (item.height*half), item.height),\n\t\t\t\tisOverRightHalf = isOverAxis(this.positionAbs.left + this.offset.click.left, item.left + (item.width/2), item.width),\n\t\t\t\tverticalDirection = this._getDragVerticalDirection(),\n\t\t\t\thorizontalDirection = this._getDragHorizontalDirection();\n\n\t\t\tif (this.floating && horizontalDirection) {\n\t\t\t\treturn ((horizontalDirection == \"right\" && isOverRightHalf) || (horizontalDirection == \"left\" && !isOverRightHalf));\n\t\t\t} else {\n\t\t\t\treturn verticalDirection && ((verticalDirection == \"down\" && isOverBottomHalf) || (verticalDirection == \"up\" && isOverTopHalf));\n\t\t\t}\n\n\t\t},\n\n\t\t_contactContainers: function(event) {\n\n\t\t\tif (this.options.protectRoot && this.currentItem[0].parentNode == this.element[0] ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$.ui.sortable.prototype._contactContainers.apply(this, arguments);\n\n\t\t},\n\n\t\t_clear: function(event, noPropagation) {\n\n\t\t\t$.ui.sortable.prototype._clear.apply(this, arguments);\n\n\t\t\t// mjs - clean last empty ul/ol\n\t\t\tfor (var i = this.items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = this.items[i].item[0];\n\t\t\t\tthis._clearEmpty(item);\n\t\t\t}\n\n\t\t},\n\n\t\tserialize: function(options) {\n\n\t\t\tvar o = $.extend({}, this.options, options),\n\t\t\t\titems = this._getItemsAsjQuery(o && o.connected),\n\t\t\t    str = [];\n\n\t\t\t$(items).each(function() {\n\t\t\t\tvar res = ($(o.item || this).attr(o.attribute || 'id') || '')\n\t\t\t\t\t\t.match(o.expression || (/(.+)[-=_](.+)/)),\n\t\t\t\t    pid = ($(o.item || this).parent(o.listType)\n\t\t\t\t\t\t.parent(o.items)\n\t\t\t\t\t\t.attr(o.attribute || 'id') || '')\n\t\t\t\t\t\t.match(o.expression || (/(.+)[-=_](.+)/));\n\n\t\t\t\tif (res) {\n\t\t\t\t\tstr.push(((o.key || res[1]) + '[' + (o.key && o.expression ? res[1] : res[2]) + ']')\n\t\t\t\t\t\t+ '='\n\t\t\t\t\t\t+ (pid ? (o.key && o.expression ? pid[1] : pid[2]) : o.rootID));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif(!str.length && o.key) {\n\t\t\t\tstr.push(o.key + '=');\n\t\t\t}\n\n\t\t\treturn str.join('&');\n\n\t\t},\n\n\t\ttoHierarchy: function(options) {\n\n\t\t\tvar o = $.extend({}, this.options, options),\n\t\t\t\tsDepth = o.startDepthCount || 0,\n\t\t\t    ret = [];\n\n\t\t\t$(this.element).children(o.items).each(function () {\n\t\t\t\tvar level = _recursiveItems(this);\n\t\t\t\tret.push(level);\n\t\t\t});\n\n\t\t\treturn ret;\n\n\t\t\tfunction _recursiveItems(item) {\n\t\t\t\tvar id = ($(item).attr(o.attribute || 'id') || '').match(o.expression || (/(.+)[-=_](.+)/));\n\t\t\t\tif (id) {\n\t\t\t\t\tvar currentItem = {\"id\" : id[2]};\n\t\t\t\t\tif ($(item).children(o.listType).children(o.items).length > 0) {\n\t\t\t\t\t\tcurrentItem.children = [];\n\t\t\t\t\t\t$(item).children(o.listType).children(o.items).each(function() {\n\t\t\t\t\t\t\tvar level = _recursiveItems(this);\n\t\t\t\t\t\t\tcurrentItem.children.push(level);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\ttoArray: function(options) {\n\n\t\t\tvar o = $.extend({}, this.options, options),\n\t\t\t\tsDepth = o.startDepthCount || 0,\n\t\t\t    ret = [],\n\t\t\t    left = 1;\n\n\t\t\tif (!o.excludeRoot) {\n\t\t\t\tret.push({\n\t\t\t\t\t\"item_id\": o.rootID,\n\t\t\t\t\t\"parent_id\": null,\n\t\t\t\t\t\"depth\": sDepth,\n\t\t\t\t\t\"left\": left,\n\t\t\t\t\t\"right\": ($(o.items, this.element).length + 1) * 2\n\t\t\t\t});\n\t\t\t\tleft++\n\t\t\t}\n\n\t\t\t$(this.element).children(o.items).each(function () {\n\t\t\t\tleft = _recursiveArray(this, sDepth + 1, left);\n\t\t\t});\n\n\t\t\tret = ret.sort(function(a,b){ return (a.left - b.left); });\n\n\t\t\treturn ret;\n\n\t\t\tfunction _recursiveArray(item, depth, left) {\n\n\t\t\t\tvar right = left + 1,\n\t\t\t\t    id,\n\t\t\t\t    pid;\n\n\t\t\t\tif ($(item).children(o.listType).children(o.items).length > 0) {\n\t\t\t\t\tdepth ++;\n\t\t\t\t\t$(item).children(o.listType).children(o.items).each(function () {\n\t\t\t\t\t\tright = _recursiveArray($(this), depth, right);\n\t\t\t\t\t});\n\t\t\t\t\tdepth --;\n\t\t\t\t}\n\n\t\t\t\tid = ($(item).attr(o.attribute || 'id')).match(o.expression || (/(.+)[-=_](.+)/));\n\n\t\t\t\tif (depth === sDepth + 1) {\n\t\t\t\t\tpid = o.rootID;\n\t\t\t\t} else {\n\t\t\t\t\tvar parentItem = ($(item).parent(o.listType)\n\t\t\t\t\t\t\t\t\t\t\t .parent(o.items)\n\t\t\t\t\t\t\t\t\t\t\t .attr(o.attribute || 'id'))\n\t\t\t\t\t\t\t\t\t\t\t .match(o.expression || (/(.+)[-=_](.+)/));\n\t\t\t\t\tpid = parentItem[2];\n\t\t\t\t}\n\n\t\t\t\tif (id) {\n\t\t\t\t\t\tret.push({\"item_id\": id[2], \"parent_id\": pid, \"depth\": depth, \"left\": left, \"right\": right});\n\t\t\t\t}\n\n\t\t\t\tleft = right + 1;\n\t\t\t\treturn left;\n\t\t\t}\n\n\t\t},\n\n\t\t_clearEmpty: function(item) {\n\t\t\tvar o = this.options;\n\n\t\t\tvar emptyList = $(item).children(o.listType);\n\n\t\t\tif (emptyList.length && !emptyList.children().length && !o.doNotClear && !$(item).hasClass('sub-folder')) {\n\t\t\t\to.isTree && $(item).removeClass(o.branchClass + ' ' + o.expandedClass).addClass(o.leafClass);\n\t\t\t\temptyList.remove();\n\t\t\t} else if (o.isTree && (emptyList.length && emptyList.children().length && emptyList.is(':visible'))) {\n\t\t\t\t$(item).removeClass(o.leafClass).addClass(o.branchClass + ' ' + o.expandedClass);\n\t\t\t} else if (o.isTree && emptyList.length && emptyList.children().length && !emptyList.is(':visible')) {\n\t\t\t\t$(item).removeClass(o.leafClass).addClass(o.branchClass + ' ' + o.collapsedClass);\n\t\t\t}else if (o.isTree && $(item).hasClass('sub-folder')) {\n\t\t\t\t$(item).removeClass(o.leafClass).addClass(o.branchClass + ' ' + o.collapsedClass);\n\t\t\t}\n\n\t\t},\n\n\t\t_getLevel: function(item) {\n\n\t\t\tvar level = 1;\n\n\t\t\tif (this.options.listType) {\n\t\t\t\tvar list = item.closest(this.options.listType);\n\t\t\t\twhile (list && list.length > 0 &&\n                    \t!list.is('.ui-sortable')) {\n\t\t\t\t\tlevel++;\n\t\t\t\t\tlist = list.parent().closest(this.options.listType);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn level;\n\t\t},\n\n\t\t_getChildLevels: function(parent, depth) {\n\t\t\tvar self = this,\n\t\t\t    o = this.options,\n\t\t\t    result = 0;\n\t\t\tdepth = depth || 0;\n\n\t\t\t$(parent).children(o.listType).children(o.items).each(function (index, child) {\n\t\t\t\t\tresult = Math.max(self._getChildLevels(child, depth + 1), result);\n\t\t\t});\n\n\t\t\treturn depth ? result + 1 : result;\n\t\t},\n\n\t\t_isAllowed: function(parentItem, level, levels) {\n\t\t\tvar o = this.options,\n\t\t\t\tmaxLevels = this.placeholder.closest('.ui-sortable').nestedSortable('option', 'maxLevels'); // this takes into account the maxLevels set to the recipient list\n\n\t\t\t // Check if the parent has changed to prevent it, when o.disableParentChange is true\n\t\t\tvar oldParent = this.currentItem.parent().parent();\n\t\t\tvar disabledByParentchange = o.disableParentChange && (\n\t\t\t\tparentItem !== null && !oldParent.is(parentItem)//From somewhere to somewhere else, except the root\n\t\t\t||\tparentItem === null && oldParent.is('li')\t//From somewhere to the root\n\t\t\t);\n\t\t\t// mjs - is the root protected?\n\t\t\t// mjs - are we nesting too deep?\n\t\t\tif (disabledByParentchange || ! o.isAllowed(this.placeholder, parentItem, this.currentItem)) {\n\t\t\t\t\tthis.placeholder.addClass(o.errorClass);\n\t\t\t\t\tif (maxLevels < levels && maxLevels != 0) {\n\t\t\t\t\t\tthis.beyondMaxLevels = levels - maxLevels;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.beyondMaxLevels = 1;\n\t\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (maxLevels < levels && maxLevels != 0) {\n\t\t\t\t\tthis.placeholder.addClass(o.errorClass);\n\t\t\t\t\tthis.beyondMaxLevels = levels - maxLevels;\n\t\t\t\t} else {\n\t\t\t\t\tthis.placeholder.removeClass(o.errorClass);\n\t\t\t\t\tthis.beyondMaxLevels = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}));\n\n\t$.mjs.nestedSortable.prototype.options = $.extend({}, $.ui.sortable.prototype.options, $.mjs.nestedSortable.prototype.options);\n}));\n\n","/**\n * Created by Asmaa Aljuhani on 8/7/14.\n */\n\ndefine('widgets/pathway/pathwaysList.js',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n\n    'pathway/models/pathwayCollection',\n    'pathway/models/treeModel',\n    'pathway/modalViews/newPathway',\n\n    'pathway/singleRows/pathRow',\n    'text!templates/pathway/pathwaysList.html',\n\n    'pathway/modalViews/newPathwayFolder',\n    'pathway/singleRows/folderRow',\n    'globalmodels/sidebarModel',\n        'nestable',\n    'nestedSortable'\n\n\n], function ($, _, Backbone,  contextModel, curCollection, curTree,  NewPathway, PathRow, pathwaysListTemplate, newPathwayFolder, FolderRow, sidebarModel) {\n\n    var PathwaysList = Backbone.View.extend({\n        template: _.template(pathwaysListTemplate),\n        events: {\n            //'click #newpath-button': 'handle_newPath',\n            'click #add-base-pathway': 'handle_newPath',\n            'click #save-button': 'handle_save',\n            'click #paths-list-add-folder': 'handle_new_folder',\n            'change .mvn-importpath': 'importPathway'\n        },\n        initialize: function(){\n            contextModel.on('change:page', function () {\n                    if (contextModel.get('page') != 'pathEditor') {\n                        this.$el.hide()\n                    } else {\n                        this.$el.show()\n                    }\n                }, this)\n                sidebarModel.addOption('Pathway Mgmt')\n            //curCollection.on('sync', this.render, this)\n            curCollection.bind('add', this.addNewPathway, this);\n\n            this.render();\n        },\n        renderFolder: function(folderName, children, parentFolder, that) {\n            var thisModel = new Backbone.Model({name: folderName});\n            var thisRow = new FolderRow({model: thisModel})\n            parentFolder.append(thisRow.render().$el);\n            $.each(children, (function(index, value){\n                that.renderFolder(index, value, thisRow.$el, that);\n            }));\n        },\n        addNewPathway: function(model){\n            this.insertPathway(model, true);\n        },\n        importPathway: function(){\n            var input = $('.mvn-importpath')\n            file = input.get(0).files[0];\n            if (file) {\n                var reader = new FileReader();\n                reader.readAsText(file, \"UTF-8\");\n                reader.onload = function (evt) {\n                    try{\n                        var importedPath = JSON.parse(evt.target.result);\n                        curTree.loadNewPathway(importedPath, {toImport: true})\n                    }\n                    catch(e){\n                        alert(\"The format of the file doesn't match Pathway format. Please try another file\");\n                    }\n\n                }\n                reader.onerror = function (evt) {\n                    alert('error reading file')\n                }\n                input.wrap('<form>').closest('form').get(0).reset();\n                input.unwrap();\n            }\n        },\n        insertPathway: function(model, newlyAdded){\n            //given a pathway's location, add it to the proper folder; if folder doesn't exist, create it\n\n            var currentEl = $(\"#avail-paths-list\");\n            var path = model.get('folder');\n\n            //if path isn't specified, simply add pathway to the top level\n            if (path!=null && path!=\"\") {\n                var folders = path.split('/');\n\n                for (var i = 0; i < folders.length; i++) {\n                    var foundFolder = false;\n                    $.each(currentEl.children(\"li\"), function () {\n                        var title = $(this).children(\".pathway-folder-title\").attr(\"name\");\n                        if (title) {\n                            if (title == folders[i]) {\n                                currentEl = $(this).children(\"ol\");\n                                foundFolder = true;\n                                return false;\n                            }\n                        }\n                    });\n                    if (foundFolder) {\n                        //folder exists\n                        continue;\n                    }\n                    else {\n                        //folder doesn't exist, so create it\n                        var thisModel = new Backbone.Model({name: folders[i]});\n                        var thisRow = new FolderRow({model: thisModel, parentList: folders.slice(0,i)})\n                        var lastFolder = currentEl.children('.sub-folder').last();\n                        if (lastFolder.length){\n                            $(thisRow.render().$el).insertAfter(lastFolder);\n                        }\n                        else {\n                            currentEl.prepend(thisRow.render().$el);\n                        }\n                        currentEl = $(thisRow.el).children(\"ol\");\n                    }\n                }\n            }\n            //create new pathway row\n            var thisModel = new Backbone.Model({id: model.get('pathid'), name: model.get('name'), canonical: model.get(\"canonical\"), enabled: model.get(\"enabled\")})\n            var pathRow = new PathRow({model: thisModel})\n\n            $(currentEl).append(pathRow.render().$el)\n            if (newlyAdded) {\n                //open folder and select the pathway if this has been added by the user\n                pathRow.handleSelect();\n                $(currentEl).closest(\"li\").switchClass(\"mjs-nestedSortable-collapsed\", \"mjs-nestedSortable-expanded\");\n            }\n        },\n        render: function(){\n            var that = this;\n            this.$el.html(this.template());                    \n            if (contextModel.get('page') != 'pathEditor') {\n                this.$el.hide()\n            }\n            var appendEl =  $('#avail-paths-list', this.$el)\n\n            _.each(curCollection.models, function(cur){\n                that.insertPathway(cur, false);\n            }, this)\n\n            curCollection.makeSortable();\n\n            $(this.el).on(\"change\", function(event){\n                event.stopPropagation();\n                that.handleChange($(\"#avail-paths-list\"), \"\", that);\n            })\n        },\n        handle_new_folder: function() {\n            a = new newPathwayFolder({el: '#modal-target'});\n        },\n        handle_newPath: function () {\n         //   a = new NewPathway({el: '#modal-target'});\n            a = new NewPathway({el: '#modal-target'});\n        },\n        handle_save: function(){\n            curTree.save()\n        },\n        handleMovedPath: function(canonical_id, locationData){\n            //update order\n            var data = {'canonical': canonical_id, 'customer_id': contextModel.get(\"customer_id\"), 'userid': contextModel.get(\"userid\")}\n            $.extend(data, contextModel.toParams(), data);\n            $.ajax({\n                type: 'POST',\n                dataType: 'json',\n                url: \"/update_pathway_location?\" + $.param(data),\n                data: JSON.stringify(locationData),\n                success: function () {\n                    console.log(\"pathway location updated\");\n                }\n            });\n        },\n        handleChange: function(folder, path, that){\n            var position = 0;\n            $(folder).children().each(function(){\n                if ($(this).hasClass(\"pathrow-item\")){\n                    //update order\n                    position++;\n                    var locationData = { \"location\": path, \"position\": position}\n                    var canonical_id = $(\".path-row\", $(this)).attr(\"id\");\n                    that.handleMovedPath(canonical_id, locationData)\n                }\n            });\n        },\n    });\n    return PathwaysList;\n});\n\n","define('widgets/pathway/triggerEditor.js',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    'globalmodels/contextModel',\n    'globalmodels/layoutModel',\n    'pathway/modalViews/detailEditor',\n    'pathway/internalViews/detailGroup',\n    'pathway/models/treeModel',\n    'Helpers',\n    'text!templates/pathway/detailSection.html',\n    'text!templates/pathway/disjoinedGroups.html',\n    'bootstrapswitch'\n\n\n], function ($, _, Backbone, contextModel, layoutModel, detailEditor, DetailGroup, curTree, helpers, detailSection, disjoinedGroupTemplate) {\n    var printGroup = function (key, curGroup, location) {\n        require(['text!/templates/pathway/details/' + key + 'Detail.html'], function (key) {\n            return  function (curTemplate) {\n                //load the list of details of this type\n                var toList = curGroup.get('details').get(key);\n                var toTemplate = _.template(curTemplate);\n                var sectionTemplate = _.template(detailSection);\n\n                location.append(sectionTemplate());\n\n                //create a new detail group for this detail type, and send it the collection of details of this type\n                var cur = new DetailGroup({group: curGroup, el: $('.items').last(), lineTemplate: toTemplate, list: toList, type: key})\n\n                cur.render();\n\n\n            };\n        }(key));\n\n    }\n    var ruleWizard = Backbone.View.extend({\n\n        el: '#modal-target',\n\n        initialize: function (params) {\n            this.template = _.template(params.template)\n            var that = this\n\n            contextModel.on('change:page', function () {\n                if (contextModel.get('page') == 'triggerEditor') {\n                    this.$el.show()\n                    this.render()\n                    layoutModel.set('fluidContent', false)\n                } else {\n                    this.$el.hide()\n                }\n            }, this)\n            if (contextModel.get('page') == 'triggerEditor') {\n                this.$el.show()\n                layoutModel.set('fluidContent', false)\n\n            } else {\n                this.$el.hide()\n            }\n            this.render()\n\n\n        },\n        render: function () {\n            var that = this\n            curTree.once('sync', function () {\n                that.render()\n            })\n\n            this.$el.html(this.template())\n            $('#back-to-editor').on('click', function () {\n                Backbone.history.navigate(\"pathwayeditor/\" + contextModel.get('pathid') + \"/node/\" + contextModel.get('code'), {trigger: true});\n            })\n\n            $('.createButton').draggable({ revert: true })\n            $('#add-group-button').on('click', function () {\n\n                curTree.get('triggers').addGroup(\"and\")\n\n\n            })\n            var groupView = Backbone.View.extend({\n                template: _.template(disjoinedGroupTemplate),\n                initialize: function (param) {\n                    this.group = param.group\n\n                },\n                render: function () {\n                    var self = this;\n                    this.$el.css({'border-style': 'solid', 'border-width': '4px'})\n                    this.$el.droppable({\n                        drop: function (event, ui) {\n                            var detailType = ui.draggable[0].id\n\n                            require(['text!templates/pathway/details/' + detailType + \"_editor.html\"], function (template) {\n\n                                var curEditor = new detailEditor({group: self.group, template: _.template(template), model: new Backbone.Model(), newDetail: true, el: $('#detailed-trigger-modal'), triggerNode: that.triggerNode, type: detailType})\n\n                                curEditor.render()\n                            })\n\n\n                        },\n                        activeClass: \"activeDrop\",\n                        hoverClass: \"hoverDrop\"\n                    })\n\n\n                    var params = {relationship: this.group.get('relationship'), groupID: this.group.cid}\n                    this.$el.html(this.template(params))\n\n                    $('.group-delete', this.$el).on('click', function () {\n                        curTree.get('triggers').remove(self.group)\n                    })\n\n                    $(\".toggles\", this.$el).bootstrapSwitch()\n                    $(\".toggles\", this.$el).bootstrapSwitch('onText', \"Any\")\n                    $(\".toggles\", this.$el).bootstrapSwitch('offText', \"All\")\n\n                    if (self.group.get('relationship') == \"and\") {\n                        $(\".toggles\", this.$el).bootstrapSwitch(\"state\", false, false)\n                    } else {\n                        $(\".toggles\", this.$el).bootstrapSwitch(\"state\", true, false)\n                    }\n                    $(\".toggles\", this.$el).on('switchChange.bootstrapSwitch', function (a, b) {\n                        if ($(\".toggles\", self.$el).bootstrapSwitch('state') == false) {\n                            self.group.set('relationship', \"and\")\n                        }\n                        else {\n                            self.group.set('relationship', \"or\")\n                        }\n\n\n                    })\n\n                    for (var key in this.group.get('details').attributes) {\n                        var location = $('.detail-sections', this.$el)\n                        printGroup(key, this.group, location)\n                    }\n                    return this\n\n\n                }\n            })\n\n            for (var i in curTree.get(\"triggers\").models) {\n                var curGroup = new groupView({group: curTree.get('triggers').models[i]})\n                $('#disjoinedGroups').append(curGroup.$el)\n                $('#disjoinedGroups').append(\"<div style='height:25px'></div>\")\n                curGroup.render()\n\n\n            }\n\n\n        }\n\n\n\n    });\n    return ruleWizard\n});\n","\ndefine('text!templates/interactionRow.html',[],function () { return '<td>\\n    <%= providername %>\\n</td>\\n<td>\\n    <%= patientname %>\\n</td>\\n<td>\\n    <%= protocolname %>\\n</td>\\n<td>\\n  <%= eventcount %>\\n</td>\\n<td>\\n    <%= date %>\\n</td>\\n\\n';});\n\n","/***************************************************************************\n * Copyright (c) 2014 - Maven Medical\n * AUTHOR: 'Carlos Brenneisen'\n * DESCRIPTION: This Javascript handles an interaction row, normally shown when \n *              hovering over a user\n **************************************************************************/\ndefine('singleRow/interactionRow',[\n    // These are path alias that we configured in our main.js\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n    'globalmodels/contextModel',\n    'pathway/models/treeContext',\n    //Template\n    'text!templates/interactionRow.html'\n], function ($, _, Backbone, contextModel, treeContext, interactionRowTemplate) {\n\n    var InteractionRow = Backbone.View.extend({\n        tagName: \"tr class='interaction-row'\",\n        template: _.template(interactionRowTemplate),\n        initialize: function() {\n            var that=this\n            //$(document).on(\"swiperight\", that.flip())\n            contextModel.on('change:nextflips change:page',\n                            function() {\n                                if (contextModel.get('nextflips') && contextModel.get('page') == 'pathway') {\n                                    this.$el.hide()\n                                } else {\n                                    this.$el.show()\n                                }\n                            }, this)\n        },\n        render: function(){\n            $(this.el).html(this.template($.extend({viewid:this.cid},this.model.toJSON())));\n            return this;\n        },\n        events: {\n            'click': 'handleClick'\n        },\n        handleClick: function() {\n            var that=this\n            $.ajax({\n                url: '/interaction_details', \n                data: that.model.toJSON(), \n                success: function(data) {\n                    treeContext.suppressClick=true\n                    contextModel.set({history: data, historydetails: that.model, historyposition: 0})\n                },\n                error: function(a,b) {console.log('error',arguments)},\n                dataType: 'json',\n                method: 'GET'\n            })\n        }\n    });\n\n    return InteractionRow;\n\n});\n\n","define('widgets/interactionList.js',[\n    'jquery',     // lib/jquery/jquery\n    'underscore', // lib/underscore/underscore\n    'backbone',    // lib/backbone/backbone\n\n    //views\n    'globalmodels/interactionCollection',\n    'singleRow/interactionRow',\n\n    'globalmodels/contextModel',\n    'pathway/models/treeContext'\n], function ($, _, Backbone, InteractionCollection, InteractionRow, contextModel, treeContext) {\n    var interactionCollection;\n\n    var flip = function() {\n        var historyposition = contextModel.get('historyposition')\n        if (typeof historyposition !== 'undefined') {\n            contextModel.set('historyposition', historyposition+1)\n        }\n    }\n\n    var keyflip =  function(evt) {\n        if (evt.keyCode == 13 || evt.keyCode == 39) {\n\t    evt.preventDefault()\n            flip()\n        }\n    }\n    \n    $(document).keydown(function(evt) {keyflip(evt)})\n\n\n    var InteractionList = Backbone.View.extend({\n        extraData: {},\n        lastHeight: 0,\n        first: true,\n        initialize: function(arg) {\n            if (typeof arg.extraData !== \"undefined\") {\n                this.extraData = arg.extraData;\n            }\n            interactionCollection = new (InteractionCollection.extend({extraData: this.extraData}));\n            \n\t    this.template = _.template(arg.template); // this must already be loaded\n            this.$el.html(this.template());\n\t    interactionCollection.bind('add', this.addInteraction, this);\n\t    interactionCollection.bind('reset', this.reset, this);\n\t    //interactionCollection.bind('sync', this.render, this);\n\t    this.render('Loading ...');\n\t    contextModel.on('change:page change:history', function() {this.showhide()}, this)\n            contextModel.on('change:history change:historyposition change:historydetails', function() {this.updatehistory()}, this)\n\t},\n        updatehistory: function() {\n            var history = contextModel.get('history')\n            var historyposition = contextModel.get('historyposition')\n            var historydetails = contextModel.get('historydetails')\n            if (history == null || historyposition == null || historydetails == null) {\n                treeContext.suppressClick=false\n                Backbone.history.navigate('', true)\n                return\n            }\n            treeContext.suppressClick=true\n            var progress = (historyposition+1)\n            if (progress > history.length) {\n                contextModel.set({history: null, historyposition: null, historydetails: null})\n            } else {\n                var navstring = 'pathway/' + historydetails.get('protocol')\n                    + '/node/-' + history[historyposition]['node_id'] \n                    //+ '/patient/' + historydetails.get('patient') + '/' + historydetails.get('date').slice(0,10)\n\n                Backbone.history.navigate(navstring, true)\n                $('#historyheader').text(historydetails.get('protocolname') + \" pathway interaction replay: \" + historydetails.get('providername') +\n                                         \" with \" + historydetails.get('patientname') + ' on ' + history[historyposition].datetime)\n                $('.progress-bar', this.$el).width((progress*100/history.length)+'%')\n                \n                var action = history[historyposition]['action']\n\n                if (action == 'click') {\n                    $('#historydetails').text('traversing the tree')\n                } else if (action == 'send') {\n                    $('#historydetails').text('forwarding the chart')\n                } else if (action == 'copy') {\n                    $('#historydetails').text('copying protocol text to the clipboard')\n                } else if (action == 'followup') {\n                    $('#historydetails').text('scheduling a follow-up message')\n                } else if (action == 'checked') {\n                    $('#historydetails').text('checking an optional item ' + history[historyposition]['details'])\n                } else if (action == 'unchecked') {\n                    $('#historydetails').text('unchecking an optional item ' + history[historyposition]['details'])\n                } else {\n                    $('#historydetails').text('')\n                }\n                if (progress == history.length) {\n                    $('#nextinteraction').html('Finish')\n                } else {\n                    $('#nextinteraction').html('Next')\n                }                        \n            }\n        },\n        showhide: function() {\n            \n            var page = contextModel.get('page')\n\t    if (page=='home') {\n                this.$el.show()\n                $(this.interactioncontrols).hide()\n                $(this.interactionlist).show()\n            } else if (page=='pathway' && contextModel.get('history')) {\n                this.$el.show()\n                $(this.interactionlist).hide()\n                $(this.interactioncontrols).show()\n\t    } else {\n\t\tthis.$el.hide()\n\t    }\n        },\n\trender: function(empty_text) {\n            this.$el.html(this.template());\n            if (interactionCollection.length) {\n                \n            }\n\t    this.addAll();\n            this.interactionlist = $('#listinteractions', this.$el);\n            var interactionscroll = $('.interaction-scroll', this.$el)\n            interactionscroll.scroll(function(e) {\n                if(interactionscroll.scrollTop() + interactionscroll.innerHeight() + 100 >= interactionscroll[0].scrollHeight) {\n                    interactionCollection.more();\n                }\n                return false;\n            });\n            \n            this.interactioncontrols = $('#interactioncontrols', this.$el)\n            $('#nextinteraction', this.$el).click(function() {flip()})\n            $(this.interactionlist).on('show', function(){\n                //make sure that interaction list is correct when loaded (target user's interactions vs. current user interactions)\n                interactionCollection.reset();\n                interactionCollection.initialize();\n            });\n            $(\".refreshButton\", this.$el).click(function(event){\n                $('.interactiontable > tbody', this.$el).empty();\n                interactionCollection.refresh();\n            });\n            $(\".refreshButton\", this.$el).hover(function(event) {\n                $(event.target).attr('title', \"Last Refresh: \" + interactionCollection.getLastRefresh());\n            });\n            this.showhide()\n\t},\n\taddAll: function(empty_text) {\n\t    this.reset();\n\t    var nonempty = false;\n\t    if (interactionCollection.length) {\n\t\tfor(interaction in interactionCollection.models) {\n\t\t    this.addInteraction(interactionCollection.models[interaction]);\n\t\t    nonempty = true;\n\t\t}\n\t    }\n            else {\n                $('.interactiontable > thead', this.$el).show();\n                $('.interaction-control-row', this.$el).show();\n                this.showhide();\n                var interactionlist = $('.interaction-scroll', this.$el);\n                setTimeout(function () {\n                    var interactionHeight = interactionlist.innerHeight();\n                    if (this.lastHeight != interactionHeight && interactionHeight < parseInt(interactionlist.css('max-height'))) {\n                        this.lastHeight = interactionHeight;\n                        interactionCollection.more();\n                    }\n                }, 500);\n            }\n\t},\n\taddInteraction: function(interaction) {\n\t    var interactionrow = new InteractionRow({model: interaction});\n\t    $('.interactiontable', this.$el).append(interactionrow.render().el);\n\t    this.showhide();\n        //interactionrow.events();\n\t},\t\n\treset: function() {\n\t    $('.interactiontable > tbody', this.$el).empty();\n\t    this.$el.hide();\n\t},\n    });\n\n    return InteractionList;\n\n});\n\n","define('jquery-stub',[], function() {return jQuery})\n;\n","\ndefine('text!../templates/settings.html',[],function () { return '<div class = \"widget-column col-sm-12\">\\n<div class=\"modal-dialog modal-lg\" id=\"settings\" xmlns=\"http://www.w3.org/1999/html\">\\n    <div class=\"modal-content\">\\n        <div class=\"modal-body\">\\n            <h3><b>User Settings</b></h3>\\n            <div class=\"container col-md-12\">\\n                <p>Official Name: <input id=\"official-name-input\" type=\"text\" value=\"<%=official_name %>\" autofocus> </p>\\n                <p>Display Name: <input id=\"display-name-input\" type=\"text\" value=\"<%= display %>\" > </p>\\n                <div>\\n                        <button id=\"save-settings\">Save</button>\\n                        <button id=\"cancel-settings\">Cancel</button>\\n                </div>\\n            </div>\\n            <div style=\"clear:both; overflow: auto;\">\\n                <h5><b>Change Password</b></h5>\\n\\n                <div style=\"width:49%; float:left;\">\\n                <p><b>Old</b> Password: <input id=\"login-password\" type=\"password\" placeholder=\"password\" name=\"password\"></p>\\n                <p><b>New</b> Password: <input id=\"login-new-password\" type=\"password\" name=\"password\" placeholder=\"password\"></p>\\n                <p><b>Confirm New</b> Password: <input id=\"login-new-password2\" type=\"password\" name=\"password\" placeholder=\"password\"></p>\\n                </div>\\n\\n                <div style=\"width:49%; float:left;\">\\n                    <div> New passwords must contain:</div>\\n                    <ul>\\n                        <li>At least 8 characters <i id=\\'pw-len-cb\\'></i></li>\\n                        <li>A lower-case character <i id=\\'pw-low-cb\\'></i></li>\\n                        <li>An upper-case character <i id=\\'pw-up-cb\\'></i></li>\\n                        <li>A number<i id=\\'pw-num-cb\\'></i></li>\\n                    </ul>\\n                    <div> And it must be different from the old password <i id=\"pw-diff-cb\"></i></div>\\n                    <div>\\n                        <button id=\"update-password\">Update Password</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n</div>\\n';});\n\n","\ndefine('text!../templates/customerList.html',[],function () { return '<div class = \"widget-column col-sm-12\" style=\"clear: both;\">\\n\\n<div class=\"row customerlist\" style=\"margin: auto; width: 100%;\">\\n    <div class=\"widget-header\">\\n    <span class=\"headings title\">Customers</span>\\n        <button type=\"button\" class=\"btn btn-default btn-xs refreshButton\" data-dismiss=\"modal\" style=\"margin-left:10px; color: #46ECBD; font-size: 10px;\">\\n            <span class=\"glyphicon glyphicon-refresh\"></span>\\n        </button>\\n    </div>\\n    <div class=\"customeraccordion\" style=\"overflow-y:auto; max-height:500px; width:100%\">\\n        <table class=\"table table-condensed table-hover customertable\" style=\"width:100%; padding: 0;\">\\n        <col width=\"5%\">\\n        <col width=\"43%\">\\n        <col width=\"13%\">\\n        <col width=\"17%\">\\n        <col width=\"11%\">\\n        <col width=\"*\">\\n        <thead>\\n            <tr>\\n                <th align=\"left\" id=\"cus_id\">ID</th>\\n                <th align=\"left\" id=\"cus_name\">Name</th>\\n                <th align=\"left\" id=\"cus_abbr\">Abbreviation</th>\\n                <th align=\"left\" id=\"cus_license_exp\">License Exp</th>\\n                <th align=\"left\" id=\"cus_license_typ\"># Licenses</th>\\n                <th align=\"left\"></th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n        </tbody>\\n        </table>\\n    </div>\\n    <div class=\"save-settings-row row\">\\n        <span id=\"save-customer-message\" class=\"setting-option option-left\">&nbsp;</span>\\n        <div class=\"setting-option option-right\"><button id=\"save-customer-changes\" class=\"btn btn-default\">Save Changes</button></div>\\n    </div>\\n</div>\\n\\n</div>';});\n\n","\ndefine('text!../templates/welcome.html',[],function () { return '        <div class=\"modal-header\">\\n            <h4 class=\"modal-title\">Welcome <%= display %></h4>\\n        </div>\\n\\n        <div class=\"modal-body\">\\n            <span class=\"headings title\">Navigating Interactive Clinical Pathways</span>\\n\\n            <div>\\n                <p>\\n                    Navigating starts by clicking on a node, and working down the decision tree. The tree path changes\\n\\n                    from gray to providing a visual cue of the selected path. Your active node, or most recent click is\\n\\n                    outlined in purple, and a yellow shaded box indicates a collapsed node. A care protocol is the final\\n                    node\\n\\n                    for a branch, and is indicated by the green outline. This protocol can be copied and pasted to your\\n                    EHR\\n\\n                    by clicking the copy icon.\\n                </p>\\n                <img src=\"../images/temp/Pathway_at_protocal_screenshot.png\" style=\"display: block; width: 50%; height: 50%; margin-left: auto;\\n    margin-right: auto\">\\n            </div>\\n\\n        </div>\\n\\n';});\n\n","\ndefine('text!../templates/interactionScroll.html',[],function () { return '<div class = \"widget-column\">\\n  <div id=\\'listinteractions\\'>\\n    <span class=\"headings title\">Pathway Interactions</span>\\n    <button type=\"button\" class=\"btn btn-default btn-xs refreshButton\" data-dismiss=\"modal\" style=\"margin-left:10px; color: #46ECBD; font-size: 10px;\">\\n      <span class=\"glyphicon glyphicon-refresh\"></span>\\n    </button>\\n    <div class=\"interactionlist interaction-scroll\" style=\"clear:both;\">\\n      <div class=\"interactionaccordion\">\\n        <table class=\"table table-condensed table-hover interactiontable\">\\n          <col width=\"20%\">\\n          <col width=\"20%\">\\n          <col width=\"20%\">\\n          <col width=\"20%\">\\n          <thead >\\n            <tr>\\n              <th align=\"left\">User</th>\\n              <th align=\"left\">Patient</th>\\n              <th align=\"left\">Pathway</th>\\n              <th align=\"left\">Interaction Count</th>\\n              <th align=\"left\">Time</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n  <div id=\\'interactioncontrols\\'>\\n    <span id=\\'historyheader\\' class=\"headings title\">Pathway Interaction Replay:</span>\\n    <div class=\"progress\">\\n      <div class=\"progress-bar\" role=\"progressbar\" style=\"width: <%= (typeof width !== \\'undefined\\' && width) || 0 %>%;\">\\n      </div>\\n    </div>\\n    <div id=\\'historydetails\\'></div>\\n    <button id=\\'nextinteraction\\' type=\\'button\\' class=\\'btn btn-default\\'>Next</button>\\n  </div>\\n</div>\\n';});\n\n","\ndefine('text!../templates/patientInfo.html',[],function () { return '<div class = \"widget-column col-sm-12\">\\n  <div class=\"pat-nav\">\\n    <nav class=\"navbar navbar-default navbar-fixed-top navbar-lower\" role=\"navigation\">\\n      <div class=\"container\" style=\"display:table\">\\n\\t<div class=\"col-sm-12 pat-info\">\\n          <div class=\"row pat-title\">\\n            Patient Name:\\n\\t  </div>\\n\\t  <div class=\"row\">\\n            <span id=\"pat-name\"><b><%= name %></b></span> \\n\\t    <span style=\"white-space:nowrap\">(<%= gender %>, <%= DOB %>)</span>\\n\\t  </div>\\n\\t</div>\\n      </div>\\n    </nav>\\n  </div>\\n  <!-- /Patient Header -->\\n</div>\\n';});\n\n","\ndefine('text!../templates/topBanner.html',[],function () { return '<!-- #section:basics/sidebar.mobile.toggle -->\\n <button data-target=\"#sidebar\"   data-toggle=\"collapse\" type=\"button\" class=\"navbar-toggle menu-toggler pull-left fixed display\" id=\"menu-toggler\">\\n   <span class=\"sr-only\">Toggle sidebar</span>\\n  <i class=\"ace-icon fa fa-bars white bigger-125\"></i>\\n </button>\\n\\n  <!-- TODO: need to have it within a page condition statement -->\\n  <button data-target=\"#fixed-topB\" data-toggle=\"collapse\" type=\"button\" class=\"pull-left navbar-toggle collapsed\">\\n\\t<span class=\"sr-only\">Toggle sidebar</span>\\n\\t<i class=\"ace-icon fa fa-gear white bigger-125\"></i>\\n </button>\\n\\n\\n    <div class=\"navbar-header pull-left\">\\n     <a href=\"#\" class=\"navbar-brand\">\\n                        <small>\\n                            <i class=\"fa fa\"></i>\\n                            maven\\n                        </small>\\n                    </a>\\n    </div><!-- /.navbar-header -->\\n\\n\\n    <div class=\"navbar-buttons navbar-header pull-right\">\\n      <ul class=\"nav ace-nav\">\\n        <!-- user buttons such as messages, notifications and user menu -->\\n\\n           <!-- #section:basics/navbar.user_menu -->\\n                        <li class=\"light-blue\">\\n                            <a data-toggle=\"dropdown\" href=\"#\" class=\"dropdown-toggle\">\\n                                <!--<img class=\"nav-user-photo\" src=\"ace/assets/avatars/user.jpg\" alt=\"Jason\\'s Photo\" />-->\\n                                <i class=\"glyphicon glyphicon-user\" style=\"color: whitesmoke;\"></i>\\n                                <span class=\"user-info\">\\n                                    <small>Welcome,</small>\\n                                    <%= display %>\\n                                </span>\\n\\n                                <i class=\"ace-icon fa fa-caret-down\"></i>\\n                            </a>\\n\\n                            <ul class=\"user-menu dropdown-menu-right dropdown-menu dropdown-yellow dropdown-caret dropdown-close\">\\n                                <li id=\"profile_button\">\\n                                    <a href=\"#\">\\n                                        <i class=\"ace-icon fa fa-user\"></i>\\n                                        Profile\\n                                    </a>\\n                                </li>\\n\\n                                <li class=\"divider\"></li>\\n\\n                                <li>\\n                                    <a href=\"#logout\">\\n                                        <i class=\"ace-icon fa fa-power-off\"></i>\\n                                        Logout\\n                                    </a>\\n                                </li>\\n                            </ul>\\n                        </li>\\n\\n                        <!-- /section:basics/navbar.user_menu -->\\n      </ul>\\n    </div><!-- /.navbar-buttons -->\\n\\n\\n    <nav class=\"navbar-menu pull-left\">\\n      <!-- optional menu & form inside navbar -->\\n    </nav><!-- /.navbar-menu -->\\n\\n\\n';});\n\n","\ndefine('text!../templates/maveninfo.html',[],function () { return '<div class=\"widget-column col-sm-12\">\\n    <div id=\"mavenInfo-header\" class=\"row heading\">\\n\\n        <button type=\"button\" class=\"close\">\\n            <span class=\"glyphicon glyphicon-remove\" style=\"font-size: 13px; color: #ffffff;\"></span>\\n        </button>\\n\\n         <span id=\"mavenInfo-title\" class=\"headings title\">\\n             <%=name%>\\n         </span>\\n\\n    </div>\\n    <div class=\"row nodeInfo\">\\n        <span>\\n            <%= (typeof sidePanelText !== \\'undefined\\') ? sidePanelText : \\'\\' %>\\n        </span>\\n    </div>\\n</div>\\n';});\n\n","\ndefine('text!../templates/providerProfile.html',[],function () { return '<div class=\"modal-dialog modal-lg\" id=\"profile\" xmlns=\"http://www.w3.org/1999/html\">\\n<div class=\"modal-content\">\\n\\n<div class=\"tabbable\">\\n<ul id=\"profile-tabs\" class=\"nav nav-tabs \">\\n<!--    <li class=\"active\">\\n        <a href=\"#pane1\" role=\"tab\" data-toggle=\"tab\" class=\"headings\">\\n            <span class=\"glyphicon glyphicon-user\"></span>\\n            About me\\n        </a>\\n    </li>\\n    <li>\\n        <a href=\"#pane2\" role=\"tab\" data-toggle=\"tab\" class=\"headings\">\\n            <span class=\"glyphicon glyphicon-star\"></span>\\n            My Favorite\\n        </a></li>\\n    <li>\\n        <a href=\"#pane3\" role=\"tab\" data-toggle=\"tab\" class=\"headings\">\\n            <span class=\"glyphicon glyphicon-thumbs-up\"></span>/\\n            <span class=\"glyphicon glyphicon-thumbs-down\"></span>\\n            Liked / disliked\\n        </a></li>\\n    <li>\\n        <a href=\"#pane4\" role=\"tab\" data-toggle=\"tab\" class=\"headings\">\\n            <span class=\"glyphicon glyphicon-tasks\"></span>\\n            My Actions\\n        </a></li>-->\\n    <li class=\"active\"> <!-- Active tab is the first tab shown -->\\n        <a href=\"#pane5\" role=\"tab\" data-toggle=\"tab\" class=\"headings\">\\n            <span class=\"glyphicon glyphicon-tasks\"></span>\\n            My Audits\\n        </a></li>\\n    <li>\\n        <a href=\"#pane6\" role=\"tab\" data-toggle=\"tab\" class=\"headings\">\\n            <span class=\"glyphicon glyphicon-cog\"></span>\\n            Settings\\n        </a></li>\\n</ul>\\n\\n<div class=\"tab-content\">\\n<!--    <div id=\"pane1\" class=\"tab-pane active pane-content\">\\n        <div class=\"panel panel-default\">\\n            <div class=\"panel-body\">\\n\\n                <div class=\"row\">\\n                    <h2 class=\"headings\">Dr.Maven</h2>\\n                </div>\\n                <div class=\"row\">\\n                    <div class=\"col-md-8\">\\n\\n\\n                        <span class=\"headings title alerts\">Speciality:</span>\\n\\n                        <p> Pediatrics</p>\\n\\n                        <span class=\"headings title alerts\"> Departments:</span>\\n\\n                        <p> Blah, Blah Blah</p>\\n\\n                    </div>\\n                    <div class=\"col-md-3\">\\n                        <span class=\"headings title alerts\"> Facts About Me:</span>\\n\\n                         <p>\\n                            <span class=\"glyphicon glyphicon glyphicon-chevron-right\"></span>\\n                            20 Years of Experience</p>\\n\\n                        <p>\\n                            <span class=\"glyphicon glyphicon glyphicon-chevron-right\"></span>\\n                            250 Patients</p>\\n\\n                        <p>\\n                            <span class=\"glyphicon glyphicon glyphicon-chevron-right\"></span>\\n                            50 Procedures</p>\\n\\n                        <p><span class=\"glyphicon glyphicon glyphicon-chevron-right\"></span>\\n                            120k Orders</p>\\n\\n                        <p><span class=\"glyphicon glyphicon glyphicon-chevron-right\"></span>\\n                            30 Alerts</p>\\n\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n    <div id=\"pane2\" class=\"tab-pane pane-content\">\\n\\n        <div class=\"panel panel-default\">\\n            <div class=\"panel-heading rule\">\\n                <h3 class=\"panel-title\">Rule 1</h3>\\n            </div>\\n            <div class=\"panel-body\">\\n                <div class=\"panel panel-default\">\\n                    <div class=\"panel-heading\">Evidence 1\\n                                <span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span></div>\\n\\n                    <div class=\"panel-body\">\\n                        Panel content\\n                    </div>\\n                </div>\\n\\n                <div class=\"panel panel-default\">\\n                    <div class=\"panel-heading\">Evidence 2\\n                                <span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span></div>\\n\\n                    <div class=\"panel-body\">\\n                        Panel content\\n                    </div>\\n                </div>\\n\\n                <div class=\"panel panel-default\">\\n                    <div class=\"panel-heading\">Evidence 3\\n                                <span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span></div>\\n\\n                    <div class=\"panel-body\">\\n                        Panel content\\n                    </div>\\n                </div>\\n\\n\\n            </div>\\n        </div>\\n\\n        <div class=\"panel panel-default\">\\n            <div class=\"panel-heading rule\">\\n                <h3 class=\"panel-title\">Rule 2</h3>\\n            </div>\\n            <div class=\"panel-body\">\\n                <div class=\"panel panel-default\">\\n                    <div class=\"panel-heading\">Evidence 1\\n                                <span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span></div>\\n\\n                    <div class=\"panel-body\">\\n                        Panel content\\n                    </div>\\n                </div>\\n\\n                <div class=\"panel panel-default\">\\n                    <div class=\"panel-heading\">Evidence 2\\n                                <span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span></div>\\n\\n                    <div class=\"panel-body\">\\n                        Panel content\\n                    </div>\\n                </div>\\n\\n                <div class=\"panel panel-default\">\\n                    <div class=\"panel-heading\">Evidence 3\\n                                <span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span>\\n                    </div>\\n\\n                    <div class=\"panel-body\">\\n                        Panel content\\n                    </div>\\n                </div>\\n\\n\\n            </div>\\n        </div>\\n\\n\\n    </div>\\n    <div id=\"pane3\" class=\"tab-pane pane-content\">\\n        <div class=\"panel panel-default\">\\n            <div class=\"panel-heading\">Rule 1</div>\\n            <div class=\"panel-body\">\\n                <p>Info about rule</p>\\n            </div>\\n\\n            <ul class=\"list-group\">\\n                <li class=\"list-group-item\">Evidence 1\\n                 <span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span>\\n                </li>\\n                <li class=\"list-group-item\">Evidence 2\\n                <span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span>\\n                </li>\\n                <li class=\"list-group-item\">Evidence 3\\n                <span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span>\\n                </li>\\n                <li class=\"list-group-item\">Evidence 4\\n                <span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span>\\n                </li>\\n                <li class=\"list-group-item\">Evidence 5<span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span>\\n                </li>\\n            </ul>\\n        </div>\\n<div class=\"panel panel-default\">\\n            <div class=\"panel-heading\">Rule 2</div>\\n            <div class=\"panel-body\">\\n                <p>Info about rule</p>\\n            </div>\\n\\n            <ul class=\"list-group\">\\n                <li class=\"list-group-item\">Evidence 1\\n                 <span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span>\\n                </li>\\n                <li class=\"list-group-item\">Evidence 2\\n                <span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span>\\n                </li>\\n                <li class=\"list-group-item\">Evidence 3\\n                <span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span>\\n                </li>\\n                <li class=\"list-group-item\">Evidence 4\\n                <span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span>\\n                </li>\\n                <li class=\"list-group-item\">Evidence 5<span class=\"badge\">\\n                                    <span class=\"glyphicon glyphicon-star\"></span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-up\">85%</span>\\n                                    <span class=\"glyphicon glyphicon-thumbs-down\">15%</span>\\n                                    <span class=\"glyphicon glyphicon-comment\">5</span>\\n                                </span>\\n                </li>\\n            </ul>\\n        </div>\\n\\n    </div>\\n    <div id=\"pane4\" class=\"tab-pane pane-content\">\\n        <h4>Pane 4 Content</h4>\\n    </div>-->\\n    <div id=\"pane5\" class=\"tab-pane active pane-content audit-panel\">\\n        <div class=\"panel panel-default\" id=\"pane5-content\">\\n        </div>\\n    </div>\\n    <div id=\"pane6\" class=\"tab-pane pane-content\">\\n        <div class=\"panel panel-default\">\\n            <div class=\"panel-heading rule\">\\n                <h3 class=\"panel-title\">Profile Settings</h3>\\n            </div>\\n            <div class=\"panel-body\">\\n                <div class=\"row\">\\n                    <div class=\"col-md-6\">\\n                        <div class=\"setting-row\">Official Name: <input id=\"official-name-input\" type=\"text\" value=\"<%=official_name %>\" autofocus> </div>\\n                        <div class=\"setting-row\">Display Name: <input id=\"display-name-input\" type=\"text\" value=\"<%= display %>\" > </div>\\n                        <div class=\"setting-footer\">\\n                            <button id=\"save-settings\" class=\"btn btn-default\">Save</button>\\n                            <button id=\"cancel-settings\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancel</button>\\n                            <div id=\\'settings-save-status\\' class=\"save-status\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <!--\\n        <div class=\"panel panel-default\">\\n\\n            <div class=\"panel-heading rule\">\\n                <h3 class=\"panel-title\">Change Password</h3>\\n            </div>\\n            <div class=\"panel-body\">\\n                <div class=\"row\">\\n\\n                    <div class=\"col-md-6\">\\n                        <div class=\"setting-row\">Old Password: <input id=\"current-password\" type=\"password\" placeholder=\"password\" name=\"password\"></div>\\n                        <div class=\"setting-row\">New Password: <input id=\"new-password\" type=\"password\" name=\"password\" placeholder=\"password\"></div>\\n                        <div class=\"setting-row\">Confirm New Password: <input id=\"new-password2\" type=\"password\" name=\"password\" placeholder=\"password\"></div>\\n\\n                        <div class=\"setting-footer\">\\n                            <button id=\"change-password\" class=\"btn btn-default\">Update Password</button>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\"col-md-5\">\\n                        <div> New passwords must contain:</div>\\n                        <ul>\\n                            <li>At least 8 characters <i id=\\'pw-len-cb\\'></i></li>\\n                            <li>A lower-case character <i id=\\'pw-low-cb\\'></i></li>\\n                            <li>An upper-case character <i id=\\'pw-up-cb\\'></i></li>\\n                            <li>A number<i id=\\'pw-num-cb\\'></i></li>\\n                        </ul>\\n                        <div> And it must be different from the old password <i id=\"pw-diff-cb\"></i></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div> -->\\n    </div>\\n</div>\\n<!-- /.tab-content -->\\n</div>\\n<!-- /.tabbable -->\\n\\n<div class=\"modal-footer\" style=\"padding: 5px 20px 5px;\">\\n    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\\n</div>\\n</div>\\n\\n</div>\\n';});\n\n","require([\n    'text!../templates/settings.html',\n    'text!../templates/auditScroll.html',\n    'text!../templates/customerList.html',\n    'text!../templates/welcome.html',\n    'text!../templates/interactionScroll.html',\n    'text!../templates/patientInfo.html',\n    'text!../templates/topBanner.html',\n    'text!../templates/maveninfo.html',\n    'text!../templates/providerProfile.html',\n    'text!../templates/sidebar.html'\n], function() {})\n;\ndefine(\"textstub\", function(){});\n\n"]}