#!/bin/bash
SYSNAME=$1
DISKNAME=$1-data
MACHINEREGION=$2
MACHINETYPE=$3  # if machine type is empty - assume the machine already exists
DISKSIZE=$4
DEPLOYKEYFILE=$5
GITSERVERFINGERPRINTFILE=$6
DBPASSWORD=$7 
DBKEY=$8
DBCERT=$9
DBROOT=${10}

#echo create database: $@

# Check to see if DISKNAME already exists
if gcloud compute disks list | grep "^..${DISKNAME} "; then
    echo disk $DISKNAME already exists
    exit 1
fi
# Create the Disk
gcloud compute disks create $DISKNAME --size $DISKSIZE --type pd-standard --zone $MACHINEREGION

if [ ! -z "$MACHINETYPE" ]; then
    # only create the instance in it a machinetype is passed in
    # Check to see if SYSNAME already exists
    if gcloud compute instances list | grep "^..${SYSNAME} "; then
        echo instance $SYSNAME already exists
        exit 1
    fi

    # Create the Instance
    gcloud compute instances create $SYSNAME --zone $MACHINEREGION --machine-type $MACHINETYPE --image centos-7  --tags dev ssh
    if [ $? -eq 0 ]; then
        sleep 60
    else
        echo gcloud compute instances create $SYSNAME failed
        exit 1
    fi
fi

# Make sure that the Instance was created before trying to attach the disk to the instance
if ! (gcloud compute instances list | grep $SYSNAME) then
    echo gcloud compute instances list does not show instance $SYSNAME
    exit 1
fi
# Make sure that the Disk was created before trying to attach the disk to the instance
if ! (gcloud compute disks list | grep $DISKNAME) then
    echo gcloud compute disks list does not show disk $DISKNAME
    exit 1
fi
# Attach the Disk to the Instance
gcloud compute instances attach-disk $SYSNAME --disk $DISKNAME --zone $MACHINEREGION

# Send the Setup Scripts needed to install the components for the database host
gcloud compute copy-files $DEPLOYKEYFILE $SYSNAME:~/deploy-key --zone $MACHINEREGION
gcloud compute copy-files $GITSERVERFINGERPRINTFILE $SYSNAME:~/github_server_fingerprint --zone $MACHINEREGION
gcloud compute copy-files setup_scripts/common.sh setup_scripts/database_only.sh setup_scripts/database_add_ssl.sh setup_scripts/postgres_helper.sh .bashrc maven.config $SYSNAME:~/ --zone $MACHINEREGION
#gcloud compute copy-files ~/maven/app/database $SYSNAME:~/database --zone $MACHINEREGION

if [ -r "$DBKEY" ]; then
    gcloud compute copy-files $DBKEY $SYSNAME:~/db-server.key --zone $MACHINEREGION
    gcloud compute copy-files $DBCERT $SYSNAME:~/db-server.crt --zone $MACHINEREGION
    gcloud compute copy-files $DBROOT $SYSNAME:~/db-cacert.crt --zone $MACHINEREGION
fi

# Run the Setup Scripts
#echo "bash common.sh" | gcloud compute ssh $SYSNAME --zone $MACHINEREGION
echo gcloud compute ssh $SYSNAME --zone $MACHINEREGION --ssh-flag="-t" --command "bash common.sh"
gcloud compute ssh $SYSNAME --zone $MACHINEREGION --ssh-flag="-t" --command "bash common.sh"
echo gcloud compute ssh $SYSNAME --zone $MACHINEREGION --ssh-flag="-t" --command "bash database_only.sh $DBPASSWORD"
gcloud compute ssh $SYSNAME --zone $MACHINEREGION --ssh-flag="-t" --command "bash database_only.sh $DBPASSWORD"
