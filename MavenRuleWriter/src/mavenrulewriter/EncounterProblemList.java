/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package mavenrulewriter;

/**
 *
 * @author Efisch
 */
public class EncounterProblemList extends javax.swing.JFrame implements ConditionFrame {

    /**
     * Creates new form EncounterDiagnosis
     */
    MavenRuleFrontend myParent; 
    EncounterProbListDetail editTarget;
    public EncounterProblemList(MavenRuleFrontend parent) {
        initComponents();
        myParent = parent;
    }
    public EncounterProblemList(MavenRuleFrontend parent, EncounterProbListDetail editTarget) {
        initComponents();
        myParent = parent;
        this.editTarget=editTarget;
        EncProbListSnomedField.setText(editTarget.getSnomed()+"");
        if (editTarget.isNegative()){
            EncProbListNegationBox.setSelected(true);
            EncounterProcedureTypeLabel.setText("Ignore Rule if the Following Procedure Occured in the Encounter (CPT Code)");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        OKButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        EncounterProcedureTypeLabel = new javax.swing.JLabel();
        EncProbListSnomedField = new javax.swing.JTextField();
        EncProbListNegationBox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        EncounterProcedureTypeLabel.setText("Follow Rule Only if The Following Problem is in the Encounter Problem List (Snomed ID)");

        EncProbListNegationBox.setText("Dissalow Problem");
        EncProbListNegationBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EncProbListNegationBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Create new Encounter Problem List Criterion");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(EncounterProcedureTypeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EncProbListSnomedField, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(EncProbListNegationBox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EncounterProcedureTypeLabel)
                    .addComponent(EncProbListSnomedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EncProbListNegationBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OKButton)
                    .addComponent(jButton2)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EncProbListNegationBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EncProbListNegationBoxActionPerformed
        if (EncProbListNegationBox.isSelected()){
            EncounterProcedureTypeLabel.setText("Ignore Rule if the Following Problem is in the Encounter Problem List (Snomed ID)");
            
        } else {
            EncounterProcedureTypeLabel.setText("Follow Rule Only if The Following Problem is in the Encounter Problem List (Snomed ID)");
            
        }
    }//GEN-LAST:event_EncProbListNegationBoxActionPerformed

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        Detail n = getDetail();
        if (editTarget!=null){
            n.name = editTarget.name;
        } 
        myParent.recieveDetail(n);
        this.dispose();
    }//GEN-LAST:event_OKButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.myParent.setEnabled(true);
        this.dispose();       
    }//GEN-LAST:event_jButton2ActionPerformed
    public Detail getDetail(){
            EncounterProbListDetail result = new EncounterProbListDetail("");
            result.setSnomed(Integer.parseInt(EncProbListSnomedField.getText()));
            result.setNegative(this.EncProbListNegationBox.isSelected());
            return result;
    }
    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox EncProbListNegationBox;
    private javax.swing.JTextField EncProbListSnomedField;
    private javax.swing.JLabel EncounterProcedureTypeLabel;
    private javax.swing.JButton OKButton;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    
  
}
